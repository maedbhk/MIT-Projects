[
  {
    "objectID": "methods/model-interpretability.html",
    "href": "methods/model-interpretability.html",
    "title": "Model Interpretability",
    "section": "",
    "text": "intrinsic or post hoc?\n\nintrinsic: is interpretability achieved by restricting the complexity of the model. ML models are considered “intrinsically” interpretable due to their simple structure (short decision trees or sparse linear models)\nposthoc: or by applying methods that analyze the model after training. ML models are considered “post hoc” models if they requir interpretation methods after model training. An example of such a model is permutation feature importance. Post hoc methods can be applied to intrinsically interpretable models. For example, permutation feature importance can be computed for decision trees.\n\ncounterfactual explanations: to explain the prediction of a data instance, the method finds a similar data point by changing some of the features for which the predicted outcome changes in a relevent way.\nintrinsically interpretable model: one solution to interpreting black box models is to approximate them (either globally or locally) with an interpretable model. the interpretable model is interpreted by looking at internal model parameters or feature summary statistics.\nthe interpretaton of regression weights in a linear model is a model-specific interpretation. by definition, the interpretation of intrinsically interpretable models is always model-specific.\nmodel-agnostic tools can be used on any machine learning model an are applied after the model has been trained (post hoc)."
  },
  {
    "objectID": "methods/model-interpretability.html#scope-of-interpretability",
    "href": "methods/model-interpretability.html#scope-of-interpretability",
    "title": "Model Interpretability",
    "section": "Scope of interpretability",
    "text": "Scope of interpretability\n\nglobal model interpretablity helps to understand the distribution of target outcome based on the features (difficult to achieve in practice).\nany model that exceeds a handful of parameters or weights is unlikely to fit into the short-term memory of the average human. arguably, you cannot really imagine a linear model with 5 features - as it would mean drawing the estimated hyperplane mentally in a 5-dimensional space. any feature space with more than 3 dimensions is simply inconceivable for humans.\nwhen people try to comprehend a model, they consider only parts of it, such as weights in linear models.\n\n\nhow do parts of the model affect predictions?\n\nit’s impossible to memorize all the weights (plus the joint distribution of all features) - but we can understand a single weight. global model interpretability is usually out of reach, but we can at least understand a single weight.\nnot all models are interpretable at a parameter level - for linear models, the interpretable parts are the weights, for trees it’s the splists (selected features plus cut-off pointss), and leaf node predictions."
  },
  {
    "objectID": "methods/feature-engineering.html",
    "href": "methods/feature-engineering.html",
    "title": "Feature Engineering",
    "section": "",
    "text": "preprocessing steps that transform raw data into features that can be used in ML algorithms such as predictive models.\nIt is during the feature engineering process that the most useful predictor variables are created an selected for the predictive model.\nfour main steps: feature creation, transformations, feature extraction, and feature selection"
  },
  {
    "objectID": "methods/feature-engineering.html#feature-creation",
    "href": "methods/feature-engineering.html#feature-creation",
    "title": "Feature Engineering",
    "section": "Feature creation",
    "text": "Feature creation\n\nidentifiying variables that will be most useful in the predictive model\nsubjective process, requiring human intervention"
  },
  {
    "objectID": "methods/feature-engineering.html#transformations",
    "href": "methods/feature-engineering.html#transformations",
    "title": "Feature Engineering",
    "section": "Transformations",
    "text": "Transformations\n\nmanipulating predictor variables to improve model performance (e.g., scaling etc.)"
  },
  {
    "objectID": "methods/feature-engineering.html#feature-extraction",
    "href": "methods/feature-engineering.html#feature-extraction",
    "title": "Feature Engineering",
    "section": "Feature extraction",
    "text": "Feature extraction\n\nautomatic creation of new variables by extracting them from raw data - reducing the volume of data into a more manageable set for modeling (e.g., cluster analysis, edge detection, pca)"
  },
  {
    "objectID": "methods/feature-engineering.html#feature-selection",
    "href": "methods/feature-engineering.html#feature-selection",
    "title": "Feature Engineering",
    "section": "Feature Selection",
    "text": "Feature Selection\n\nthese algorithms analyze and rank various features to determine which features are irrelevant and should be removed, which features are redundant etc. which features are most useful for the model and should therefore be prioritized."
  },
  {
    "objectID": "methods/feature-engineering.html#why-is-feature-selection-important",
    "href": "methods/feature-engineering.html#why-is-feature-selection-important",
    "title": "Feature Engineering",
    "section": "Why is feature selection important?",
    "text": "Why is feature selection important?\n\nsimplify the model by reducing the number of parameters\ndecrease training time\nreduce overfitting by enhancing generalization\navoid the curse of dimensionality\n\nSupervised options:\n\nFiltering based on some criterion (correlation between variables) - feature importance\nSearch problem: wrapped-based solution that selects features using something like recursive feature elimination\nEmbedding/Intrinsic: algorithms like Lasso and random forest have built-in feature selection methods\n\nUnsupervised\n\nThese methods don’t have target variable - instead remove redundant variables\n\nDimensionality Reduction\n\nProject input data into a lower-dimensional feature space\n\n\n\n\n\n\nFeature Selection Techniques"
  },
  {
    "objectID": "methods/feature-engineering.html#feature-selection-exploratory",
    "href": "methods/feature-engineering.html#feature-selection-exploratory",
    "title": "Feature Engineering",
    "section": "Feature Selection: Exploratory",
    "text": "Feature Selection: Exploratory\n\nFeature importance:\n\ngives you a score for each feature of your data, the higher the score, the more important or relevent that feature is to your target feature\ninbuilt sklearn classes: random forest classifiers from sklearn.ensemble import ExtraTreesClassifier\n\nCorrelation matrix heatmap\n\nshows how features are related to each other or the target feature sns.heatmap"
  },
  {
    "objectID": "methods/model-evaluation.html",
    "href": "methods/model-evaluation.html",
    "title": "Model Evaluation",
    "section": "",
    "text": "accuracy: most used metric to valuate classification tasks in ML: ratio of the number of correct predictions to the total number of examples.\nit has limitations, which is why other metrics like precision, recall, F1-score etc. have been used to mitigate these problems."
  },
  {
    "objectID": "methods/model-evaluation.html#what-is-uar",
    "href": "methods/model-evaluation.html#what-is-uar",
    "title": "Model Evaluation",
    "section": "what is UAR?",
    "text": "what is UAR?\n\nUAR stands for unweighted average recall - and this is a good metric to optimize when the sample class ratio is imbalanced and it is closely related to accuracy."
  },
  {
    "objectID": "methods/index.html",
    "href": "methods/index.html",
    "title": "Overview",
    "section": "",
    "text": "Instead of writing notes about methods in my lab notebook, I’m writing them here.."
  },
  {
    "objectID": "methods/smote.html",
    "href": "methods/smote.html",
    "title": "Working with imbalanced data",
    "section": "",
    "text": "useful article on smote another useful article"
  },
  {
    "objectID": "methods/unsupervised-learning.html",
    "href": "methods/unsupervised-learning.html",
    "title": "Unsupervised Learning",
    "section": "",
    "text": "UMAP\n\ngeneral purpose manifold learning and dimension reduction algorithm (compatible wit scikit-learn)"
  },
  {
    "objectID": "methods/modeling-EHR.html",
    "href": "methods/modeling-EHR.html",
    "title": "ClinicalBERT",
    "section": "",
    "text": "notes on paper by Huang et al. 2019 and a useful medium post on the paper"
  },
  {
    "objectID": "methods/modeling-EHR.html#what-is-clinicalbert",
    "href": "methods/modeling-EHR.html#what-is-clinicalbert",
    "title": "ClinicalBERT",
    "section": "What is clinicalBERT?",
    "text": "What is clinicalBERT?\n\nClinicalBERT is a flexible framework used to represent clinical notes. It uncovers high-quality relationships between medical concepts, as judged by physicians.\nunstructured, high-dimensional and sparse information such as clinical notes are difficult to use in clinical machine learning models.\nClinical notes contain significant clinical value, compared to structured features, clinical notes provide a richer picture of the patient since they describe symptoms, reasons for diagnoses, radiology results, daily activities and patient history. Problem: for time-stretched physicians (example: thosyoue working in intensive unit) can’t digest/compile all of the information presented across EHR, therefore, the question is: can a model do it for them?\nUtility of clinicalBERT: actively predicting readmission has clinical significance, as it may improve efficiency and reduce the burden on intensive care unit doctors.\nClinicalBERT has developed a discharge support model that processes patient notes and dynamically assigns a risk score of whether the patient will be readmitted wtihin 30 days.\nClinicalBERT can also be adapted to other tasks such as diagnosis prediction, mortality risk estimation, and length-of-stay assessment."
  },
  {
    "objectID": "methods/modeling-EHR.html#how-is-clinicalbert-different-from-other-models",
    "href": "methods/modeling-EHR.html#how-is-clinicalbert-different-from-other-models",
    "title": "ClinicalBERT",
    "section": "How is ClinicalBERT different from other models?",
    "text": "How is ClinicalBERT different from other models?\n\nMuch of the previous work has used information at discharge whereas ClinicalBERT can predict readmission during a patient’s stay.\nMakinga prediction using a discharge summary at the end of hte stay means that there are fewer opportunities to reduce the chance of readmission.\nClinicalBERT predicts readmission at any timepoint since the patient was admitted.\nCompared to two popular models of clinical text: Word2Vec and FastText, clinicalBERT more accurately captures clinical word similarity.\nWhere BERT is trained on BooksCorpus and Wikipedia, ClinicalBERT is also pre-trained on clinical notes."
  },
  {
    "objectID": "methods/modeling-EHR.html#what-does-clinicalbert-do",
    "href": "methods/modeling-EHR.html#what-does-clinicalbert-do",
    "title": "ClinicalBERT",
    "section": "What does ClinicalBERT do?",
    "text": "What does ClinicalBERT do?\n\nLearns deep representations of clinical text, which can uncover clinical insights (predictions of disease), find relationships between treatments and outcomes\nTo evalute models on readmission prediction, a metric is defined based on a clinical challenge.\nmetric is alarm fatigue: useful classification rules for medicine have to have high positive predictive value (precision).\nThey evaluate model performance at a fixed positive predictive value\nThey find that ClinicalBERT outperforms competitive deep language models.\nImportantly, weights can be visualized to understand which elements of clinical notes are relevent to a prediction."
  },
  {
    "objectID": "methods/modeling-EHR.html#questions",
    "href": "methods/modeling-EHR.html#questions",
    "title": "ClinicalBERT",
    "section": "Questions:",
    "text": "Questions:\n\nAfter pre-training, ClinicalBERT is fine-tuned on a clinical task (e.g. readmission prediction). What if someone wants to use another clinical task (length of hospital stay, mortality risk estimation), are those weights available?"
  },
  {
    "objectID": "progress/week-24.html",
    "href": "progress/week-24.html",
    "title": "Week 24",
    "section": "",
    "text": "01/30-02/03"
  },
  {
    "objectID": "progress/week-24.html#done-and-to-do",
    "href": "progress/week-24.html#done-and-to-do",
    "title": "Week 24",
    "section": "Done and To-Do",
    "text": "Done and To-Do\n\nRe ran hbn models including age as a feature (it does make a difference for some)\nadded new results to hbn paper draft (very tentative) - compiling relevant references (+ papers to read)\nworked on results block for adhd + gender differences paper - ran new models for males and females separately (to determine which measures best classify adhd subtypes, and whether there are differences across males/females)\nwrote a job description for the item analysis project (response similarity across questionnaires) — then talked to Sooyoung who expressed interest as it is a good machine learning project + has reproschema component (e.g, putting HBN data dictionaries into standardized format)\nread some transdiagnostic papers (will link them later)\nstarted looking into ABCD phenotypic data — will focus on cbcl for now"
  },
  {
    "objectID": "progress/week-1.html",
    "href": "progress/week-1.html",
    "title": "Week 1",
    "section": "",
    "text": "Spent time familiarizing myself with software and tools that are used in sensein lab (e.g., datalad) and mcgovern (openmind)\nExplored datasets and applied for access to NIMH, UK Biobank, and CHOP. Talked with Hoda about UK Biobank, will meet in person soon. Need to contact Steve and/or Debbie (have not met them yet). Available info on UK Biobank and ABCD is pretty comprehensive, need more details about CHOP (will know more when I get access).\nHave been reading the precision medicine literature, familiarizing myself more with recent developments in the field\nPlan on compiling a set of papers relating to neuroethics that I think will be pertinent to future projects (especially CHOP-related project)"
  },
  {
    "objectID": "progress/week-1.html#softwaretools",
    "href": "progress/week-1.html#softwaretools",
    "title": "Week 1",
    "section": "Software/Tools",
    "text": "Software/Tools\n\nDatalad\n\nhow many datasets are currently hosted on datalad?\n\nOpenmind\n\ngot an account + took the course. I’ve used slurm a lot previously (used savio cluster at berkeley and I’m familiar with submitting jobs, running bash scripts etc.\n\nSingularity\n\nare there any general-use singularity containers on openmind for common neuroimaging preprocessing? (fMRIPrep, freesurfer etc.)\n\nconda\nReproschema"
  },
  {
    "objectID": "progress/week-1.html#project-ideas",
    "href": "progress/week-1.html#project-ideas",
    "title": "Week 1",
    "section": "Project Ideas",
    "text": "Project Ideas\n\nCerebellum and neuropsychiatric disorders\nCOVID-19 and the cerebellum\nCerebellum and development\nPredicting self-harm from hospital longitudinal EMR data"
  },
  {
    "objectID": "progress/week-10.html",
    "href": "progress/week-10.html",
    "title": "Week 10",
    "section": "",
    "text": "Set up a meeting with Jaan about clinicalBERT. Largely addresses unstructured data such as physician notes included as part of a patient’s EHR.\nGot a general understanding of the BHS data that we will have access to from CHOP. Ran also sent along a dictionary that gives a bit more detail. However, he confirmed with me this week that we should wait until the next meeting to discuss data access. Based on the information that I have (from the paper and the dictionary), I can put together a project proposal that we can discuss in the group meeting.\nResults from predictive modeling of hbn phenotypic data (including feature importance) are updated here. Next steps on this front is to identify a core (uncorrelated) set of questionnaires that have predictive power. This has potential to be of practical use.\nDidn’t get around to starting on naturalistic data from HBN - that will a task for next week.\nAll research assistants have started on their projects and are set up on OpenMind\nI want to adopt some of the methodology from this paper, which I summarize here to the hbn data, particularly the application of ANNs to both cognitive profiles and morphological and connectivity data"
  },
  {
    "objectID": "progress/week-5.html",
    "href": "progress/week-5.html",
    "title": "Week 5",
    "section": "",
    "text": "To Do\n\nTry UMap in supervised mode to identify unique patterns in phenotypic data\n\nwhat is the reliability in the KSADS assessment across child and parent measures?\n\nPerform VBM to measure local changes in structural abnormalities, following methods steps implemented in this paper - correcting for brain size etc.\n\n\n\nQuestions\n\nReached out to folks at HBN about getting LORIS access but haven’t heard from them yet. I’m analyzing the data from Openmind which I believe is up-to-date. I have access to all of the phenotypic data and I’ve been able to analyze some of the anatomical data that’s on OpenMind so I don’t think I’m missing anything, but would be nice to have full access so that I can stay current with any changes or updates.\nI’ve scheduled a meeting for next Wednesday to discuss some of the results from HBN and to talk about the CHOP project before our meeting with the Philadelphia group."
  },
  {
    "objectID": "progress/week-14.html",
    "href": "progress/week-14.html",
    "title": "Week 14",
    "section": "",
    "text": "Worked with Lexi and Alyson on ADHD + adaptation project\n\nAlyson focused on ADHD across a few demographic variables: gender (e.g., ADHD subtypes inattentive vs. hyperactive (boys vs. girls)), SES (Low SES associated with higher exposure to environmental risk factors), and race (Cultural + ethnic factors influence perception, reponse, diagnosis, and treatment of ADHD)\nChallenge in categorizing high vs low creative jobs, more literature establishing low vs high attainment jobs.\n\nPredictive modeling of HBN data - certain questionnaires/measures are better at classifying whether or not someone has a diagnosis compared to no diagnosis (e.g., ADHD, Anxiety, Depression, ASD, Reading Impairment). Notebooks are here:\n\nADHD\nASD\nAnxiety\nDepression\nLearning Impairment\nModel Comparison"
  },
  {
    "objectID": "progress/week-20.html",
    "href": "progress/week-20.html",
    "title": "Week 20",
    "section": "",
    "text": "Finished notebooks for alyson on gender differences in adhd\n\nChild Measures - ADHD\nParent Measures - ADHD\n\nRe-ran models (including all-feature smote model) that incorporate all feature sets (including teacher measures)\nTested out sentence transformers for CBCL (Parent and Teacher Measures)\nSketched out pipeline for fMRI analysis of HBN data (preprocessing steps + connectivity analysis)\nRequested additional Biobank data for adaptive ADHD project - working with Lexi to get these data into a pandas dataframe\nExplored ABCD repronim project to figure out which data are available (i.e. questionnaires) - need to think about some questions that can be tested on this dataset."
  },
  {
    "objectID": "progress/week-30.html",
    "href": "progress/week-30.html",
    "title": "Week 30",
    "section": "",
    "text": "03/12 - 03/17"
  },
  {
    "objectID": "progress/week-30.html#done-and-to-do",
    "href": "progress/week-30.html#done-and-to-do",
    "title": "Week 30",
    "section": "Done and to-do",
    "text": "Done and to-do\n\nAlyson paper: New models with SMOTE + full demos + all features (Parent/Child/Teacher) to classify sex and ADHD diagnosis\n\nworked on unsupervised learning (UMAP) to subtype ADHD + Sex (nothing concrete yet..)\n\nHBN + fMRIPrep: wrote preprocessing script to incorporate SUIT derivatives into fMRIPrep output\n\nplan on running xcp as post-processing for some of the HBN particpants, interested first in parcellating data using Yeo/Buckner (7,17) parcellations for cortex and cerebellum, will run on a subset of participants with ADHD\n\nHBN phenotype models: working with Shreya to incorporate multi-label classification into pydra-ml so that we can predict multiple diagnoses (and subtypes) rather than binary of diagnosis/no diagnosis\nTo-do: run HBN models that do not contain total/overall scores per questionnaire. This is a bit tricky as these overall scores are coded differently across questionnaires, perhaps this will be made easier by moving HBN to reproschema. Hired an RA (freshman CS) to work on this project.\nMet with Lexi to discuss ADHD + Professions project. Hired an RA (freshman CS) to work on this project.\n\nWe want to use the method employed in this paper in which they convert UK SOC 2000 codes (from the UK Biobank) into U.S. SOC/O*NET job titles using Computer Assisted Structured Coding Tool CASCOT. The data for both of these datasets are publicly available (UKBiobank requires DUA) however the authors (when contacted) were unwilling to share either the data or the code. We’ve emailed back and forth a few times but haven’t had much luck so far, something to discuss when we next meet. It would be really useful for this project to have the traits and attributes (e.g., innovation, complexity) associated with UK Biobank occupations."
  },
  {
    "objectID": "progress/week-4.html",
    "href": "progress/week-4.html",
    "title": "Week 4",
    "section": "",
    "text": "To Do\n\nTry UMap in supervised mode to identify unique patterns in phenotypic data\nQuestions to address:\n\nWithin HBN assessment battery, which tests are most useful? (how does this vary across disorders?)\ncan further subtyping of individuals be done based on patterns in behavioral/cognitive assessments? (especially for 200 people who were not diagnosed due to an incomplete evaluation)\nwhat is the reliability in the KSADS assessment across child and parent measures?\n\nTest python implementation of SUIT on subset (n=10) of hbn participants (T1w + T2)\nPerform VBM to measure local changes in structural abnormalities, following methods steps implemented in this paper - correcting for brain size etc.\n\n\n\nQuestions:\n\nDon’t yet have access to LORIS, will follow-up with Lindsay after labor day weekend\nCHOP Meeting - ask Satra to send email to folks there to set-up meeting sometime in Sep.?\nRemind Satra to provide info about other project that we forgot to discuss in our 09/01 meeting\nI’m happy to be included in other projects (meetings etc.) if any seem like a good fit for my interests/skills\nSet up weekly meetings w/Satra on Wednesdays\nI would like to recruit 1-2 undergrad students through UROP - can I hire for pay or academic credit alone?\nI requested edit access to sign up for a lab meeting slot: I’m thinking either end of this month or beginning of oct. I guess the neuroimaging subgroup would be most appropriate but perhaps also knowledge engineering as the meeting will be soliciting feedback about project ideas. Let me know what you think."
  },
  {
    "objectID": "progress/week-15.html",
    "href": "progress/week-15.html",
    "title": "Week 15",
    "section": "",
    "text": "ADHD project: waiting to get Biobank access to phenotypic data so that we can explore which professions adults with ADHD gravitate towards, in order to infer adaptive traits and attributes in this population. We also want to assess the modulating factors of race, gender, and SES on this question. I presented an exploratory notebook on ADHD from the HBN dataset. Some take-aways:\n\nsignificantly more males are diagnosed with ADHD than females. M/F ratio is smallest however for inattentive subtype\nOn average, children with ADHD have comorbidites and on average girls have slightly more than boys\nGirls with inattentive ADHD start puberty earlier than other ADHD subtypes (+ children without an ADHD diagnosis)\nvery few children (<15%) are diagnosed with a learning disorder\n50-60% of children with ADHD have individualized education plan compared with 20% of children without a diagnosis\nsurprisingly, very few (<1%) of children diagnosed with adhd have parents who also have a diagnosis of adhd. This figure is much lower than expected based on existing literature, therefore, likely that more parents have adhd (but have not received a formal diagnosis) or the reporting is incomplete.\n\nset up a data exploration notebook that uses python widgets to explore the different measures (e.g., questionnaires) from the HBN across different diagnoses \nworked on CHOP project proposal"
  },
  {
    "objectID": "progress/week-21.html",
    "href": "progress/week-21.html",
    "title": "Week 21",
    "section": "",
    "text": "Done and To-DO:\n\nWorked on item analysis of HBN questionnaires using sentence transformers\n\nexample notebook here: HBN item analysis\nto-do: between-questionnaire comparison, calculate similarity between questionnaires\n\nWorked on ADHD + profession question - did a deep dive into biobank phenotype data, almost finished “data wrangling” stage\nWorking with Alyson on ADHD + gender differences question. She has done an extensive literature search on ADHD + gender and she has found that:\n\n“Overall: There doesn’t seem to be many comprehensive papers about which measures are most useful in identifying ADHD populations even when not limiting for gender. Overall, even more general papers only examine a few measures, or they focus on a subset (rating scales, neuropsych testing, tasks). Also, these generally seem to focus on adults/young adults rather than children”\nNext steps: Alyson is going to draft a results section and I’ll continue doing analyses on this question\n\nContinuing to amend pipeline for fMRI analysis of HBN data, focusing specifically on connectivity analyses.\n\nto-do: test out different approaches on subset of HBN participants"
  },
  {
    "objectID": "progress/week-25.html",
    "href": "progress/week-25.html",
    "title": "Week 25",
    "section": "",
    "text": "02/06-02/10"
  },
  {
    "objectID": "progress/week-25.html#done-and-to-do",
    "href": "progress/week-25.html#done-and-to-do",
    "title": "Week 25",
    "section": "Done and To-Do",
    "text": "Done and To-Do\n\nmostly writing tentative results blocks and literature review for gender differences paper + phenotypic/multi-modal paper\ngender differences paper reading:\n\nSex Differences in Mental Health Problems and Psychiatric Hospitalization in Autistic Young Adults\nGender inclusivity in women’s health research\n\nphenotypic/multi-modal paper reading:\n\nImproving the study of brain-behavior relationships by revisiting basic assumptions\nCoordinated cortical thickness alterations across six neurodevelopmental and psychiatric disorders\nBroad transcriptomic dysregulation occurs across the cerebral cortex in ASD"
  },
  {
    "objectID": "progress/week-0.html",
    "href": "progress/week-0.html",
    "title": "Week 0",
    "section": "",
    "text": "The projects that I undertook during my PhD were aligned with the goals of basic science research. Specifically, I used task-based fMRI data to build predictive models of the cerebellum, with the goal of understanding its role in cognitive function. I primarily used neuroimaging methods and techniques to build these models, however, along the way, I recognized the utility of incorporating other modalities, namely transcriptomics, behavior, and neuropsychology to address my research questions. For example, I worked with gene samples from the Allen Human Brain Atlas, and although the data were sparse for the cerebellum, it allowed me to imagine another lens by which I could investigate cerebellar functional organization. I was also involved in two patient studies that were particularly impactful for me. Both projects were collaborations between multiple research groups invested in testing a novel theory of cerebellar function. In multiple experiments, we tested patients with cerebellar degeneration (e.g. spinocerebellar ataxia) on a series of tightly controlled behavioral experiments instead of simple clinical batteries. It was my first experience interacting with patient populations for the purposes of scientific research, and it motivated me to seriously consider the potential of translating basic science research, across multiple modalities, into patient-centered healthcare outcomes.  I am excited at the prospect of pursuing an ICoN computational fellowship in the Ghosh and Gabrieli research groups for multiple reasons. First, regardless of where my career takes me, I am keen to use the expertise I cultivated during my PhD to work on large-scale and innovative projects that exist at the intersection of health sciences, technology, and data science. Second, I am eager to work in a highly collaborative environment under the leadership of ICoN center faculty members. One of the appeals of the fellowship is that there are very clear overall objectives that are shared across the faculty, research scientists, and postdocs, all of whom are contributing unique skill sets and expertise to the work. Third, I will have the opportunity to extensively build my knowledge across a wide range of areas: clinical assessment, endophenotyping, advanced machine learning models, and cross-integration of multiple modalities (e.g. behavior, transcriptomics, neuroimaging, video/speech analysis).  Finally, it is an exciting time to work in precision medicine, and although there is an abundance of data and computing power, what is lacking are models of individual human behavior that can inform risk predictors of health. Therefore, the prospect of working in collaboration with the Children’s Hospital of Philadelphia is incredibly compelling as it facilitates the development of behavioral tests whilst simultaneously evaluating diagnostic models in a continuous fashion. Importantly, any collaboration with clinicians will keep patient wellbeing at the forefront of our work."
  },
  {
    "objectID": "progress/week-0.html#project-goals",
    "href": "progress/week-0.html#project-goals",
    "title": "Week 0",
    "section": "Project Goals",
    "text": "Project Goals\nOne of the goals of the Ghosh/Gabrieli lab is to develop biologically-driven risk predictors and monitors of mental health. This will be done using multi-modal datasets that correlate genetic information with clinical evaluations through endophenotypes learned from neuroimaging, behavior, actigraphy signals and speech/vocal recordings. Mental health disorders encompass an enormous landscape of behavioral symptoms and clinical assessment. To start, I would be interested in narrowing the scope to a set of symptoms that can be assessed across multiple modalities. Perserverative behavior is a symptom that underlies numerous mental health disorders, including ADHD, OCD, autism, and schizophrenia, and it is measurable via multiple modalities. For example, perseveration has been studied using fMRI and is thought to be the consequence of frontal failure to modulate striatal outputs during controlled, purposive action, resulting in the continued reselection of previously activated outputs (Shallice, 1988). Another modality that has been used to study preservation is behavior. Cognitive tasks including the Wisconsin Card Sorting task and the Trail Making task, have been leveraged to study perseveration in typical and atypical development (Benitz et al. 2016). More recently, novel tools have been developed that automate the labeling of effector movement, gaze, and facial expression in real time using technology like deeplabcut and mediapipe. This technology could potentially allow us to identify perseverative behaviors across adult and developmental populations. It is possible to imagine combining live and longitudinal information from large-scale video and speech datasets to build prognostic computational models that identify and predict perseverative behaviors across a large range of mental health disorders. Furthermore, based on what we already know from neuroimaging and behavior, we could validate these models using biologically-driven data that include large-scale networks of the cortex and subcortex, and behavioral variation.  In the context of this project, I am particularly interested in the following questions (posed in the original proposal):\n\nConsidering the practicalities of precision healthcare, should we expect neuroimaging data to be incorporated into every individual’s health care assessment? To what extent does brain imaging even improve prognostic applications? Large scale cortical and subcortical networks have provided us with valuable insights about brain organization and topography in both healthy and patient populations, however, it is not clear what role these data will play in diagnostic applications. Will we be able to reliably identify macro circuits that drive behavioral (and genetic) variation? And if so, will we be able to use these circuits to inform predictive and diagnostic models of mental illness?\nHow good are behavioral assessments? Are there cognitive tasks that better capture symptoms compared to self-report clinical questionnaires. This is a question that we have been exploring in the motor world, specifically in the context of identifying cognitive impairments in patients with cerebellar degeneration. Subtle deficits are often masked by self-report questionnaires, and are then only revealed in carefully controlled behavioral experiments that test very specific cognitive processes.\nI also believe there is great scope to automate the analysis of human behavior to aid psychiatric diagnoses. Some of this work is already underway in the motor world (e.g., automating clinical assessment of spinocerebellar ataxia and Parkinson’s disease). I can imagine building models that identify symptoms of neurodevelopmental and neuropsychiatric disorders (e.g., perseveration, hyperfocus, task switching etc.) on continuous and longitudinal video data collected in naturalistic settings. These models of complex behavior could then be validated by biologically-driven data and used to inform clinical tools that are then adopted by healthcare professionals."
  },
  {
    "objectID": "progress/week-0.html#other-considerations",
    "href": "progress/week-0.html#other-considerations",
    "title": "Week 0",
    "section": "Other considerations",
    "text": "Other considerations\n\nFinally, there are a number of ethical considerations that I would like to consider as I venture into the realm of precision medicine. Translational work is a new area of research for me and I am aware that precision medicine is a quickly evolving field that raises important questions about ethical responsibility:\nData privacy: Who stands to benefit, and who is harmed? What possible solutions help protect individuals’ and communities’ ownership over their own data? I think this question is especially relevant for neural data that is not (as of yet) being used to track, manipulate, or identify individuals.\nAI and healthcare: with such heavy reliance on technology in developed nations, I think it’ll be important to consider the concerns associated with bias and morality of AI, and how it may actually challenge equitable access to healthcare.\nCommunicating uncertainty: How do we communicate uncertainty about our translational results, especially when models are continuously updated with new information. It’ll be important to understand the uncertainty arising from technical procedures: small/incomplete sample sizes, sparse longitudinal datasets, instrument variability etc.\nTo what extent can we engage with diverse communities in translating neuroscience research to the health space. Can we bring together neuroscientists, physicians, ethicists, engineers, mental health workers, and caregivers to understand the ethical impact of data- and model-driven precision medicine?"
  },
  {
    "objectID": "progress/week-11.html",
    "href": "progress/week-11.html",
    "title": "Week 11",
    "section": "",
    "text": "Meeting with Jaan about ClinicalBERT, notes here.\nWe chatted about:\n\n\nbuilding dashboards for predictive models that can help clinicians (e.g. displaying the data using https://superset.apache.org/)\n\n\nsimple models that can help detect features predictive of suicide attempt\n\n\nlonger-term strategy for deploying models that work across EHR data structured in different ways, in different health systems\n\n\nTo Do: connect with people at CHOP about OMOP common data model\nSpoke with Thea Singer about a profile for the Rappaport Foundation proposal\nUpdated phenotypic models with feature and permutation importances. Notebook is here\n\nstill having difficulty loading the images – need to figure this out.\n\nPut together a short proposal/presentation for CHOP meeting, will present in Monday meeting"
  },
  {
    "objectID": "progress/week-11.html#questions",
    "href": "progress/week-11.html#questions",
    "title": "Week 11",
    "section": "Questions",
    "text": "Questions\n\nTraining and test data for predictive modeling: all participants or filter for particular disorders?\nCan we ask CHOP collaborators for more unstructured data for clinicalBERT model?"
  },
  {
    "objectID": "progress/week-7.html",
    "href": "progress/week-7.html",
    "title": "Week 7",
    "section": "",
    "text": "questions/feedback\n\nwe had a neuroimaging meeting today and were discussing a centralized database to keep track of datasets, how to access them on openmind, whether they have been bids-ified etc. there were two suggestions for doing this: the gablab wiki on openmind or a page on sensein github. with both of these options, everyone in the lab would be able to contribute - do you have any preference?\nwe also talked about having access to each other’s repos for projects we’re currently working, not everyone (including me) have public repos for their ongoing projects (number of reasons for this) - one suggestion was that we make our repos public within the sensein github org. currently, we’re sharing snippets of code via slack instead of pointing to the scripts on our repos.\nRelated to ^^, could I be added as a member of the senesein github organization?"
  },
  {
    "objectID": "progress/week-16.html",
    "href": "progress/week-16.html",
    "title": "Week 16",
    "section": "",
    "text": "worked on adaptive adhd project with Alyson + Lexi\n\nADHD + Adaptation/Evolution\n\nJensen et al, 1997 - Evolution and Revolution in Child Psychiatry: ADHD as a Disorder of Adaptation\nWilliams and Taylor - The evolution of hyperactivity, impulsivity and cognitive diversity\nArildskov et al. - Testing the evolutionary advantage theory of ADHD disorder traits\n\nADHD + creativity\n\nAshwood et al. - Adaptive Functioning in Children with ASD, ADHD, and ASD + ADHD\nBudding et al. - ADHD and Giftedness: A Neurocognitive Consideration of Twice Exceptionality\nTaylor et al. - Characteristics of ADHD Related to Exectuive Function: Differnetial Predicitions for Creativity-Related Traits\n\n\nEdited grad school statements for Gasser and Alisha\nWorked with Shreya on incorporating SMOTE + dirty cat to predictive modeling pipeline\nRead COVID + suicide attempt prediction papers shared by Ran, and incorporated comments into proposal"
  },
  {
    "objectID": "progress/week-22.html",
    "href": "progress/week-22.html",
    "title": "Week 22",
    "section": "",
    "text": "01/16-01/20"
  },
  {
    "objectID": "progress/week-22.html#done-and-to-do",
    "href": "progress/week-22.html#done-and-to-do",
    "title": "Week 22",
    "section": "Done and To-Do",
    "text": "Done and To-Do\n\nHBN item analysis:\n\nWorked on item analysis of HBN data testing out tf-idf and distance correlation on questions and answers\napplied hierarchical clustering to answer and question matrices, separately for each question\nrewrote some old scripts to preprocess questionnaire data to make item analysis more parsimonious\n\nLiterature review:\n\nspent some time reading up on the diagnosis/questionnaire literature to identify similar constructs across measures\nHampel et al 2023\nMorin et al. 1999\nLangley et al. 2013\nReed et al 2015\n\nRerunning all models (again) including smote and new feature sets. Also tested out LOFO"
  },
  {
    "objectID": "progress/week-26.html",
    "href": "progress/week-26.html",
    "title": "Week 26",
    "section": "",
    "text": "02/13-02/17"
  },
  {
    "objectID": "progress/week-26.html#done-and-to-do",
    "href": "progress/week-26.html#done-and-to-do",
    "title": "Week 26",
    "section": "Done and To-Do",
    "text": "Done and To-Do\n\nworked with Shreya on running new phenotypic models to incorporate categorical features (using dirtycat) and testing on different classifiers, models were taking a long time to run, spent some time troubleshooting ways to reduce run time, reducing number of splits helped + parallelizing code\nPlayed around with chatGPT for gender differences and ADHD paper\n\nmet with Alyson to discuss paper draft. I’m working on putting results blocks together and she’s working on the write-up\ntalked about expected gender differences across HBN measures - compiling information about each measure from the literature\ndiscussed diagnostic bias vs. gender differences? need to come up with a good method to address whether the former is true"
  },
  {
    "objectID": "progress/week-3.html",
    "href": "progress/week-3.html",
    "title": "Week 3",
    "section": "",
    "text": "One of the projects that I’m interested in starting addresses the role of the cerebellum in neurodevelopmental disorders. Therefore, I’ve been reading up on cerebellar development this week and a few papers struck me as particularly interesting:\n\nSathyanesan et al. 2019\nStevenson et al. 2014\nTran et al. 2017\nTiemeier et al. 2010\n\nI’ve also been exploring precision medicine/pHealth in other fields, namely genomics, as a way to understand the evoluation of this discipline.\nAlthough I haven’t delved into it much yet, I want to curate a set of guidelines that address ethical considerations in the work that we’re doing. My goal is that others can also contribute to this list.\nI liked this review paper by Woo et al. (2017) a lot. They trace the progress and limitations of translational neuroimaging, offering a roadmap for future utility in precision medicine, focusing on diagnostic value of models, scalability and deployability, and generalizability. I also hadn’t encountered the idea of process-based predictive models before, but it’s compelling to me if we’re going to move beyond DSM-categorization of mental illness to RDoC-like constructs across disorders. I note some of the paper’s key points here"
  },
  {
    "objectID": "progress/week-12.html",
    "href": "progress/week-12.html",
    "title": "Week 12",
    "section": "",
    "text": "Attended the precision psychiatry conference on Weds/Thurs - some notes here\nMet with Lexi about a potential collaboration w/r/t adaptivity and ADHD. Alyson (Wellesley RA) has put together a literature review on this topic, you can check out her work here\n\nIn short, the idea is to investigate adaptive traits and attributes that are often overlooked in people diagnosed with ADHD. There is a literature (albeit sparse) that proposes an evolutionary theory of ADHD, namely that it is maintained in the population due to selection forces that convey advantages. Some thoughts/notes on the topic will soon be available here\n\nPresented at lab meeting, slides are here\nShreya (MIT RA) and I have been working on building more models on the HBN data focusing now on the different disorder groups (e.g., ADHD, ASD etc.). The results will be available in an interactve notebook soon\nOpaline (MIT RA) has been working on a dashboard using apache superset, currently replicating the summary results from HBN, but I think this approach could also be useful for CHOP project\nAttend the cross-collaboration Child Mind meeting on cross-species connectivity and autism, my only complaint was that they didn’t include the cerebellum in their analyses!\nI’ve been reading some of the papers that Ran shared, and next week, I’ll start updating the CHOP meeting presentation with specific questions/methods. I want to have a first draft ready before our next meeting at the end of the month."
  },
  {
    "objectID": "progress/week-12.html#questions",
    "href": "progress/week-12.html#questions",
    "title": "Week 12",
    "section": "Questions",
    "text": "Questions\n\ncan you add me to the google drive so that I can upload lab meeting slides?"
  },
  {
    "objectID": "progress/index.html",
    "href": "progress/index.html",
    "title": "Overview",
    "section": "",
    "text": "Keeping track of projects: what I’ve done, what’s planned, what’s in progress.."
  },
  {
    "objectID": "progress/index.html#weeks",
    "href": "progress/index.html#weeks",
    "title": "Overview",
    "section": "Weeks:",
    "text": "Weeks:\n\nWeek 0\nWeek 1\nWeek 2\nWeek 3\nWeek 4\nWeek 5\nWeek 6\nWeek 7\nWeek 8\nWeek 9\nWeek 10\nWeek 11\nWeek 12\nWeek 13\nWeek 14\nWeek 15\nWeek 16\nWeek 17\nWeek 18\nWeek 19\nWeek 20\nWeek 21\nWeek 22\nWeek 23\nWeek 24\nWeek 25\nWeek 26\nWeek 27\nWeek 28\nWeek 27\nWeek 28"
  },
  {
    "objectID": "progress/week-27.html",
    "href": "progress/week-27.html",
    "title": "Week 27",
    "section": "",
    "text": "02/20-02/24"
  },
  {
    "objectID": "progress/week-27.html#done-and-to-do",
    "href": "progress/week-27.html#done-and-to-do",
    "title": "Week 27",
    "section": "Done and To-Do",
    "text": "Done and To-Do\n\nEdited an abstract for Alyson for Wellesley senior thesis conference\nRead CHOP-related papers:\n\nYouth Suicide During the First Year of the COVID-19 Pandemic\nSelf-Harm in Children and Adolescents who Presented at Emergency Units During\n\nPreprocessing ABCD + CBCL data - next step is to incorporate these data into modeling workflow that I wrote for HBN\nRevisiting ADHD + Professions project w/Lexi - bit of a task to preprocess these data, ideal project for an RA\nFellows lunch with Lisa Yang - she asked specifically about CHOP project, gave her high level view of progress + plans\nHosted MBA Sloan Fellows as part of MBA Idea week, group of 4 visited the lab and I gave them a high-level presentation about work we’re doing, connected some of them with relevant folks (Omar, Daniel etc.)"
  },
  {
    "objectID": "progress/week-2.html",
    "href": "progress/week-2.html",
    "title": "Week 2",
    "section": "",
    "text": "I liked the idea Satra presented in lab meeting (last week I think) about documenting steps of a project, from conception to publication. In my position now, I thought it would be a good opportunity to make this process transparent so I’m putting together a webpage (eventually hosted at ). I plan on integrating visualizations for projects as they’re in progress and keeping a running log (in the form of weekly reports). Given that the overarching aim of future projects should address the question: “how is what we’re doing applicable and useful for the broader community”, I hope to be able to use this platform to create an interface that allows for clear communication of project aims, findings, and interpretations, to any interested parties."
  },
  {
    "objectID": "progress/week-2.html#project-guidelines-to-have-in-mind-throughout",
    "href": "progress/week-2.html#project-guidelines-to-have-in-mind-throughout",
    "title": "Week 2",
    "section": "Project Guidelines (to have in mind throughout)",
    "text": "Project Guidelines (to have in mind throughout)\n\nInform clinical outcomes through computational modeling\nCommunicate importance and relevence of research findings to patient population whose biodata are being collected and analyzed\nWork with clinicians to offer risk assessment predictors to patients based on outputs of biologically-driven models\nEffectively communicate scientific uncertainty to both experts and non-experts alike\nCreate models that are accessible to other researchers, FAIR, and demographically diverse\nAddress ethical questions that may arise throughout the entire process: as studies are being designed, data analyzed, and results disseminated\nHow can the results of this work be translated to a clinical application?\nAre our findings clinically useful? If not, have we at least learned something interesting about the brain with this question?"
  },
  {
    "objectID": "progress/week-2.html#project-ideas",
    "href": "progress/week-2.html#project-ideas",
    "title": "Week 2",
    "section": "Project Ideas",
    "text": "Project Ideas\n\n\ncan unique cerebellar fingerprints dissociate neuropsychiatric and neurodevelopmental disorders, above and beyond what would be expected from cortical fingerprints? I think I’d be first interested in analyzing the structural data before addressing functional connectivity\n\n\ninspired by RDoC, can we use topic models (e.g., latent dirichlet allocation) to identify latent clinical characteristics derived from HBN behavioral and/or cognitive measures (e.g., positive and negative affect scale, GRIT scale, Wechsler intelligence scale) with the goal of providing individualized risk assessments.\n\n\nIf we can identify groups/clusters by modeling behavioral/cognitive characteristics, can we identify corresponding dissociable neural signatures (whole-brain, not necessarily cerebellum-focused)?\n\n\nRelative to the neocortex, are there differences across disorders in neural signatures/fingerprints from early childhood to adolescence? For example, in developmental disorders (e.g., adhd, autism) do we see more significant changes in cerebellum (as indexed by reduction in grey matter) during early childhood relative to corresponding changes in the neocortex.\n\n\nNext steps: - Once I get access to HBN, I want to do a summary analysis of the phenotypic assessment data to determine the scope of the data (e.g., do some power analyses) - If it seems like there is a sufficient sample and enough complete behavioral measurements, I’ll likely plan on testing cerebellar isolation and segmentation of a few pilot participants (not clear to me yet what technical challenges we may face using SUIT on a developmental dataset). - test some topic models on the HBN phenotypic assessment data - I plan on publishing the website today at some stage so I’ll slack you the link, hopefully that will be an easier way to get a sense of what I’m working on"
  },
  {
    "objectID": "progress/week-13.html",
    "href": "progress/week-13.html",
    "title": "Week 13",
    "section": "",
    "text": "Working with Alyson (Wellesley RA) and Lexi on a potential collaboration exploring the adaptive traits of ADHD.\nquestions we’re exploring:\n\nWhat is the relationship between ADHD and profession choice?\nWhat professions are seen as “creative” (organizational psych)\nHow does race/SES/gender play a role in these issues?\nWhat role does IQ and severity of ADHD diagnosis play in all of these factors?\n\nworking with Lexi to get access to phenotypic data on UK Biobank to explore ADHD in an adult population\nset-up a predictive modeling workflow that can now flexibly take in any combination of measures from the HBN dataset and predict a number of target variables github repo. worked on documentation of repo to take it easier for RAs to access data and run models, also wrote-up openmind tutorial here"
  },
  {
    "objectID": "progress/week-6.html",
    "href": "progress/week-6.html",
    "title": "Week 6",
    "section": "",
    "text": "To Do\n\nquestions to answer: what is the reliability in the KSADS assessment across child and parent measures? meant to get to this question during the week but didn’t have time.\nPerform VBM to measure local changes in structural abnormalities, following methods steps implemented in this paper - correcting for brain size etc.\n\n\n\nQuestions\n\nIs there anything that I should do in advance of the CHOP meeting on Monday?\nWhat is the protocol for storing new analyses (SUITPy output) on >2000 participants? I was planning on analyzing n=30 from each subgroup of HBN (adhd, autism, control, mood, anxiety, intellectual etc) as a first step, but ultimately I will want to analyze the broader dataset and will need to run SUITPy on each participant."
  },
  {
    "objectID": "progress/week-17.html",
    "href": "progress/week-17.html",
    "title": "Week 17",
    "section": "",
    "text": "Worked on adaptive ADHD project with Alyson + Lexi, specifically getting data from UK Biobank on professions.\n\nnot all of the data is on openmind so we’ve been requesting certain variables from UK Biobank (e.g., psychiatric diagnoses)\n\nAlyson has become interested in better understanding girls with ADHD and how their cognitive profiles are different from boys with ADHD. It’s an under-researched topic in the literature, and we have found some differences in the HBN dataset between girls and boys with ADHD. Some topics we discussed:\n\nBabinski (2019): Sex + Puberty Moderate Association Between ADHD and Depression\nDir (2019): Pubertal influences on neural activation during risky decision-making in ADHD\nOstojic (2016): Association Between Pubertal Onset and ADHD Symptoms\nCamara (2020): Relationship Between Sex Hormones, Reproductive Stages, and ADHD\nHamlat (2019): Pubertal Timing as Transdiagnostic Risk for Psychopathology\nHalkett (2021): Initial Engagement in Oral Sex/Intercourse in Girls with and without ADHD\nWhy are girls in the inattentive ADHD subtype diagnosed later than boys?\nAre there more ADHD subtypes beyond combined/hyperactive/inattentive?\n\nWrote a script to run SUIT (and SUITPy) on anatomical scans from HBN. Putting the derivatives from SUIT into a similar format as adopted in this functional fusion project\n\nSUIT has to run on the fmriprep derivatives and fmriprep hasn’t been run yet on all HBN participants. I’ve tested the script out on a subset of participants that Jeff processed with fmriprep\n\nWorked with Shreya on predictive modeling pipeline, spent some time figuring out imbalanced train and test sets, and multi-label classification"
  },
  {
    "objectID": "progress/week-23.html",
    "href": "progress/week-23.html",
    "title": "Week 23",
    "section": "",
    "text": "01/22-01/27"
  },
  {
    "objectID": "progress/week-23.html#done-and-to-do",
    "href": "progress/week-23.html#done-and-to-do",
    "title": "Week 23",
    "section": "Done and To-Do",
    "text": "Done and To-Do\n\nWorked on notebooks for phenotype models + item analyis\n\ncompare models across diagnoses\ncompare CBCL models across diagnoses\nitem analysis\n\nWorked on gender differences + ADHD project with Alyson, I’m working on building blocks for results section, and Alyson is drafting an introduction\nDid some more preprocessing of UK Biobank phenotypic data for adaptive adhd project but will focus on this more extensively next week in anticipation of meeting with Lexi\nSlides of CHOP presentation available here"
  },
  {
    "objectID": "progress/week-28.html",
    "href": "progress/week-28.html",
    "title": "Week 28",
    "section": "",
    "text": "02/27-03/03"
  },
  {
    "objectID": "progress/week-28.html#done-and-to-do",
    "href": "progress/week-28.html#done-and-to-do",
    "title": "Week 28",
    "section": "Done and To-Do",
    "text": "Done and To-Do\n\nTackled item analysis of phenotypic data this week - trickier than I thought given the chaotic naming schema of the data dictionaries (all excel sheets, inconsistently labelled)\n\nI think reproschema would be useful for these dictionaries, submitted a UROP add to hire someone for this project (NLP + items + reproschema of HBN data dictionaries)\nPosting: Title: Using natural language processing to investigate neurodevelopmental disorders. Overview: The Senseable Intelligence Group at the McGovern Institute for Brain Research is looking for UROP candidates to work (remote or in-person) on cutting-edge and clinically relevant neuroscience research. The aim of the project is to apply natural language processing to clinical questionnaires that capture rich phenotypic information about children with developmental disorders (e.g., ADHD, Autism Spectrum Disorder). This role requires strong computational/programming expertise. At a minimum, the candidate should be very familiar with Jupyter Notebooks, pandas, numpy, Github. Candidates who have machine learning experience including natural language processing (e.g., SentenceTransformers) and unsupervised learning (e.g., UMAP) are preferred. However, an interest in learning more about these methods is also highly desirable.”\n\nHad a productive meeting with Kseniia from Arno’s research group. She’s working on similar questions and we discussed potential collaborations, specifically wrt to the item analysis and subtype work. She sent me a link to a csv containing item names (linking HBN questions to question keys – a possible solution to the chaotic data dictionarie problem I was encountering). However, there are still some small bugs to be ironed out so spent some time programmatically fixing the csv so that it is more versatile for our purposes.\nTalked with Jeff about running “The Script” on HBN participants. I’m going to take the lead on this for now. I have written another script to do SUIT processing on these data but haven’t tested it at scale, spent some time trying to borrow from Dorota’s script to inform SUIT script.\nFinished running a bunch of HBN models that now incorporate demographic variables: race, ethnicity, sex, age – notebooks available soon (waiting for last model to finish)\n\nWhile I have been running models separately for each measure (across many diagnoses and target variables: diagnosis, sex), Shreya has been running larger models (throwing in all features) and testing out different classifiers"
  },
  {
    "objectID": "progress/week-9.html",
    "href": "progress/week-9.html",
    "title": "Week 9",
    "section": "",
    "text": "Onboarded two research assistants, here is the updated onboarding document and orientation to openmind\nsome interesting observations from predictive modeling of hbn phenotypic assessments, you can look through the models in this notebook\n\nmodels are trained on different feature sets (decision tree classifier) and the target is whether a participant has/has not been diagnosed with a disorder\nSome observations:\n\nachievement vs intelligent gap such that intelligence is not a predictor of whether or not someone is diagnosed with a developmental disorder, but achievement is\nmany parental questionnaires are not useful in predicting outcome, for example, financial support, social status, basic demographics. Questionnaires that are relevent concern questions related to mood and feelings, anxiety etc.\n\n\nhave also observed feature importances for each of these models (along with permutation importance) - have not yet analyzed any of these features in depth, will be tasking research assistants with these next steps, particularly to investigate model predictions for specific subgroups, focusing on adhd + autism, and anxiety + mood disorders. One follow-up question I have is related to the achievement and intelligence prediction gap, and whether this is predominately driven by the children diagnosed with adhd.\nhave been working on pyBIDS + SUIT, figuring out how best to integrate matlab + python code. spent some time researching and building singularity containers (more involved than anticipated).\nwill work with Jeff to analyze some of the naturalistic data for HBN rather than resting state. In terms of SNR, I would rather start building connectivity models with movie data than resting state data. almost ready to run SUIT pipeline on larger subset of HBN participants, focusing on adhd + autism, anxiety + mood disorders.\nbroader connectivity question will focus on PFC-cerebellar connectivity across these sub-groups and across developmental stages, identifying whether changes in connectivity can predict clinical characteristics of these disorders, and if so, how these differences arise across the developmenal span."
  },
  {
    "objectID": "progress/week-9.html#questions",
    "href": "progress/week-9.html#questions",
    "title": "Week 9",
    "section": "Questions",
    "text": "Questions\n\nMeeting with Jaan the week of Oct. 17th to discuss this paper, which should be relevent to CHOP project. I suggested our Wednesday meeting time so we could meet all three of us if that works for you? If that time doesn’t work for him, I can suggest 11am on Monday?"
  },
  {
    "objectID": "progress/week-18.html",
    "href": "progress/week-18.html",
    "title": "Week 18",
    "section": "",
    "text": "Worked on calculating distance correlations between HBN questionnaires to determine how orthogonal featuers are within a questionnaire\n\nwhat is the redundancy across measures used to diagnose neurodevelopmental disorders?\n\nWorked with Opalina on her project to identify differences in cognitive performance across ADHD subtypes\n\nExperimented with radar plots and parallel coordinates plots to visualize multivariate data\n\nFocused on Child Behavior Checklist across ADHD subtypes and differences in reporting between parents and teachers\nAttended an interesting lecture on interactions between the immune system during pregnancy and later diagnosis of neurodevelopmental disorders\n\npregnancy-related features (e.g. nicotine use during pregnancy) are captured in the HBN dataset, could be interesting to examine importance of these features in diagnosis classification"
  },
  {
    "objectID": "progress/week-8.html",
    "href": "progress/week-8.html",
    "title": "Week 8",
    "section": "",
    "text": "started working on getting SUIT derivatives into BIDS format using pyBIDS, spent some time reading up on pyBIDS as I hadn’t used that library directly. SUIT functionality is still split across matlab and python (segmentation and normalization happen with MATLAB, and only reslicing and mapping from volume to surface happen with Python). Next step is to build a singularity container (something I haven’t done before) that contains both matlab + python packages relevent for running SUIT and output BIDS-like derivatives. ideally, would be great for SUIT to be incorporated into fmriprep pipeline but I think this is beyond the scope right now.\nhave been running many predictive models using pydra-ml, both classifier and regression models, predicting disorder diagnosis, demographic info (sex), and general cognitive functioning scores. Most of the models perform similiarly (badly) in terms of accuracy, have been testing out different dimensionality reduction methods (umap, pca etc.) to determine whether this improves model performance (and feature interpretation). Two RAs are starting next week and I will be giving them both projects that focus on building phenotypic models while I turn my attention to neuroimaging. One approach that could be interesting is to relate dimensions of phenotypic assessment to precise connectivity networks (i.e. PFC-Cerebellum), an similar taken by Klein-Fugge et al. (2022)\none question that I want to address with the HBN data is whether PFC-Cerebellar connectivity can be used to predict clinical symptoms across different developmental stages. Both of these structures have a protracted development, and any dysfunction or dysregulation in this connectivity during critical developmental periods likely contriubtes to symptoms underlying a host of disorders. There are also sex differences in the maturation of PFC and cerebellum, and it would be interesting to test whether connectivity differences emerge at different developmental stages across males and females.\nI’ve also been continuing literature review for the CHOP project and I’m eager to get access to the data so that we can explore relevent questions.\nOnboarded the first of three RAs, here is the onboarding document I have put together."
  },
  {
    "objectID": "progress/week-8.html#questions",
    "href": "progress/week-8.html#questions",
    "title": "Week 8",
    "section": "Questions",
    "text": "Questions\n\nI’m going to send the CHOP team an email today to enquire about next steps (apologies for the delay on that front) - I’ll send it to you first and let me know if there’s anything you’d like to add. I’ll include summary of meeting along with some follow up questions about data, and some specific project goals we can address, most of which is covered here\nperhaps you could send John a line about monthly meetings? I don’t want to bother him with too many emails."
  },
  {
    "objectID": "progress/week-19.html",
    "href": "progress/week-19.html",
    "title": "Week 19",
    "section": "",
    "text": "Worked on ADHD predictive modeling results\n\nPhenotype models: ADHD\nPhenotype models: ADHD & Sex\nPhenotype models: Control & Sex\nPhenotype models: ADHD & Subtypes\nPhenotype models: ADHD\n\nWorked on adaptive adhd notebooks:\n\nIntake Interview\nChild Behavior Checklist - Parent vs Teacher\n\nStarted putting together a first draft results section for HBN predictive modeling paper"
  },
  {
    "objectID": "progress/week-29.html",
    "href": "progress/week-29.html",
    "title": "Week 29",
    "section": "",
    "text": "03/06 - /03/10"
  },
  {
    "objectID": "progress/week-29.html#done-and-to-do",
    "href": "progress/week-29.html#done-and-to-do",
    "title": "Week 29",
    "section": "Done and to-do",
    "text": "Done and to-do\n\nMet with Lexi to discuss adhd + professions project - wrote an add to hire an RA to work on this project\nResults block for alyson on adhd + gender differences - determine whether there’s a diagnostic bias, worked on schematic figure\nWorked on “the script” for HBN preprocessing + SUIT analysis\nItem analysis + HBN phenotypes, worked on notebook and wrote an add to hire and RA to work on this project (specifically reproschema + HBN questionnaires)\nFinished preprocessing Kseniia’s csv linking HBN keys to questions and committed to her github\nRan models w/without SMOTE and w/without demographics"
  },
  {
    "objectID": "projects/adhd_professions.html",
    "href": "projects/adhd_professions.html",
    "title": "ADHD + Professions",
    "section": "",
    "text": "Is there a relationship between the type of occupation someone holds and whether or not they have ADHD?\n\nThe hypothesis is that people with ADHD are more likely to hold jobs that have the following traits/attributes: short-term planning, entrepreneurship, creativity, flexibility, self-employment. Job status will also be modulated by the following demographic variables: race/ethnicity, sex, age, socioeconomic status (SES)\n\nOccupation will be coded by the following attainment phenotypes: complexity, autonomy, innovation, and three types of job demands (information demands, emotional demands, and physical demands  based on the method outlined by Song et al. 2022"
  },
  {
    "objectID": "projects/adhd_professions.html#dataset",
    "href": "projects/adhd_professions.html#dataset",
    "title": "ADHD + Professions",
    "section": "Dataset",
    "text": "Dataset\n\nUK Biobank cohort is a population-based cohort study in the United Kingdom, which involves above 500,000 participants aged 40 years or older during their recruitment between 2006 to 2010\nIn the UK Biobank data, participants’ jobs were coded using the four-digit UK Standard Occupational Code (SOC) 2000 (Field ID 132) based on detailed job information (e.g., job tasks and activities) collected during participants’ baseline visits to assessment centers for the discovery sample\n\nadditional reading\n\nONET is based on the U.S. SOC system and includes hundreds of job characteristic measures for over 1100 occupations, sufficiently representing the national labor force in the United States, and has been used in many other countries via similar occupational classification systems\n\nadditional reading"
  },
  {
    "objectID": "projects/adhd_professions.html#method",
    "href": "projects/adhd_professions.html#method",
    "title": "ADHD + Professions",
    "section": "Method",
    "text": "Method\n\nFirst, convert UK SOC 2000 codes into U.S. SOC/O*NET job titles using Computer Assisted Structured Coding Tool CASCOT\nSecond, manually check and match occupations in these two systems based on detailed job descriptions (e.g., job tasks and activities), based on the International Labor Organization’s International Standard Classification of Occupations (ISCO) to ensure accuracy and reliability of the crosswalk in the first step.\nFor the 502,538 participants, you should be able to match ONET job titles for 274,223 individuals. The remaining 192,010 individuals who did not provide SOC codes and 36,305 who had SOC 2000 codes but no sufficient information to match the O*NET job titles should be excluded.\nFor full methods details, see Section Materials and methods - Phenotype measurement and definitions in paper by Song et al. 2022"
  },
  {
    "objectID": "projects/adhd_professions.html#prepreocessing-steps",
    "href": "projects/adhd_professions.html#prepreocessing-steps",
    "title": "ADHD + Professions",
    "section": "Prepreocessing Steps",
    "text": "Prepreocessing Steps\n\nFor initial steps on preprocessing the UKBiobank + ONET data, see the README in the google drive folder for this project"
  },
  {
    "objectID": "projects/EMR-selfharm.html",
    "href": "projects/EMR-selfharm.html",
    "title": "Identifying Risk Predictors for Self-Harm through Electronic Medical Records",
    "section": "",
    "text": "Dataset Overview\n\nOverview of the data can be found here\n\n\n\nProject Goals\n\nCan we identify reliable proximal markers of suicide risk to inform personalized interventions provided at crucial moments in the individual’s natural environment?\n\nValidated indicators of proximal risk could lead to the development of adaptive interventions\nShort-term risk prediction is a key concern for clinical providers and more research that incorporates proximal assessment is needed to provide insights about short-term precursors to suicidal ideation in order to facilitate early detection of risk as well as inform targeted interventions.\n\nAre existing tools/models validated on diverse communities of adolescents?\n\nThere is a great need to ensure that screening tools serve youth from diverse backgrounds, identities, and cultures.\n\nOne major goal of this work would be to integrate screening into clinical practice.\n\nAny models that we build should be interpretable and any uncertainty (statistical or otherwise) should be clearly communicated.\n\nAre there environmental predictors of suicide risk? Can this be identified using geocoded data?\n\nWhat is the scope/granularity of the geocoded data collected by CHOP?\nCan the model that we build on CHOP data be generalized to adolescents in other geographical locations? For example, are there similar risk predictors for suicide in Philadelphia compared to Boston?\n\nWas COVID-19 a risk factor of suicide attempt?\n\nCan we quantify the risk that COVID presented to a population at-risk for suicide? Were suicide risk predictors different as a result of the pandemic?\n\n\n\n\nMethods\n\nOne idea for modeling the data is to use clinicalBERT, which models clinical notes to predict hospital readmission. This approach is largely focused on unstructured data, therefore it should be applied to electronic health records that contain text data, which are high-dimensional and sparse.\nTo model structured data, we could use any number of machine learning pipelines. We are using pydra-ml for another project, which is a lightweight and flexible machine learning pipeline that does predictive (and interpretable) modeling.\n\n\n\nEthical considerations\n\nNot only are there methodological considerations for anyone doing predictive modeling work in psychiatry, but there are significant ethical considerations. As we progress in this project, I hope to be mindful of these points and to include them in our discussions wherever possible."
  },
  {
    "objectID": "projects/index.html",
    "href": "projects/index.html",
    "title": "Overview",
    "section": "",
    "text": "Phenotyping project (HBN and ABCD) - May 2023 finish analysis, first draft - summer\nCHOP project - May 2023 finish analysis, early Fall - first draft\nGender differences in ADHD (HBN and ABCD)\nAdaptive ADHD (UK Biobank Professions)\nCerebellar Fingerprinting (HBN and ABCD)"
  },
  {
    "objectID": "projects/exploring-adhd.html",
    "href": "projects/exploring-adhd.html",
    "title": "Exploring ADHD",
    "section": "",
    "text": "Some of these questions have been addressed here\nWhat % of children with adhd have parents with adhd? PreInt_FamHx,m_adhd PreInt_FamHx,f_adhd\nWhat is the SES/race/gender breakdown of children with adhd?\nWhat are the kinds of professions / college education held by parents of kids with adhd?\nSchool environment for children with adhd PhenX_School\nNeighborhood environment for children with adhd PhenX_Neighborhood\nHow do general scores of achievement and intelligence differ across adhd subtypes?\nWhat is the gender breakdown of adhd subtypes?\nGirls with adhd:\n\nage of first menstruation\nage of puberty onset\n\nwhat kind of school organizations are kids with adhd part of? PreInt_EduHx\nFamily history of mental illness PreInt_FamHx or other illness\n\nprimary diagnosis of mother, father, sibling\n\nWhat % of children are taking medication for adhd?\nWhat type of allergies do children with adhd have?\nPrevious head injuries?\nMother’s nicotine use during pregnancy?\nSeverity of ADHD diagnosis - differences across subtypes (inattentive, hyperactive etc.)\nAny information on whether people with adhd are night owls versus early risers?\nAny difference in rates of suspension, detention in children with ADHD compared to children without a diagnosis?\nIs there any evidence that children with ADHD spend longer on the internet than children without adhd, and what is the nature of internet usage?"
  },
  {
    "objectID": "projects/exploring-adhd.html#questions---child-behavior-checklist---teacher-report-form",
    "href": "projects/exploring-adhd.html#questions---child-behavior-checklist---teacher-report-form",
    "title": "Exploring ADHD",
    "section": "Questions - Child Behavior Checklist - Teacher Report Form",
    "text": "Questions - Child Behavior Checklist - Teacher Report Form\n\nWhat information is captured in this questionnaire?\n\nteacher / parent differences in CBCL in girls with ADHD - difference in reporting?\nwhat scales you use to diagnose ADHD result in different subtypes"
  },
  {
    "objectID": "projects/exploring-adhd.html#questions---predictive-modeling",
    "href": "projects/exploring-adhd.html#questions---predictive-modeling",
    "title": "Exploring ADHD",
    "section": "Questions - Predictive modeling",
    "text": "Questions - Predictive modeling\n\nADHD: can subtypes be classified from one another?\n\nhypothesis: most questionnaires/measures will not be able to differentiate between adhd subtypes\n\nADHD: can gender be classified from one another?\n\nhypothesis: certain questionnaires will be able to identify between gender\n\nare there boys/girls who have cognitive profiles similar to those with adhd but haven’t been diagnosed with adhd?\n\nhow do we address this question? determine a cognitive profile for each participant and do a similarity comparison between those diagnosed with adhd and those without, are there any participants who have a cognitive profile that is very similar to ADHD but were not given a diagnosis?"
  },
  {
    "objectID": "projects/exploring-adhd.html#summary-of-cognitive-performance",
    "href": "projects/exploring-adhd.html#summary-of-cognitive-performance",
    "title": "Exploring ADHD",
    "section": "Summary of cognitive performance",
    "text": "Summary of cognitive performance\n\nMany questionnaires (e.g., measures) have a total or raw score providing an overall summary of how well a participant did on a questionnaire\nFor all of the measures that have a total or raw score, how well on average are children with ADHD (across subtypes and gender) performing on these assessments compared to children without a diagnosis?\n\ndistance correlation (dcorr) * matrix of distances: 400 participants x all features (per questionnaire) * dcorr - how independent are two matrices (pairwise covariance matrices) * compare two matrices * how orthogonal are features wtihin a questionnaire? * are questions are similar (constructs)? * deap portal - built on ABCD - curated tabular data * xcp pipeline"
  },
  {
    "objectID": "projects/cerebellum-fingerprints.html",
    "href": "projects/cerebellum-fingerprints.html",
    "title": "Cerebellar fingerprints of neurodevelopmental disorders",
    "section": "",
    "text": "There has been great interest recently in the idea of the cerebellum as a locus in neurodevelopmental disorders. Structural and functional abnormalities in the cerebellum are consistently reported across neurodevelopmental disorders, and in particular, autism spectrum disorder (ASD) has been linked to cerebellar abnormality. For example, children and adults with ASD show atypical fMRI activation of cortico-cerebellar networks during biological motion perception Jack et al. 2017 and perception of social interaction Kana et al. 2015. Furthermore, behavioral studies have found that children with ASD display abnormal conditioned reponses in delayed eyeblink conditioning, a conditioning paradigm that strongly implicates the cerebellum. For example, Tran et al. 2017 tested delayed eyeblink conditioning, a task which is depenedent on the cerebellum, on a group of very preterm children and adults. They found that in this group, there were significant deficits in the acquisition of conditioned responses, therefore suggesting that both motor and non-motor behavioral deficits arise from cerebellar abnormalities.\nOne of the primary reasons why we think of the cerebellum as being an important developmental structure is that it is among the first brain structures to begin cellular differentiation and one of the last to fully mature Sathyanesan et al. 2019. Specifically, while the majority of neocortical neurogenesis occurs prenatally Silbereis et al. 2016, cerebellar neurogenesis continues until the 11th postnatal month Abraham et al. 2001. During this period, the cerebellum undergoes enormous growth, quadrupling in volume between the 24th and 38th gestational weeks Volpe et al. 2009, and then it doubles in size during the first 90 postnatal days. In fact, 85% of granule cells, the most populous cell type in the cerebellum, are generated after birth Kiessling et al. 2013. Given its protracted development, the cerebellum is especially vulnerable to a host of insults from environmental and molecular, to genetic and epigenetic factors Sathyanesan et al. 2019. Studies of preterm infants have shown that cerebellar injury during the perinatal period results in volume reduction in both cerebellar grey and white matter as well as remote neocortical regions Limperopoulos et al. (2014). These results suggest that changes in early cerebellar activity affect both cerebellar development and activity of neocortex, which means that the cerebellum could play an important role in refining cortical circuits during critical develpmental periods Wang et al. 2014."
  },
  {
    "objectID": "projects/cerebellum-fingerprints.html#notes",
    "href": "projects/cerebellum-fingerprints.html#notes",
    "title": "Cerebellar fingerprints of neurodevelopmental disorders",
    "section": "Notes",
    "text": "Notes\n\nanother important consideration in the healthy brains network: preterm birth\nbehavioral/cognitive tasks that measure: eye blink reflexes, sensory/tactile processing, timing, sensory integration, fine motor coordination,\nPROTRACTED DEVELOPMENT OF CEREBELLUM: prenatal information in the database (and early infancy) - could there be specific events (environmental, molecular etc) that resulted in disruption of cerebellar circuitry? and could disruption of the circuit at different timepoints result in different clinical outcomes? either severity of disorder or different presentation of disorder?\ncomplex brain disorders with a cerebellar locus follow different developmental trajectories.\nit has been suggested that the language and social deficits observed in children with complex disorders are a consequence of deficits in multi-sensory integration.\none particular process that could be implicated in multisensory integration in children with ASD is timing. For example, this process may be impacted by a deficit in perceiving the temporal relationship between distinct sensory components of complex audio-visual stimuli such as language, and this deficit could also compound in social cognitive processes like theory of mind Stevenensen et al. 2014\nwhat is the impact of environmental factors (e.g., parental behaviors, trauma, substance abuse etc.) on diagnosis of neurodevelopmental disorders?\ncognitive profiles are related to children’s learning ability Hulme & Snowling, 2009 - so a good test of whether a network can reliably represent individual differences in cognition is to test whether it will generalize to unseen data and predict children’s learning scores.\nages 7-11 is the peak age at which developmental disorders and cooccuring learning difficulties are first identified.\npossible methods:\n\narticicial neural network Siugzdaite et al. (2020 and summarized here\npartial least squares Dong et al. 2022\nimportant methodological considerations are covered in this recent paper by Dhamala et al. 2022\n\nquestions with behavioral dataset:\n\nwithin each assessment, and each domain, which measures are most successful in classifying disorders / predicting general cognitive functioning?\nacross all domains (language versus physiological status etc.), which are most successful at classifying disorders / predicting general cognitive functioning?\nwhich are more reliable: parent or child measures at classifying disorders / predicting general cognitive functioning?\nwhat are the features that best classify sex?"
  },
  {
    "objectID": "projects/phenotyping-project.html",
    "href": "projects/phenotyping-project.html",
    "title": "Phenotyping Project",
    "section": "",
    "text": "which phenotypic assessments are best able to classify whether someone has a diagnosis (versus no diagnosis)?\nwhich imaging metrics are most predictive of a diagnosis?\n\nEEG\nMRI\nfMRI"
  },
  {
    "objectID": "datasets/abide.html#overview",
    "href": "datasets/abide.html#overview",
    "title": "abide",
    "section": "Overview",
    "text": "Overview\nThe ABIDE data provide subject information, including age, sex, and measures of symptom severity as assessed by the Autism Diagnostic Observation Schedule (ADOS).\nData are not (currently) on openmind.\n\nData Storage\n\nnot currently on openmind/datalad\npreprocessed using"
  },
  {
    "objectID": "datasets/uk-biobank.html",
    "href": "datasets/uk-biobank.html",
    "title": "UK Biobank",
    "section": "",
    "text": "UK Biobank is a large-scale biomedical database and research resource, containing in-depth genetic and health information from half a million UK participants.\n\nPopulation:\nData collected:\n\nPopulation: M/F ages 9-65\n\nOnline questionnaire data (n=330,000)\n\nDiet, cognitive function, occupational history, mental health, digestive health, chronic pain, food preferences, neurodevelopmental issues, sleep, pain\n\nGenetic data\n\nWhole genome sequencing data (n=200,000), whole exome sequencing data (n=450,000)\n\nHealth-related outcomes data (n=230,000)\n\nPrimary care data containing coded clinical events (consultations, diagnoses, procedures, laboratory tests), prescribed medication (referrals) - info on Covid-19 now.\nHospital inpatient data - diagnosis, date of admission, underlying conditions, discharge information.\nFirst occurrences of medical conditions\nDeath data\nCancer data\n\n\nImaging data (n=50,000)\n\nMRI (DTI maybe?) also scans of other body parts: liver, muscle, heart, abdomen\nPost-covid scans on n=2000 participants\n\nBaseline data (n=500,000)\n\nMeasurements, hand grip, spirometry, bone density\nBlood, urine, saliva,\nDiet preferences\n\nCOVID-19 data\n\nMRI scans on n=2000 participants, what else has been collected?\n\nBlood + Urine (n=500,000)\n\nSaliva for 100,000\n\nActivity Monitor (n=100,000)\n\nPhysical activity data over a 7-day period collected via a wrist-worn activity monitor\n\nBiomarker data (n=500,000)\n\nAlso n=20,000 who completed a 4-5 year follow-up assessment.\n34 biomarkers chosen (e.g., HbA1c for diabetes).\nBlood count (hematological assays)\nInfectious disease markers\nMetabolomic biomarkers\nTelomere length\n\n\n\n\n\n\nWhich data are on openmind?\n\nImaging (rest, task, naturalistic)\nDemographic info\nCognitive/Behavioral results\nClinical disorders\n\nWhat is the format?\n\nraw, derivatives\n\nHave imaging (MRI/fMRI) data been preprocessed?\n\nfmriprep\nfreesurfer\nfirst-level glms\n\nWhere are the data stored on openmind?\n\nare these data being transitioned to datalad?\n\nHow does a new user get access to the dataset?"
  },
  {
    "objectID": "datasets/index.html",
    "href": "datasets/index.html",
    "title": "Overview",
    "section": "",
    "text": "The following datasets are used by the Senseable Intelligence group at MIT"
  },
  {
    "objectID": "datasets/index.html#list-of-datasets",
    "href": "datasets/index.html#list-of-datasets",
    "title": "Overview",
    "section": "List of Datasets:",
    "text": "List of Datasets:\n\nABCD\nHealthy Brain Networks\nUK Biobank\nadhd-200\nautism brain imaging data exhcange\nchop"
  },
  {
    "objectID": "datasets/chop.html",
    "href": "datasets/chop.html",
    "title": "CHOP",
    "section": "",
    "text": "the following paper summarizes the BHS dataset notes on the dataset can be found here"
  },
  {
    "objectID": "datasets/chop.html#datasets",
    "href": "datasets/chop.html#datasets",
    "title": "CHOP",
    "section": "Datasets",
    "text": "Datasets\n\nCHOP emergency department:\n\nWhat does this dataset contain?\n\nBehavioral Health screen - used by CHOP since 2014 to give staff in the ER a sense of mental health burden for each child. Questions include environmental adversity and other data that are difficult to collect. Demographics are included.\nRegular EHR are also included (medical notes made by clinician).\nGeocoded level data (zipcodes)\n\nDataset summary:\n\nn = 20,000 children, ages 14-18\n50% of sample are Black\nprevelence of suicide attempt is 50%\n15% of the cohort have longitudinal data\n2500 children with two timepoints, 1500 with 3 or more timepoints\ndata have also been collected before and during covid, so this is another variable that could be of interest\nno guarantee that any information from the past will be include about developmental disorders (whatever is shared by adolescents)\n\nOther:\n\nWith suicidality, comorbidities are the rule, not the exception\nClassification algorithms are good because they have clinical application and are interpretable\nCausal effects are now target for intervention\n\n\nMRI dataset\n\nwhat does this dataset contain?\n\nstructural data is collected clinically but not functionally. in total, there are about 100,000 scans at CHOP but many of the participants in the clinical dataset likely don’t have MRI scans.\nthere are also neonatal scans: 0-2 years of age + preterm children.\nlarge subset of children have 22Q (22q deletion syndrome) can affect any system of the body, however, most children wtih 22q have heart, immune, learning, speech, and/or behavior difficulties."
  },
  {
    "objectID": "datasets/healthy-brains.html",
    "href": "datasets/healthy-brains.html",
    "title": "Healthy Brains Network",
    "section": "",
    "text": "The Child Mind Institute has launched the Healthy Brain Network, an ongoing initiative focused on creating and sharing a biobank comprised of data from 10,000 New York City area children and adolescents (ages 5-21).\n\nPopulation: ages 5-21, children who likely have one or more psychiatric symptoms\nData collected:\n\nMRI + fMRI: movies (~10 min), predictive eye estimation regression - 3444 participants\nPhenotypic assessment - 4080 participants\nPhysical activity\nBehavioral measures (questionnaires)\nFamily structures (stress, trauma)\nSubstance use/addiction\nCognition and language tasks\nDisorder-specific questionnaires\nElectroencephalography\nDigital Voice and Video Recordings\nGenetics\nActigraphy\nCognitive Tasks (e.g., sequence learning), naturalistic stimuli\nEyetracking: pupil dilation and eye position\n\n\n\n\n\nPhenotypic Assessment Protocol\n\n\n\n\n\n\nWhich data are on openmind?\n\nImaging (rest, naturalistic)\nDemographic info\nCognitive/Behavioral results\nClinical disorders\n\nWhat is the format?\n\nraw, derivatives\n\nWhich releases are available?\n\ncurrently there are 10 releases of HBN imaging and phenotypic data\n\nHave imaging data been preprocessed?\n\nfmriprep (no)\nfreesurfer (no)\nfirst-level glms (no)\n\nMRI data have been preprocessed using Mindboggle and are available in S3 under the directory\nWhere are the data stored on openmind?\n\nare these data being transitioned to datalad?\n\nHow does a new user get access to the dataset?\n\nanyone with gablab group permissions should be able to access the data\n\ndirectories on openmind - HBN\n\n/om4/group/gablab/data/hbn_bids\n/nese/mit/group/sig/projects\n\n\n\n\n\n\nUse xcp-D package to do post-processing of resting state data (basically picks up where fMRIPrep left off)\nThis package also works on outputs from minimially preprocessed HCP data"
  },
  {
    "objectID": "datasets/abcd.html",
    "href": "datasets/abcd.html",
    "title": "ABCD",
    "section": "",
    "text": "The ABCD Study is a prospective longitudinal study starting at the ages of 9-10 and following participants for 10 years. The study includes a diverse sample of nearly 12,000 youth enrolled at 21 research sites across the country.\n\nPopulation: (n=12,000) Longitudinal study (starts at ages 9/10 for 10 years)\nBrain development: structural, task fMRI, resting state fMRI)\nSocial, emotional, cognitive development, substance use and attitudes, physical health, environmental factors\nLocal databases have been linked with ABCD dataset providing info about environment, poverty, pollution, school, policy for example [useful in providing context]\n\n\n\n\n\nAre the data on openmind?\nSee this community collection (ABCC) on derivatives from ABCD"
  },
  {
    "objectID": "datasets/adhd-200.html#overview",
    "href": "datasets/adhd-200.html#overview",
    "title": "ADHD-200",
    "section": "Overview",
    "text": "Overview\nThe ADHD-200 data set provides demographic and clinical information, including age, sex, and measures of symptom severity as assessed by the ADHD rating scale (ADHD-RS).\n\nData Storage\n\nnot currently on openmind/datalad\npreprocessed using"
  },
  {
    "objectID": "about-me.html",
    "href": "about-me.html",
    "title": "About Me",
    "section": "",
    "text": "I’m an Integrative Computational Neuroscience (ICoN) Fellow at MIT using computational approaches to identify biologically‐driven risk predictors of neurodevelopmental (e.g., ADHD) and neuropsychiatric (e.g., depression and anxiety) disorders.\nI received my PhD from the University of California, Berkeley in 2022 where I used machine learning and statistics to build models of brain function.\nI’m passionate about using my experience as an educator and academic mentor to communicate complex ideas to both non‐expert and expert audiences. I have a strong record of publishing in scientific journals (>600 citations) and presenting at research conferences (>10 proceedings). I have also taught neuroscience to diverse audiences, from undergraduate students at UC Berkeley to incarcarated students at San Quentin State Prison.\nFinally, I strongly believe in using data‐driven solutions to formulate and recommend policy, especially as it pertains to mental health solutions."
  },
  {
    "objectID": "about-me.html#more-information",
    "href": "about-me.html#more-information",
    "title": "About Me",
    "section": "More information:",
    "text": "More information:\n\nFor an up-to-date list of my publications, browse my google scholar profile\nFor video recordings of some recent talks, see my youtube channel\nFor an overview of my plans while at MIT, please check out this profile released by McGovern Institute"
  },
  {
    "objectID": "literature-review/development-translational-neuroimaging.html",
    "href": "literature-review/development-translational-neuroimaging.html",
    "title": "Neurodevelopment and Translational Neuroimaging",
    "section": "",
    "text": "Much of the points below came from a article by Siugzdaite et al. (2020)"
  },
  {
    "objectID": "literature-review/development-translational-neuroimaging.html#introduction",
    "href": "literature-review/development-translational-neuroimaging.html#introduction",
    "title": "Neurodevelopment and Translational Neuroimaging",
    "section": "Introduction",
    "text": "Introduction\n\n14-30% of children/adolescents live with a learning-related problem, associated with cognitive/behavioral problems. examples of these disorders are dyslexia, dyscalculia, language disorders. other diagnses related to neurodevelopmental disorders are adhd, asd.\nhow does the developing brain give rise to disorders?\nthere has been a lot of inconsistency in ascribing a range number of brain regions to individual neurodevelopmental disorders.\nfor example: adhd has been associated with grey matter differences within ACC, caudate nucleus, pallidum, striatum, cerebellum, PFC, premotor cortex etcs.\nwhy does this inconsistency exist? diagnostic groups are highly heterogeneous and overlapping and symptoms vary a lot within categories. there is no “purity” of developmental disorders.\nsolution: transdiagnostic approach?\n\nWhat is transdiagnostics?\nIdentifying underlying symptom dimensions that span multiple diagnoses.\nfor example, within neurodevelopmental learning disorders, primary focus is on identifying cognitive symptoms that underpin learning.\n\nanother reason for inconsistent brain-to-cognition mappings: they do not exist!\n\nequifinality: there could be many possible neural routes to the same cognitive profile or disorder\nmultifinality: the same local neural deficit could result in multiple different cognitive symptoms across individuals.\nthese concepts have not yet been translated into analytic approaches.\n\n\n\nGoal of the study\n\ntake a transdiagnostic approach to establish how brain differences relate to cognitive difficulties in childhood\nhow can the same pattern of neural deficits result in different cognitive profiles across children?\n\n\n\nMethod\n\ncognitive data from children with and without diagnoses were entered into an unsupervised ML algorithm called an artificial neural network – which preserves information about profiles within the dataset, captures non-linear relationships, and allows for measure to be differentially related across the sample. ideal method to use with transdiagnostic cohort.\nto determine how brain profiles relate to cognitive profiles, the same ANN was applied to whole-brain cortical morphology data\nArtificial neural network: cognitive data (z scored): age standarization mean and standard deviation from each assessments\nspecific type of network: self-organizing map - this algorithm represents multidimensional datasets as a two-dimensional map.\nCognitive profiles are robustly related to children’s learning ability, so a good test of whether the network can reliably represnt individual differences in cognition is to test whether it will generalize to unseen data and predict children’s learning scores.\nMapping brain profiles:\nWhole-brain cortical morphology metrics (cortical thickness, gyrification, sulci depth) were calculated for each child across a 68 parcel brain decomposition.\nFeature selction was performed before machine learning to reduce the risk of over-fitting with so many measures.\nLASSO regression reduced the number of indices down to 21 distint measures\n\n\n\nResults\n\nsummary of results:\n\nhold out CV revealed that cognitive profiles learned using ANN generalized to unseen data and were sig. predictive of childrens’ learning difficulties\nsimilarly, hold out CV showed that brain profiles generalized to unseen data and a child’s age-corrected brain profile was sig predictive of age-normed cognitive profile.\n\nthere were no one-to-one mappings: one brain profile could be associated with multiple cog profiles and vice versa\nalso, researchers found that the more central the hubs to a child’s brain organization, the milder or more specific the cognitive impairments. when these hubs were less well embedded, children showed the more severe cognitive symptoms and learning difficulties.\nchildren’s brain profiles predict their cognitive profile.\n\n\nWhat is the artificial neural network learning?\n\nis it learning about the severity of a particular set of brain values, or whether it had learned to identify peaks and troughs in individual profiles?"
  },
  {
    "objectID": "literature-review/SCSB_Colloquium_Series.html",
    "href": "literature-review/SCSB_Colloquium_Series.html",
    "title": "Neuroimmune interaction underlies both neurodevelopmental and immune-primed phenotypes - Jun Huh",
    "section": "",
    "text": "Pregnancy and Maternal Immune System\n\nfetus is a foreign body to the maternal immune system\nmaternal immune system must protect both the mother and fetus\nwhen this doesn’t work properly, there will be longlasting effects on the fetus\ninfecton during the late 1st trimester or 2nd trimester of pregnancy has been correlated wtih an increased frequency of neurodevelopmental disorders in children\nviral infection - inflammatory conditions - data on covid-19 during pregnancy: severity of maternal illness - might be increase in ASD in the future based on COVID infection\nwe need to study more what is happening during pregnancy and long lasting effects: not enough people studying this question\noverlap between ASD children and IBD - common venn diagram of immune responses\n\n\n\n\nPregnancy and Matneral Immune System\n\n\n\n\n\nPregnancy and Matneral Immune System\n\n\n\n\nMouse studies\n\nMIA offspring show increased susceptibility to bacteria-induced colitis\nincreased immune susceptibility of MIA offspring are postnatally determined\nmaternal gut bacteria: non-genetic contributors? free from bacteria in the womb and then we are exposed to bacteria immediately upon leaving the womb"
  },
  {
    "objectID": "literature-review/pHealth-terminology.html",
    "href": "literature-review/pHealth-terminology.html",
    "title": "pHealth terminology",
    "section": "",
    "text": "Sources of endophenoytpes:\n\nStress data - cortisol\narousal/attention - pupil dilation\nReaction time / accuracy - behavior\nStrength - grip force\nPulse/heart rate\nOxygen\nSpeech/voice data\nHandwriting\nPlasma (inflammation markers)\nSaliva\nMovement - sleep cycles\nTemperature\nSkin conductance (galvanic skin response)\nTranscriptomics\nfMRI BOLD signal\nCortical thickness/anatomy\nMobility data (tracked with phone)\nInternet search history (tracked with phone)\nSocial media engagement (reddit, facebook etc)\nElectronic health records (hospital admissions etc.)\nSingle nucleotide polymorphisms (SNPs)\n\n\n\nInflammation markers\n\nCytokine, chemokine, interleukin, interferon, tumor necrosis factor, colony-stimulating factor, growth factor (IGF, VEGF, NGF, FGF, TNF)\nYou can assess inflammation/cytokine/chemokine factors in plasma or serum samples.\n\n\n\nPolygenic risk score\n\nrepresents the total number of genetic variants that an individual has to assess their heritable risk of developing a particular disease."
  },
  {
    "objectID": "literature-review/precision-psychiatry-conference.html",
    "href": "literature-review/precision-psychiatry-conference.html",
    "title": "Conference on Precision Psychiatry",
    "section": "",
    "text": "Leveraging Healthcare Data (Lea Davis - Vanderbilt)\n\nstudying genomics of complex phenotypes\nlevaraging heterogeneity and comobordity in a real-world care setting\n\n\npsycheMERGE:\n\nEHR data available linked with genotype samples (jordan smoller and chris de brie)\n21 sites and affiliated partners\nbuilt on an existing collaborative infrastructure (eMERGE)\npsycheMERGE focuses on mental illness\ninstead of bringing data together, they bring scientists together - benefits: analyses can be scaled up quickly\nover 15 million EHRs\nover 950,000 genotyped patients\naverage EHR ercord length year - 5 years\naverage record length for genotyped patients - 12 years\non average, 6 patient visits per year\nstructure of healthcare in the US\n\nprimary care (health promotion, counseling, eduation)\nsecondary care (assessment, screening to facilitate early detection)\nteriatry: treatment and management of chronic complex disease\n\nwhat is included in EHR?\n\nbilling codes (reason for clinical visit)\nnote between provider and patient\nnarrative notes\nmedications\nER visits\nlabs and pathology\ninpatient visits\n\nhealth record is very dynamic - always being updated. behind the structure is a human process.\nbreadth and depth of EHR data provide a unique view into a lifetime of comorbidities (particular for patients with psychiatric illness)\n\n\n\nphenomone-wide association study\n\ntake advanttage of breadth of EHR data\npolgenic risk score for schizophrenia\n\nthis score was strongly associated with schizophrenia\ntranslational sandbox: how well does this genetic tool perform in a clinical pop?\nphenotypes from EHR can be interrogated using polygenic scores\n\ncan we use lab data to identify potential biomarkers that link genetic risk to mental health conditions and related outcomes?\n\nqualityLab and LabWAS - > 1 billion lab observations comprised of 11,000 labs\ntake genetic risk scores - identify them in individuals - and then test whether those genetic scores are associated with routinely collected labs\n\n\n\n\nTake home messages\n\nmental health is not biologically separable from physical health\nmental health can have independent effects on physical health and we don’t appreciate enough how the reverse is also true\n360 - coordinated care improves mental and physical outcomes - power of whole-person care\ngenetics allows for a relationship between biology and mental health (e.g., depression + cardiovascular disease story) - biological relationship here (lens of genetics) - co-treatment of both can lead to improved outcomes\npsychiatry is underrepresented in primary care settings\n\n\n\n\nNigam Shah\n\nLeveraging healthcare data for precision medicine and psychiatry\nthink of data as a timeline view (a live thing)\nusing patient timeline objects to provide better care\n\n\n\n\nEHR timeline\n\n\n\n\n\nEHR pipeline\n\n\n\nGreen Button project:\n\ngiven a specific case, provide a usmmary of similar patientss in stanfords clinical data warhouse - common treatmnt choices made, and observed outcomes\ngreen button = the idea\nconsultation service = the execution of that idea at Stanford\n“what happened to other patients like me?”\nengineers, technocrats ask “how” quetions?\nif you want to make an impact, ask a “why” question?\nhow do we get patients to the table more readily?\n\n\n\n\nspeaker?? - Inverting model of data sharing\n\ntraditional approach:\n\ndata sharing = data copying\nfew audit controls\nhuge infrastructure needed\nsiloed compute - well resourced place\nneed for elastic computing patterns\n\ncloud-centric approach:\n\nbring researchers to the data\nthis is the goal of the broad data sciences platform\norganization of more than 250 software engineers and ML experts\n\nTools: terra (microsoft, broad, verily) - data platform for biomedicine\n\n\n\nLaura Germine\n\nhow do we make research studies more accessible?\n\nminimze barriers to participation\nrespect the participant’s time\nmake the study relevent to people’s goals and interets by return of individual-level research results\nindividualized results as psychoeducation\n\ncovid and the accessibility crisis\n\nnew tools for collecting data online\nhow do we get to scale? what tools do most people have - smartphones"
  },
  {
    "objectID": "literature-review/RDoC.html",
    "href": "literature-review/RDoC.html",
    "title": "RDoC",
    "section": "",
    "text": "RDoC (Research domain criteria initiative): The aim is to understand the nature of mental health and illness in terms of varying degrees of dysfunction in fundamental psychological/biological system (i.e. major domains of neurobehavioral functioning), rather than within established diagnostic categories.\nRDoC Domains: negative valence systems, positive valence systems, cognitive systems, social processes, arousal and regulatory systems,\nSome examples of RDoC constructs: reward responsiveness, reward prediction error, attention, perception, cognitive control, performance monitoring, social communication etc.)\nRDoC: aims to address the heterogeneity in the current nosology by providing a biologically-based, rather than symptom-based, framework for understanding mental disorders\nThe question now becomes one of when and how to build a long-term framework for research that can yield classification based on discoveries in genomics and neuroscience as well as clinical observation, with a goal of improving treatment outcomes (Insel et al. 2010)\nWhat does RDoC do?\n\nConceptualizes mental illnesses as brain disorders [of brain circuits]\nAssumes that dysfunction in neural circuits can be identified with the tools of clinical neuroscience\nThe framework assumes that data from genetics and clinical neuroscience will yield biosignatures that will augment clinical symptoms and signs for clinical management\n\nHow would this work in practice?\n\nClinician could supplement a clinical evaluation of what we now call an “anxiety disorder” with data from functional or structural imaging, genomic sequencing, and laboratory-based evaluations of fear conditioning and extinction to determine prognosis and appropriate treatment, analogous to what is done routinely today in many other areas of medicine\n\nHow could RDoC alter clinical practice?\n\nThe critical test is how well new molecular and neurobiological parameters predict prognosis or treatment response.\n\nWhat would be some examples of success?\n\nif a BDNF polymorphism identifies people with anxiety syndromes who do not respond to behavior therapy\nif a copy number variant defines a form of psychosis with high remission rates\nif neuroimaging yields a subtype of a mood disorder that consistently responds to lithium"
  },
  {
    "objectID": "literature-review/RDoC.html#conventional-way-of-thinking-about-diagnosis",
    "href": "literature-review/RDoC.html#conventional-way-of-thinking-about-diagnosis",
    "title": "RDoC",
    "section": "Conventional way of thinking about diagnosis:",
    "text": "Conventional way of thinking about diagnosis:\n\nDiagnosis is based on clinical observation: identifying symptoms that cluster together, determining when symptoms appear, resolve, recur, become chronic.\nProblem: difficult to deconstruct clusters of complex behaviors and link them to neurobiological systems. By linking basic biological and behavioral components, it will become possible to construct valid, reliable phenotypes (measurable traits or characteristics) for mental disorders.\nMental disorders are biological disorders involving brain circuits that implicate specific domains of cognition, emotion, or behavior."
  },
  {
    "objectID": "literature-review/methodology-pHealth.html",
    "href": "literature-review/methodology-pHealth.html",
    "title": "Methodological considerations for precision medicine",
    "section": "",
    "text": "All of the points below came from a article by Dhamala et al. (2022)"
  },
  {
    "objectID": "literature-review/methodology-pHealth.html#data-transformation",
    "href": "literature-review/methodology-pHealth.html#data-transformation",
    "title": "Methodological considerations for precision medicine",
    "section": "Data transformation",
    "text": "Data transformation\n\nneuroimaging preprocessing pipeline and analytical methods can introduce variability into neuroimaging studies and subsequently bias findings."
  },
  {
    "objectID": "literature-review/methodology-pHealth.html#phenotype-selection",
    "href": "literature-review/methodology-pHealth.html#phenotype-selection",
    "title": "Methodological considerations for precision medicine",
    "section": "Phenotype selection",
    "text": "Phenotype selection\n\nclinically distinct phenotypic profiles can be assigned the same diagnosis - for both major depressive disorder and generalized anxiety disorder, inter-rater reliabilities are 0.28 and 0.21 respectively.\nit is not realistic to think that the same neurobiological properties will underlie the unique clinical presentations of a given diagnosis.\na further complication that impacts the clinical utility of brain-behaviorl models is that clinical scales can vary a lot in terms of the symptoms they capture, and single symptomatic or dimensional measures are insufficient to capture the complex nature of psychiatric illness in an individual."
  },
  {
    "objectID": "literature-review/suicide-prediction.html",
    "href": "literature-review/suicide-prediction.html",
    "title": "Suicide prediction using structured-unstructured interactions in EHR models",
    "section": "",
    "text": "Goals of Research\n\nUnstructured EHR have been used for clinical predictive tasks, both as a standalone feature-set and in combination with structured data\nultimate goal: optimally integrate both data types to improve predictive performance.\n\n\ncompare the predictive value of structured and unstructured EHR data as standalone datasets for predicting suicide risk\n\n\nevaluate the increase in prediction performance when integrating both structured and unstructured data using various models\n\n\nidentify structured-unstructured feature pairs in which the interaction between the two features differs substantially between case + non-case populations\n\n\n\n\n\nChallenge\n\npredicting suicide risk is a complex challenge. Clinicians’ intuition for detecting at-risk individuals is no better than random chance.\n\n\n\nMethods:\n\nstructured data: diagnoses, labs, medications, procedures\nunstructured data: clinician notes\ncontingency analysis: joint suicide attempt of risk features A (structured) and B (unstructured) is defined as the log of the ratio of the expected joint occurences of AB in suicide vs. non-suicide group\nmodels:\n\nnaive bayes classifier (NBC) - subclass of bayesian networks that assume strong conditional independence of all input features, greatly reducing model complexity. well-suited for clinical decision support tasks - highly scalable and interpretable. they compute a risk score for each concept using the odds ratios of its prevelence in case and non-case populations. During validation, the NBC risk scores for each concept in a patient’s visit history were added together to compute a cumulative suicide risk measure for the subject.\nbalanced random forest classifier - capable of capturing interactions between features. Balanced random forests are an extension of random forest models and work well with label-imbalanced datasets.\n\n\n\n\nFindings:\n\nmodels trained only on features derived from structured-data perform better than mdoels trained only on features derived from unstructured data.\n\nbut importantly, the performance gap between models trained with structured data and those trained with unstructured data is quite small, especially considering the compact size of the unstructured data\n\nunstructured data may help capture complementary information about the well-being of patients that structured data may not provide (e.g., environmental risk factors: living on the street, prisone etc.)"
  },
  {
    "objectID": "literature-review/EMR-selfharm.html",
    "href": "literature-review/EMR-selfharm.html",
    "title": "Identifying risk factors for self-harm using electronic medical records",
    "section": "",
    "text": "Build computational models using clinical/other characteristics (e.g., previous hospital admissions, comorbidities, cognitive function, diagnoses, immunizations, allergies, medications, other illnesses, demographics) to identify risk predictors for self-harm.\nBased on modeling, do any significant clusters emerge that are dissociable from one another based on clinical features?\n\n\nIdeas from Quimby et al. 2022"
  },
  {
    "objectID": "literature-review/EMR-selfharm.html#summary",
    "href": "literature-review/EMR-selfharm.html#summary",
    "title": "Identifying risk factors for self-harm using electronic medical records",
    "section": "Summary",
    "text": "Summary\n\naim: examination of the relationship between substance use and impairment and suicidality in an adolescent sample.\ndata: self-administered (computerized) assessment evaluating depression, suicide, ptsd, violence, traumatic exposure, bullying, substance use. sample, 14-18 year olds, n=11,623\nmethods: binary logistic regression to estimate the odds of reporting current suicidal thoughts or behaviors associated with patient demographics, substance use and substance-related impairment.\nresults: increased likelihood of reporting suicidal thoughts if male + history of substance use"
  },
  {
    "objectID": "literature-review/EMR-selfharm.html#background",
    "href": "literature-review/EMR-selfharm.html#background",
    "title": "Identifying risk factors for self-harm using electronic medical records",
    "section": "Background",
    "text": "Background\n\nsuicide is the third leading cause of death among 10-14 year olds and second among 15-24 year olds, making it a public health epidemic.\nThe emergency department (ED) is uniquely positioned to respond to youths at risk for psychiatric distress given that approx 1.5 million youths in the US receive routine car through the ED.\nuniversal public screening is therefore a public health necessity to ensure that no youths are missed in a complex health care setting.\nthere is evidence that asking adolescents about suicide (via suicide screening questions, colombia-suicide severity rating scale) increases identification of youths at risk of suicide, and predicsts subsequent suicide-related hospital visits.\nexploring risk factors (e.g., substance use) may be important to increase the effectiveness of suicide-specific screens used through EDs."
  },
  {
    "objectID": "literature-review/EMR-selfharm.html#the-screening-tool-bhs-ed",
    "href": "literature-review/EMR-selfharm.html#the-screening-tool-bhs-ed",
    "title": "Identifying risk factors for self-harm using electronic medical records",
    "section": "The screening tool (BHS-ED)",
    "text": "The screening tool (BHS-ED)\n\nThe BHS-ED is an abbreviated version of the behavioral health screen, a standarized, well-validating measure of adolescent behavioral health issues used in nonpsychiatric settings.\nPatients with severe level of injury or illness or cognitive or developmental delay are not offered the BHS-ED, and it is currently only offered to English-speaking patient (representing >99% of adolescent patients served in this particular ED).\nAfter a patient has completed the BHS-ED, the tool scores and generates a report that is transferred into the EHR for a clinician to review.\n\n\nMeasures\n\n26 core items assessing symptoms across 7 major domains (demographics, suicide history and risk, violence exposure, traumatic distress, depression, and substance use) and 32 follow-up items based upon positive endorsements on the core items.\nThe BHS-ED scales have demonstrated high internal consistency\n\n\n\nDiscussion\n\nadolescents (particularly males) who reported substance use in the past month were more likely to report current suicideal ideation and/or behaviors as were those were were older and male.\nthe findings however deviate from past studies which have identified female adolescents as more forthcoming in reporting suicidal thoughts and behaviors.\nmany people visit a health care provider in the weeks to months preceding a suicide attempt.\nadolescents are presenting to the ED with a number of psychiatric stressors placing them at risk of self-harm or suicide.\nThus, suicide screening is warranted as part of standard ED care.\nDetecting suicide risk within a vulnerable patient population, such as adolescents, is the first, not last step in effectively addressing this youth public health issue.\n\n\n\nImportant Considerations and Future Work\n\nno qualitiative (interview-based) responses, which makes it difficult to assign directionality of the associations between substance misuse and suicidal thoughts."
  },
  {
    "objectID": "literature-review/index.html",
    "href": "literature-review/index.html",
    "title": "Overview",
    "section": "",
    "text": "Notes on papers I’ve been reading, conferences I’ve been attending …"
  },
  {
    "objectID": "literature-review/pHealth-other-fields.html",
    "href": "literature-review/pHealth-other-fields.html",
    "title": "pHealth in other fields",
    "section": "",
    "text": "Much of the points below came from a review paper by MacEachern and Forkert (2020)"
  },
  {
    "objectID": "literature-review/pHealth-other-fields.html#examples-of-phealth-in-practice",
    "href": "literature-review/pHealth-other-fields.html#examples-of-phealth-in-practice",
    "title": "pHealth in other fields",
    "section": "Examples of pHealth in practice",
    "text": "Examples of pHealth in practice\n\nOne of the first fields to use a precision medicine approach to treat human disease was transfusion medicine, where the discovery of blood types in the early 1900s revolutionized blood transfusions, allowing for matching of donor and recipient blood types, and avoiding complications associated with mismatched donor and recipient blood Giangrande et al. 2000\npHealth has enabled gene therapy for infants with spinal muscular atrophy (SMA) type I"
  },
  {
    "objectID": "literature-review/pHealth-other-fields.html#genetics-genomics-and-phealth",
    "href": "literature-review/pHealth-other-fields.html#genetics-genomics-and-phealth",
    "title": "pHealth in other fields",
    "section": "Genetics, genomics and pHealth",
    "text": "Genetics, genomics and pHealth\n\nGenetics is the study of genes and their roles in inheritance\nGenomics is the study of a person’s genome and the interactions within the genome and the greater environment\nOther fields now incorporate their data in pHealth:\n\nepigenetics, proteomics (protein), metabolomics (metabolics), radiomics (radiology), pharmacomics (pharmacology), microbiomics (microbiome)\n\nMulti-omics: inclusion of data from multiple domains"
  },
  {
    "objectID": "literature-review/pHealth-other-fields.html#machine-learning",
    "href": "literature-review/pHealth-other-fields.html#machine-learning",
    "title": "pHealth in other fields",
    "section": "Machine learning",
    "text": "Machine learning\n\nMachine learning is a branch of artificial intelligence in which computer-based models are created to learn and identify patterns in high dimensional datasets to create prediction and classification models based on training data\nML is typically divided into supervised, unsupervised and reinforcement learning (RL)\nIn pHealth, supervised and unsupervised approaches are more common than RL, since the latter requires direct feedback"
  },
  {
    "objectID": "literature-review/pHealth-other-fields.html#unsupervisedsupervised-learning",
    "href": "literature-review/pHealth-other-fields.html#unsupervisedsupervised-learning",
    "title": "pHealth in other fields",
    "section": "Unsupervised/supervised learning?",
    "text": "Unsupervised/supervised learning?\n\nUnsupervised learning aims to uncover patterns in unlabelled data - in doing so, it can automatically identify clusters of similar cases within a dataset (e.g., variational autoencoders, k-means, pca)\nSupervised learning aims to identify patterns in multi-dimensional data based on labelled data (e.g., healthy vs disease). A training dataset with ground truth labels is typically used to build a model and optimize performance of the ML model for the desired outcome. The uncovered (learned) patterns can then be used to classify new datasets or make data-driven, patient-individual predictions. Some popular supervised learning approaches: SVM, random forests, linear models, deep neural nets."
  },
  {
    "objectID": "literature-review/pHealth-other-fields.html#artificial-neural-networks",
    "href": "literature-review/pHealth-other-fields.html#artificial-neural-networks",
    "title": "pHealth in other fields",
    "section": "Artificial neural networks",
    "text": "Artificial neural networks\n\nbasic make-up: input layer, multiple hidden layers, output layer\nnumber of “neurons” in the input layer is equal to the number of input features while the number of “neurons” in the output layer is equal to the number of classes in case of a classification problem (e.g., patients with/without a disease)\nArtificial neural networks with many hidden layers are typically referred to as deep neural networks.\nConvolutional neural networks apply convolutional filters in the first layers of the deep neural network that can automatically identify important temporal or spatial features in a dataset such as three-dimensional imaging data. Convolutional filters are optimized in the same fashion as network weights are optimized."
  },
  {
    "objectID": "literature-review/pHealth-other-fields.html#ml-and-phealth",
    "href": "literature-review/pHealth-other-fields.html#ml-and-phealth",
    "title": "pHealth in other fields",
    "section": "ML and pHealth",
    "text": "ML and pHealth\n\nCertain conditions should be met in order for ML approaches to be useful for pHealth\n\ninput data must be high quality with small artifact or noise levels\nground truth labels must be correct (e.g., correct diagnosis/diagnostic labels)\ntraining set without missing features\nlarge datasets which enable the models to learn the true variation in the data with reduced risk that a few outliers affect the model negatively\nin classification for pHealth, both precision and accuracy are important and should both be optimized"
  },
  {
    "objectID": "literature-review/pHealth-other-fields.html#advantages-and-limitations-of-ml-for-phealth",
    "href": "literature-review/pHealth-other-fields.html#advantages-and-limitations-of-ml-for-phealth",
    "title": "pHealth in other fields",
    "section": "Advantages and limitations of ML for pHealth",
    "text": "Advantages and limitations of ML for pHealth\n\nadvantages:\n\nno strict assumption about data distribution (models can combine multi-omics data)\nregularization is widely used in ML models, therefore, these models can usually handle noisy data and large variances\ncomplex ML models have the ability to identify multi-faceted, non-linear patterns in training data, which might not be observable to simple linear models\n\nlimitations:\n\nthe ability to identify non-linear patterns comes with reduced interpretation capabilities, compared to simple linear models (i.e. black box criticism)\nin overfitting training data, models often fail to generalize, this happens more often with complex models. deep neural networks with thousands (millions) of features often fail to generalize"
  },
  {
    "objectID": "literature-review/pHealth-other-fields.html#ml-and-genomics",
    "href": "literature-review/pHealth-other-fields.html#ml-and-genomics",
    "title": "pHealth in other fields",
    "section": "ML and genomics",
    "text": "ML and genomics\n\nGWAS studies (genome-wide association studies): genomic information is examined to identify variants associated with a trait or phenotype. some work has shown that genotype-based disease risk assessment may be possible for diseases for which single nucleotide polymorphism (SNP) arrays carry a large risk proportion\nML models can also be applied to multi-modal data acquired through electronic medical records (EMRs) to identify patients with conditions that may benefit from early treatment or participation in randomized control trials or novel interventions."
  },
  {
    "objectID": "literature-review/pHealth-overview.html",
    "href": "literature-review/pHealth-overview.html",
    "title": "Intro to Precision Medicine",
    "section": "",
    "text": "What is precision medicine?\n\nPrecision medicine is the approach of predicting and diagnosing mental health disorders using:\n\nmicrobiome, inflammation, genomics, neural markers (fMRI, MRI, EEG, pupillometry), behavior, clinical symptoms\n\n\n\n\nWhat is the overarching goal of pHealth?\nImproved risk assessment and early detection of mental illness.\n\n\nHow will this goal be achieved?\nOur aim is to develop biologically driven risk predictors and monitors of mental health. Using these datasets, we will relate genetic information to clinical evaluations through endophenotypes that span brain imaging, cognitive and behavioral testing, and information from wearable devices and speech recordings.\nDeveloping these kinds of models are not without significant challenges but the potential outcome is enormous: providing useful brain measures, and new categories of disorders.\n\n\nWhat are the short term goals?\n\nTo find biotypes based on combining genetic and brain imaging data\nTo develop risk predictors that integrate biological and behavioral information.\nHow will these goals be achieved?\nTo test these models, we would deploy them in research clinics.\nThe outcome of this work will feed into a more longitudinal goal of capturing real-world behavior and interventions in order to build models to monitor and deliver interventions that are tuned to individual trajectories.\n\n\n\nWhat is the long term goal?\nThe long term goal is to create an intelligent assistive framework for mental health management that supports integration of multiple sources of live and longitudinal data, learns phenotypic associations and builds interpretable, predictive models, and suggests individualized actions towards targeted goals.\n\n\nWhat is the problem?\n\nClinical assessment is resource intensive and inaccessible to those who need it most. When accessible, initial assessments are ineffective: do not consider societal and community options to boost wellbeing.\nWhy are ML approaches often ineffective?\n\nML diagnostic approaches often focus on specific disorders rather than symptoms.\nML approaches are often devoid of connections to underlying biology\n\n\n\n\nWhat is the opportunity?\n\nThe advent and growth of consortial data collections that include genomic assays, clinical and behavioral data together with brain imaging offer a unique opportunity to understand genotypic and phenotypic variation in a large population.\nDatasets:\n\nUK Biobank, adolescent brain cognitive development study, genus dataset, healthy brain networks\n\n\n\n\nConsiderations:\n\nHolistic approaches:\n\nsocietal, cultural, community-based interventions in conjunction with (instead of) ML-guided healthcare\n\nEthics:\n\ndata anonymity? Who do the tools serve? Are they biased against certain groups?\nhow is model uncertainty communicated to scientists and non-scientists alike?"
  },
  {
    "objectID": "literature-review/subcortical-translational-neuroimaging.html",
    "href": "literature-review/subcortical-translational-neuroimaging.html",
    "title": "Subcortical Translational Neuroimaging",
    "section": "",
    "text": "Much of the points below came from a article by Klein-Fugge et al. (2022)"
  },
  {
    "objectID": "literature-review/subcortical-translational-neuroimaging.html#overall-goal",
    "href": "literature-review/subcortical-translational-neuroimaging.html#overall-goal",
    "title": "Subcortical Translational Neuroimaging",
    "section": "Overall goal",
    "text": "Overall goal\n\nidentify specific relatoinship between dimensions of mental health and connectivity in precise subcortical networks"
  },
  {
    "objectID": "literature-review/subcortical-translational-neuroimaging.html#gap",
    "href": "literature-review/subcortical-translational-neuroimaging.html#gap",
    "title": "Subcortical Translational Neuroimaging",
    "section": "Gap",
    "text": "Gap\n\npredictions in translational neuroimaging studies typically rely on a large number of brain regions, networks, or edges. impressive prediction accuracies come at the cost of reduced anatomical specificity.\nanother problem, unrelated to improving anatomical specificity, is relating baseline neural measures to mental well-being. disorders are ill-defined and span a broad range of impairments that are not consistently present in all patients diagnosed with the same disorder, and symptoms are partly overlapping between disorders.\n^^ one of the reasons why a classifier trained to distinguish a depressed from a non-depresse person reveals a broad network of regions instead of mapping onto well-defined and anatomically interpretable brain circuits.\nnew approach: focus on specific rather than broad symptom categories - may be possible to relate them to specific brain circuits"
  },
  {
    "objectID": "literature-review/subcortical-translational-neuroimaging.html#approach-behavior",
    "href": "literature-review/subcortical-translational-neuroimaging.html#approach-behavior",
    "title": "Subcortical Translational Neuroimaging",
    "section": "Approach: Behavior",
    "text": "Approach: Behavior\n\nauthors examined variance in mental health dimensions along a continuum spanning the subclinical range..\nthey analysed 33 markers including measures from the NIH toolbox “emotion” Ususcales: psychological well-being, social relationships etc.)\nTo capture latent dimensions that produce mental well-being, they performed a factor analysis that resulted in four main factors: social and life satisfaction, negative emotions, sleep, anger and rejection\nvisualize factor loadings onto behavioral scores."
  },
  {
    "objectID": "literature-review/subcortical-translational-neuroimaging.html#approach-latent-mental-health-dimensions-x-brain-connectivity",
    "href": "literature-review/subcortical-translational-neuroimaging.html#approach-latent-mental-health-dimensions-x-brain-connectivity",
    "title": "Subcortical Translational Neuroimaging",
    "section": "Approach: Latent mental health dimensions x brain connectivity",
    "text": "Approach: Latent mental health dimensions x brain connectivity\n\ndoes FC between specific amygdala nuclei and ROIs carry information about mental well-being as captured by four latent mental health dimensions?\ncan you predict mental health dimensions in held-out data using a weighting of FC values derived from an independent dataset?"
  },
  {
    "objectID": "literature-review/translational-neuroimaging.html",
    "href": "literature-review/translational-neuroimaging.html",
    "title": "Translational Neuroimaging",
    "section": "",
    "text": "Much of the points below came from a review paper by Woo et al. (2017)"
  },
  {
    "objectID": "literature-review/translational-neuroimaging.html#utility-for-phealth",
    "href": "literature-review/translational-neuroimaging.html#utility-for-phealth",
    "title": "Translational Neuroimaging",
    "section": "Utility for pHealth",
    "text": "Utility for pHealth\n\nMost translational neuroimaging studies have focused on diagnosis, identifing brain signatures that distinguish patients from healthy controls (if a model doesn’t differentiate patients from controls or predict symptoms, it is unclear whether it is a clinically relevent model at all)\nOther models (although fewer in number) are being developed for more difficult classification and prediction problems, not easily addressed using existing clinical measures:\n\nneuroimaging models for risk assessment\nearly detection\npredicting conversion to full-scale disorders\ndifferential diagnosis\nsub-typing of patients and predicting treatment response"
  },
  {
    "objectID": "literature-review/translational-neuroimaging.html#example-studies",
    "href": "literature-review/translational-neuroimaging.html#example-studies",
    "title": "Translational Neuroimaging",
    "section": "Example Studies",
    "text": "Example Studies\n\nAlzheimer’s Disease:\n\nmodels have been able to predict who will later convert to a disease in advance of its onset.\nthese models are possible because of ADNI dataset, which has collected longitudinal data from people with mild cognitive impairment (MCI)\nthe SPARE-AD index (spatial pattern of abnormality for recognition of early alzheimer’s disease) is a particularly promising model. Specifically, the SPARE-AD model is a pattern classifier trained on spatial patterns of brain atrophy measured by structural MRI and indicates the presence of brain atrophy pattern, characteristic of AD. The model also predicts subsequent cognitive decline and transition to AD."
  },
  {
    "objectID": "literature-review/translational-neuroimaging.html#differential-diagnosissubtyping-and-predicting-outcomes",
    "href": "literature-review/translational-neuroimaging.html#differential-diagnosissubtyping-and-predicting-outcomes",
    "title": "Translational Neuroimaging",
    "section": "Differential diagnosis/subtyping and predicting outcomes",
    "text": "Differential diagnosis/subtyping and predicting outcomes\n\nneuroimaging models can also be used for differential diagnosis and patient subtyping (i.e. stratification): these models are useful because they can provide important information among disorders and symptoms at the biological level, potentially identifying subgroups that are not reflected in existing diagnostic categories.\nmany neuropsychiatric and neurological disorders are comorbid, therefore differential diagnosis can assist in identifying distinguishing features of neuropathology, and provide a new way to examine overlap across disorders.\nsome studies have successfully grouped patients into ‘biotypes’, which usually means that these patients have differential disease course or treatment response. For example a study by Clementz et al. 2016 grouped patients with psychosis intro three transdiagnostic biotypes based on neuropsychology and EEG data, and another study by Drysdale et al. 2016 used resting state functional connectivity (rs-FC) to group patients with depression into 4 biotypes, based on differential responsiveness to transcranial magnetic stimulation.\nModels are also built with the goal of customizing treatment based on individual brain markers: this endeavour is central to pHealth. For example: studies using brain measures to predict who will respond to a particular treatment can identify brain biotypes useful for guiding treatment."
  },
  {
    "objectID": "literature-review/translational-neuroimaging.html#what-are-next-steps-for-translational-neuroimaging",
    "href": "literature-review/translational-neuroimaging.html#what-are-next-steps-for-translational-neuroimaging",
    "title": "Translational Neuroimaging",
    "section": "What are next steps for translational neuroimaging?",
    "text": "What are next steps for translational neuroimaging?\n\nmodeling efforts must mature in order to provide clinically useful applications\n\ndiagnostic value:\n\nwhat qualifies a brain measure as being a sensitive marker? it must be diagnostic at the individual level.\nsensitivity refers to how robustly the measure responds when the outcome is present.\nspecificity refers to whether the measure responds only in the presence of the target outcome and not to others.\nin moving from evaluating brain measures in a research to clinical settings, it is important to consider both positive and negative predictive values\nwhat are the societal and clinical costs of false positives and negative errors?\n\ndeployability and scalability:\n\nbrain models that are useful for translation must be easily applicable to new individuals and shareable across groups\na recent (and encouraging) trend is named signatures for brain disorders. by naming neural signatures, it implies that models can be shared and annotated by many groups. one such example is SPARE-AD for Alzheimer’s disease the PDRP (Parkinson’s disease-related pattern)\n\ngeneralizability\n\nmodels useful for translation must be generalizable in several ways: 1) they must generalize to new individuals, 2) the most useful signatures should generalize across laboratories, scanners, and minor variants in testing conditions, 3) useful signatures will generalize meaningfully to other outcomes related to the same construct.\nwe need ecologically valid data sets.\n\n\nProcess-based predictive models:\n\nmost translational models are comprised of spatial patterns that map brain structure/function onto clinical outcomes.\nhowever, these models do not consider intermediate features or processes and are often minimally constrained by theories of brain function.\nthey provide little description of the division of labor across brain regions and the dynamics of information flow through the regions included in the model.\none promising direction is the development of signatures for basic mental processes - which can serve as intermediate features that are altered in various combinations of different disorders.\nthese models are necessary if we’re going to move beyond current diagnostic categories and establish specific forms of neuropathology that lead to specific functional problems across disorders (RDoC idea)."
  },
  {
    "objectID": "literature-review/cerebellum-neuropsych.html",
    "href": "literature-review/cerebellum-neuropsych.html",
    "title": "Cerebellum and Neuropsychiatric Disorders",
    "section": "",
    "text": "Questions:\n\nAre volume-, network-, region-, gradient-based changes in the cerebellum contributing to disease/symptom etiology that are unique from corresponding changes in the neocortex?\nAre particular regions of the cerebellum more susceptible to brain aging, and how does this relate to different neuropsychiatric/neurological/neurodevelopmental disorders?\nIs there a relationship between sexual dimorphism/asymmetry and neuropsychiatric disorders in the cerebellum?\nIn predicting X disorder, how much variance is explained by unique cerebellar signatures, relative to other biomarkers (e.g., behavior, occupational history, digestive health)\nTo what extent are disorders characterized by UK Biobank accompanied by RDoC-like constructs and domains? How is cognitive function measured? [behavioral tasks or questionnaires]."
  },
  {
    "objectID": "literature-review/cerebellum-development.html",
    "href": "literature-review/cerebellum-development.html",
    "title": "Cerebellum and Development",
    "section": "",
    "text": "Many of these observations come from the following paper: Sathyanesan et al. 2019"
  },
  {
    "objectID": "literature-review/cerebellum-development.html#introduction",
    "href": "literature-review/cerebellum-development.html#introduction",
    "title": "Cerebellum and Development",
    "section": "Introduction",
    "text": "Introduction\n\nSubdivisions of the cerebellum have distinctive developmental trajectories with more phylogenetically recent regions maturing later (Tiemeier et al. 2010)\nWhy should we study the cerebellum during development: unique protracted developmental trajectories, sexual dimorphism, preferential vulnerability to environmental influences, implication in neurodevelopmental disorders.\nBecause the cerebellum reaches its peak volume later than the cerebrum [suggesting prolonged developmental course], it may be especially interesting to investigate differences in grey matter volume between cerebellum and cortex during this developmental window (across males + females too).\nThe larger size of the cerebellum in males and differences between sexes in longitudinal development may reflect sex-specific factors related to the higher risk for these disorders in males (Tiemeier et al. 2010)\nDifferent cerebellar regions have distinct growth patterns with varying degrees of sexual dimorphism. Cerebellum is at adult volume in females during 7-11 years but not males (Caviness et al. 1996).\nMales are particularly vulnerable to neurodevelopmental disorders (diagnosed at a higher rate with adhd, dyslexia etc)."
  },
  {
    "objectID": "literature-review/cerebellum-development.html#cerebellum-and-vulnerability",
    "href": "literature-review/cerebellum-development.html#cerebellum-and-vulnerability",
    "title": "Cerebellum and Development",
    "section": "Cerebellum and vulnerability",
    "text": "Cerebellum and vulnerability\n\nrisk factors that impair cerebellar growth (e.g. neonatal brain injury) are correlated with poor overall developmental outcomes at later stages Sathyanesan et al. 2019\ncerebellum is especially suspectible and vulnerability to insult is due to its protracted developmental trajectory.\nthe cerebellum is among the first brain structures to begin cellular differentiation and one of the last to fully mature, therefore, the cerebellum is vulnerable to dysfunction due to genetic and epigenetic factors, a toxic in utero environment, focal or global neonatal brain injury\nthe complexity of risk factors acting over the course of development results in a broad range of cellular, morphological, and circuit abormalities.\nwhereas much of neocortical neurogenesis occurs prenatally Silbereis et al. 2016 , cerebellar neurogenesis continues until the 11th postnatal month Abraham et al. 2001\n85% of granule cells are generated after birth Kiessling et al. 2013\nthe cerebellum quadruples in volume between the 24th and the 38th gestational weeks, and its cortical surface increases 30 times Volpe et al. 2009\nthe cerebellum effectively doubles in size (increase in 108%) in the first 90 days after birth. this increase in size is underscored by an increase in cell density.\nthe external granule layer disappears by the end of the 18th postnatal month Rauf & Kernohan, 1944. The authors hypothesize that the persistence of the external granule layer past 20 postnatal months lead to the development of medulloblastomas (tumors that affect the cerebellum in children). Typically the EGL disappears first in the vermis and then later in the hemispheres.\nEarly postnatal development is also characterized by massive outgrowth of dendrites and axons, followed by synaptogenesis, glial proliferation, and myelination, predominately in the forebrain and cerebellum.\ndevelopmental disruption resulting in cerebellar atrophy could affect cerebello-cortical connectivity.\nthe synapse is an effective point of functional comparison between neocortex and cerebellum. many neurodevelopmental disorders involve deficits in synapse formation, maturation, and function.\n\na typical pyramidal cell in the neocortex has approx 8,000 synapses, whereas a single Purkinje cell may have 200,000 synapses.\nreduced number of synapses are characteristic of many neurodevelopmental disorders\nwe now know that granule cells encode rich sensory information, therefore, synaptic deficits in PCs likely correlate with sensory processing deficits in neurodevelopmental disorders."
  },
  {
    "objectID": "literature-review/cerebellum-development.html#cerebellar-dysfunction",
    "href": "literature-review/cerebellum-development.html#cerebellar-dysfunction",
    "title": "Cerebellum and Development",
    "section": "Cerebellar dysfunction",
    "text": "Cerebellar dysfunction\n\nEvidence from Neuroimaging\n\nstructural and functional abnormalities are commonly reported. specific regions (e.g., vermis) seem to be more prone to ASD-like structural abnormalities.\nwithin the non-motor domain, children and adults with ASD have been reported to show atypical fMRI activation of cortico-cerebellar networks during biological motion perception Jack et al. 2017 and perception fo social interaction Kana et al. 2015.\nLimperopoulos et al. (2014) have shown that perinatal cerebellar injury leads to volume reduction not only in cerebellar grey matter but also in cerebellar white matter and remote neocortical regions. These results suggest that changes in early cerebellar activity affect both cerebellar development and activity of neocortex.\nIt’s also possible that coordinated deficits in the cerebellum and cortex could arise due to a common molecular and/or environmental insult rather than co-dependence between structures.\nthe cerebellum is also implicated in downs syndrome - which is the most prevelent developmental disability with a known genetic origin. People with DS have smaller total cerebellar volumes, smaller frontal and temporal lobes and smaller hippocampal volumes. Similar to ASD, white matter structural changes are also observed in the adult DS brain.\n\nEvidence from Behavior\n\nin people with obvious ‘non-motor’ behavioral abnormalities, do ‘pure’ motor cerebellar abnormalities exist? For example, Tran et al. 2017 tested delayed eyeblink conditioning, a task which is depenedent on the cerebellum, on a group of very preterm children and adults. They found that in this group, there were significant deficits in the acquisition of conditioned responses, therefore suggesting that ‘motor’ cerebellar behavioral abnormalities coexist with non-motor abnormalities.\nchildren with ASD also display abnormal conditioned responses in the eyeblink conditioning paradigm\nit has been suggested that the language and social deficits observed in children with complex disorders are a consequence of deficits in multi-sensory integration.\none particular process that could be implicated in multisensory integration in children with ASD is timing. For example, this process may be impacted by a deficit in perceiving the temporal relationship between distinct sensory components of complex audio-visual stimuli such as language, and this deficit could also compound in social cognitive processes like theory of mind Stevenensen et al. 2014\n\nInter-regional morphogenesis\n\ninterestingly, the cerebellum and the thalamus initiate neuronal differentiation at about the same time - E10.5 Wong et al. 2018\ngiven their common neurogenic timetables, one could speculate that extensive connectivity and matching of developmental trajectories could indicate that early defects in the cerebellum might lead to structural and wiring alterations in the thalamus.\nit has been suggested that the cerebellum could interact its cortical targets using developmental cues that ‘match up’ regions of connectivity: with the goal of establishing a precise topography between subregions of the cerebellar nuclei and subnuclei of the thalamus."
  },
  {
    "objectID": "literature-review/cerebellum-development.html#methods",
    "href": "literature-review/cerebellum-development.html#methods",
    "title": "Cerebellum and Development",
    "section": "Methods",
    "text": "Methods\n\nGAMLSS modeling as used in brain charting paper\nLDA (topic moddelling) as used in endophenotyping of adhd paper\nBrain age prediction as used in brain age paper - gradient tree boosting\n\n\nQuestions:\nTo what extent are disorders characterized by Healthy Brains accompanied by RDoC-like constructs and domains? How is cognitive function measured? [behavioral tasks or questionnaires]. * Do cerebellar anatomical differences reflect a generic developmental vulnerability or disorder-specific characteristics? * Are different cerebellar regions affected in neurodevelopmental disorders? And do these regions align with functional networks that are consistent with the characteristic symptoms of each disorder. * Are there differences in brain age across regions (functional, anatomical, network) of the cerebellum, and how does this differ across disorders? * The brain age paper provided some key insights across whole-brain regions but treated subcortical-cerebellum as one region, therefore, obscuring any within-cerebellum heterogeneity"
  },
  {
    "objectID": "ethics/AI-hype.html",
    "href": "ethics/AI-hype.html",
    "title": "The Hype of AI in Medicine",
    "section": "",
    "text": "AI Hype"
  },
  {
    "objectID": "ethics/pHealth-ethics.html",
    "href": "ethics/pHealth-ethics.html",
    "title": "Ethical Considerations for pHealth",
    "section": "",
    "text": "Much of the points below came from a review paper by MacEachern and Forkert (2020)\n\n\nML approaches require large amounts of data, therefore data will be collected from many locations and transferred to a central location for storage and processing. essential that the datasets do not contain patient-identifying information. in the future, this could be overcome using distributed machine learning approaches (e.g., travelling ML model) - trains locally on the available data, before moving to the next center with available data Tuladhar et al. 2020\nML models as “black boxes”, especially with increased complexity of the input data. this raises legal and ethical questions as clinicians and other researchers may not fully understand how an ML model came to a particular conclusion about a patient’s health.\nAs physicians can be held legally responsible for their decisions, error in ML models is of course a concern. Who is responsible for an error induced in an ML model? These tools (for the time being) will support and assist physicians in making decisions about patient care, they are not yet designed to operate autonomously.\nThere are technical limitations to ML models, which is that these models are only as good as the data on which they were trained. However, these training datasets are often inherently noisy and biased. What this means is that models are being created that cannot generalize to more diverse test sets (other regions, diseases, demographics). The easiest way to avoid this problem is to increase the training set and include a diversity of samples, however, this often has logistical (e.g., privacy) challenges.\nFinancial cost is another major concern with pHealth, which will lead to disparities in access to care based on SES. Also, in-depth workups can lead to unintended consequences such as incidental findings that may lead to further testing, which may be invasive and unnecessary, inducing patient stress in the face of diagnostic uncertainty.\nCommunicating uncertainty. there is rarely a clear-cut answer in science, our interpretations operate on probability and likelihood. communicating uncertainty to scientists and non-scientists alike is challenging, especially when decisions are being made that will influence a person’s healthcare outcomes. Therefore, it is important that future machine learning models can identify the most important clinical features for a specific clinical question so that unnecessary assessments can be avoided, maximizing benefit and minimizing harm to patients.\nBias in datasets is one of the most pressing concerns for pHealth. bias can come about due to patient selection, affecting the accuracy and generalizability of the model. Additionally, the financial and practical aspects of implementing pHealth limits the models primarily to the developed world, excluding those in the developing world from the analyses, and any benefits that are offered.\nA yet unanswered question is whether discoveries made by pHealth will have individual impacts on human behavior with respect to disease prevention. For example, if a patient knows that they are at risk for heart disease based on underlying genetic or epigenetic factors, will they change their behavior? Also, it’s possible that such discoveries will create “patients-in-waiting” who are not yet sick but have been identified as high risk."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MIT Projects",
    "section": "",
    "text": "In an attempt to document my projects, from conception to publication, I’m compiling project ideas, and weekly progress in one place as a reference template for myself and for anyone interested in what I’m doing in my work as an ICoN Fellow at MIT.\nFor more information about who I am and what motivates me, navigate here\nThis website is made with quarto and inspired by https://github.com/NASA-Openscapes/2021-Cloud-Hackathon"
  },
  {
    "objectID": "mentorship/spr23_urop_onboarding.html",
    "href": "mentorship/spr23_urop_onboarding.html",
    "title": "Spring23 Onboarding",
    "section": "",
    "text": "Add your name to the team’s website through a pull request here\nRequest access to gablab slack, look for workspace Gablab, request access, once you have joined, search for channel #satralab"
  },
  {
    "objectID": "mentorship/spr23_urop_onboarding.html#doing-research",
    "href": "mentorship/spr23_urop_onboarding.html#doing-research",
    "title": "Spring23 Onboarding",
    "section": "Doing Research",
    "text": "Doing Research\n\nShell, git and other useful skills: https://missing.csail.mit.edu/\npython, stats, machine learning, deep learning, nlp: Daniel’s resources here\nFor tips on writing a good research paper (should also be helpful in reading papers too), see Mensch & Kording’s paper.\nFor guidelines on how to quickly and efficiently read a research paper\nquestions you can ask yourself as you’re reading a paper"
  },
  {
    "objectID": "mentorship/spr23_urop_onboarding.html#openmind-cluster-where-we-store-data-and-run-scripts",
    "href": "mentorship/spr23_urop_onboarding.html#openmind-cluster-where-we-store-data-and-run-scripts",
    "title": "Spring23 Onboarding",
    "section": "OpenMind: cluster where we store data and run scripts",
    "text": "OpenMind: cluster where we store data and run scripts\n\nRequest openmind account + do course to get access and post certificate on OpenMind github\n\nAccount Request Example: Attn @s-b,@djarecka: “maedbh maedbh@mit.edu” PI: Satrajit Ghosh\nVerify which groups you’re part of on openmind by typing groups: you should see om_sig and gablab. om_sig is Satra Ghosh’s group and gablab is John Gabrieli’s group.\n\nFollow instructions on openmind setup for getting starting on openmind (bash scripts etc.)\n\nopenmind website: this provides generic pointers to various elements of openmind, the link to FAQs is particularly useful."
  },
  {
    "objectID": "mentorship/spr23_urop_onboarding.html#projects",
    "href": "mentorship/spr23_urop_onboarding.html#projects",
    "title": "Spring23 Onboarding",
    "section": "Projects:",
    "text": "Projects:\n\nADHD + Professions\nItem analysis of questionnaires"
  },
  {
    "objectID": "mentorship/fall22_urop_recruitment.html",
    "href": "mentorship/fall22_urop_recruitment.html",
    "title": "Fall22 Recruitment",
    "section": "",
    "text": "Apply By: 09/20/’22\nStart Date: 10/01/’22 (ends Spring 2023, extension possible thru summer 2023)\nCompensation: Course/Academic Credit\nGroup: Sensible Intelligence Group, McGovern Institute, MIT\nKey Words: Python Programming; Big Data; Literature Review; Data Science; Neuroimaging; Neurodevelopmental Disorders\nProject Title: Using big data to build predictive models of developmental disorders\n\n\n\n\nThe Senseable Intelligence Group at the McGovern Institute for Brain Research is looking for UROP candidates to work on cutting-edge and clinically relevant neuroscience research. The aim of the project is to build computational models that integrate biological and behavioral information to develop risk predictors of neurodevelopmental disorders.\n\n\n\n\n\nRole (1) This role requires strong computational/programming expertise, and involves training and testing models on a multi-modal dataset that includes phenotypic assessments and brain-based markers.\nRole (2) This role requires previous experience in conducting literature reviews and writing brief reports. The research topics will range from neurodevelopmental disorders to translational neuroimaging and precision medicine. Knowledge of these topics is not required, but an interest in this research is highly encouraged.\n\n\n\n\n\nRole (1) Proficiency in Python programming, some machine learning and data science is required.\nRole (2) Basic research methods along with an ability to conduct a literature review is required. Foundational knowledge of psychology/cognition and neuroscience is highly preferred but not required.\n\n\n\n\nPlease send a statement of interest along with an updated resume to maedbh@mit.edu, using the subject title Fall 2022 UROP. As there are two openings for this project, please indicate in your application which (or both) of the two roles appeals most to you."
  },
  {
    "objectID": "mentorship/openmind.html",
    "href": "mentorship/openmind.html",
    "title": "Getting Started on Openmind",
    "section": "",
    "text": "Example repo here is healthy_brain_network but can be applied to any github repo that uses a Pipfile or Conda environment"
  },
  {
    "objectID": "mentorship/openmind.html#first-steps",
    "href": "mentorship/openmind.html#first-steps",
    "title": "Getting Started on Openmind",
    "section": "First Steps",
    "text": "First Steps\n\nssh <username>@openmind.mit.edu ## to log in to OpenMind\n\nssh <username>@openmind-dtn.mit.edu ## to access data transfer node\nfyi: use rsync if you need to transfer data from your local network to openmind (and vice versa)\n\ncode for healthy_brain_network is stored at /om2/user/maedbh/healthy_brain_network but you should clone the github repo in your own path\n\n    cd om2/user/\"username\"\n    git clone git@github.com:maedbhk/healthy_brain_network.git\n\nFollow instructions set out on this webpage to set up SSH for github repo\nphenotypic data for healthy_brain_network is stored at /om2/user/maedbh/hbn_data/\n\nfyi: I/O operations to om and om2 are fast, which is why I store code here. om4 and nese are slower but have large storage space, which is why raw data are stored on nese."
  },
  {
    "objectID": "mentorship/openmind.html#installing-and-activating-virtual-environments",
    "href": "mentorship/openmind.html#installing-and-activating-virtual-environments",
    "title": "Getting Started on Openmind",
    "section": "Installing and activating virtual environments",
    "text": "Installing and activating virtual environments\n\nTo install the virtual environment, you need to make sure the Python module is loaded (OpenMind uses anaconda for running Python)\n\n    module load openmind/anaconda/3-2022.05`\n\nYou can use either pipenv or conda to activate the virtual environment for the project\n\n\nIf you want to use pipenv\n\n    # navigate to top-level directory of project\n    cd om2/user/\"username\"/healthy_brain_network\n\n    # make sure **pipenv** library is installed\n    pip install pipenv\n\n    # install virtual environment\n    pipenv install ## if you're getting an error, it's probably because you have not set PATH to be **/home/\"username\"/.local/bin** in your **.bash_profile**. See **Setting Paths** below for more details)\n\n    # activate the virtual environment\n    pipenv shell\n\nIf you want to use conda\n\n    # navigate to top-level directory of project\n    cd om2/user/\"username\"/healthy_brain_network\n\n    # load your own version of miniconda\n    # see section below: `Download miniconda on OpenMind`\n\n    # in this repo, install a conda environment from environment.yml\n    conda env create -f environment.yml\n\n    # activate the conda virtual environment\n    conda activate healthy-brain-network"
  },
  {
    "objectID": "mentorship/openmind.html#download-miniconda-on-openmind-and-add-to-path",
    "href": "mentorship/openmind.html#download-miniconda-on-openmind-and-add-to-path",
    "title": "Getting Started on Openmind",
    "section": "Download miniconda on OpenMind and add to PATH",
    "text": "Download miniconda on OpenMind and add to PATH\n    wget https://repo.anaconda.com/miniconda/Miniconda3-py310_22.11.1-1-Linux-x86_64.sh\n    bash Miniconda3-latest-Linux-x86_64.sh\n\n    # save the distrubtion (when prompted) to **/om2/user/\"username\"/miniconda**\n\n    # to permanently enable the conda command from your distribution of miniconda:\n    $ echo \". /om2/user/\"username\"/miniconda3/etc/profile.d/conda.sh\" >> ~/.bash_profile\n\n    # to put conda's bse (root) environment on PATH:\n    $ echo \"conda activate\" >> ~/.bash_profile"
  },
  {
    "objectID": "mentorship/openmind.html#setting-paths",
    "href": "mentorship/openmind.html#setting-paths",
    "title": "Getting Started on Openmind",
    "section": "Setting Paths",
    "text": "Setting Paths\n\nCreate .bash_profile in your home directory (cd /home/<username> and touch .bash_profile if file doesn’t exist)\nFor example, my .bash_profile is saved at /home/maedbh (see below)\nYou can see that I have set aliases (for easier navigation around openmind), you don’t have to do this but it can make things easier when you’re working on openmind.\nMake sure you set your PATH so that your scripts can find software saved to your .local/bin directory.\n\nTo activate source .bash_profile\n# .bash_profile\n\n# Get the aliases and functions\nif [ -f ~/.bashrc ]; then\n        . ~/.bashrc\nfi\n\n# User specific environment and startup programs\nLANG=en_US.UTF-8\nPATH=$PATH:$HOME/bin:$HOME/.local/bin:/home/\"username\"/.local/bin/\n\nalias cdcode=\"cd /om2/user/\"username\"/healthy_brain_network\"\nalias cddata=\"cd /om2/user/\"username\"/hbn_data/\"\nalias cdhome=\"cd /home/\"username\"\"\nalias cdenv=\"cd /home/\"username\"/.local/share/virtualenvs\"\nalias diskspace=\"du -hs $PWD/.[!.]* $PWD/* | sort -h\"\nalias l=\"ls -alh\"\n\nmodule load openmind/anaconda/3-2022.05\nif command -v pyenv 1>/dev/null 2>&1; then\n  eval \"$(pyenv init -)\"\nfi"
  },
  {
    "objectID": "mentorship/openmind.html#using-vs-code-on-openmind",
    "href": "mentorship/openmind.html#using-vs-code-on-openmind",
    "title": "Getting Started on Openmind",
    "section": "Using VS Code on OpenMind",
    "text": "Using VS Code on OpenMind\n\nOpen VS Code and add the extensions on the sidebar: Remote - SSH and Remote - SSH: Editing Configuration Files\nGo to View and open Command Palette\n\nClick Remote-SSH: Add New SSH Host\nYou’ll be prompted to log in to OpenMind ssh \"username\"@openmind.mit.edu\nYou’ll get a notification saying host added and an option to connect\n\nOnce you connect for the first time you’ll be able to connect easily via Remote Explorer on the sidebar. You’ll be prompted for your password every time you ssh in."
  },
  {
    "objectID": "mentorship/index.html",
    "href": "mentorship/index.html",
    "title": "Overview",
    "section": "",
    "text": "Fall22 Recruitment\nFall22 Onboarding\nSpr23 Onboarding\nOpenMind Setup"
  },
  {
    "objectID": "mentorship/weekly-notes.html",
    "href": "mentorship/weekly-notes.html",
    "title": "Weekly Notes",
    "section": "",
    "text": "Complete Onboarding Steps\nClone repo on OpenMind and set up virtual environment\n\n\n\n\n\nComplete Onboarding Steps, read introduction papers"
  },
  {
    "objectID": "mentorship/weekly-notes.html#week-2-1010-",
    "href": "mentorship/weekly-notes.html#week-2-1010-",
    "title": "Weekly Notes",
    "section": "Week 2 (10/10->)",
    "text": "Week 2 (10/10->)\n\nShreya and Opalina\n\nCheck out openmind setup for instructions on cloning repo to openmind and installing and activating a virtual environment\nCheck out the github repo for instructions on running machine learning scripts on hbn data\nAs a general practice, create your own branches for code development and then submit pull requests when you want to merge to main branch\n\n\n\nAlyson\n\nCheck out predictive modeling results to determine which questionnaires are important for classifying whether a participant has been diagnosed with a disorder or not."
  },
  {
    "objectID": "mentorship/fall22_urop_onboarding.html",
    "href": "mentorship/fall22_urop_onboarding.html",
    "title": "Fall22 Onboarding",
    "section": "",
    "text": "Add your name to the team’s website through a pull request here\nRequest access to gablab slack, look for workspace Gablab, request access, once you have joined, search for channel #satralab"
  },
  {
    "objectID": "mentorship/fall22_urop_onboarding.html#doing-research",
    "href": "mentorship/fall22_urop_onboarding.html#doing-research",
    "title": "Fall22 Onboarding",
    "section": "Doing Research",
    "text": "Doing Research\n\nShell, git and other useful skills: https://missing.csail.mit.edu/\npython, stats, machine learning, deep learning, nlp: Daniel’s resources here"
  },
  {
    "objectID": "mentorship/fall22_urop_onboarding.html#openmind-cluster-where-we-store-data-and-run-scripts",
    "href": "mentorship/fall22_urop_onboarding.html#openmind-cluster-where-we-store-data-and-run-scripts",
    "title": "Fall22 Onboarding",
    "section": "OpenMind: cluster where we store data and run scripts",
    "text": "OpenMind: cluster where we store data and run scripts\n\nRequest openmind account + do course to get access and post certificate on OpenMind github\n\nAccount Request Example: Attn @s-b,@djarecka: “maedbh maedbh@mit.edu” PI: Satrajit Ghosh\nVerify which groups you’re part of on openmind by typing groups: you should see om_sig and gablab. om_sig is Satra Ghosh’s group and gablab is John Gabrieli’s group.\n\nFollow instructions on openmind setup for getting starting on openmind (cloning repo etc.)\n\nopenmind website: this provides generic pointers to various elements of openmind, the link to FAQs is particularly useful."
  },
  {
    "objectID": "mentorship/fall22_urop_onboarding.html#github-repo",
    "href": "mentorship/fall22_urop_onboarding.html#github-repo",
    "title": "Fall22 Onboarding",
    "section": "GitHub repo",
    "text": "GitHub repo\n\nRepo for healthy_brain_network project - accept collaborator invite."
  },
  {
    "objectID": "mentorship/fall22_urop_onboarding.html#notebooks",
    "href": "mentorship/fall22_urop_onboarding.html#notebooks",
    "title": "Fall22 Onboarding",
    "section": "Notebooks",
    "text": "Notebooks\n\nCheck out current results"
  },
  {
    "objectID": "team.html",
    "href": "team.html",
    "title": "Our Team",
    "section": "",
    "text": "This effort was supported by the whole NASA Openscapes Mentors cohort, with the following main folks listed alphabetically.\n\n\n\nAffiliations: NSIDC DAAC, University of Colorado \n\n\n\n\nAffiliations: USGS, LP DAAC\n\n\n\n\nAffiliations: NSIDC\n\n\n\n\nAffiliations: Openscapes, NCEAS, UC Santa Barbara\n\n\n\n\nAffiliations: PO.DAAC\n\n\n\n\nAffiliations: PO.DAAC, NASA Jet Propulsion Laboratory/California Institute of Technology\n\n\n\n\nAffiliations: Openscapes, Metadata Game Changers, University of Colorado\n\n\n\n\nAffiliations: NSIDC DAAC, CIRES, University of Colorado\n\n\n\n\nAffiliations: Atmospheric Science Data Center (ASDC), NASA Langley Research Center (LaRC)"
  },
  {
    "objectID": "team.html#hackathon-helpers",
    "href": "team.html#hackathon-helpers",
    "title": "Our Team",
    "section": "Hackathon Helpers",
    "text": "Hackathon Helpers\n\nMike Gangl, PO.DAAC\nJinbo Wang, JPL\nCelia Ou, PO.DAAC\nEd, Armstrong, JPL"
  },
  {
    "objectID": "notebooks/Parent_Measures_ADHD.html",
    "href": "notebooks/Parent_Measures_ADHD.html",
    "title": "MIT Projects",
    "section": "",
    "text": "import os\nimport glob\nimport seaborn as sns\nimport re\nimport pandas as pd\nimport plotly.express as px\nfrom pathlib import Path\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# hbn-specific libraries - make sure you have installed (pipenv install) and activated (pipenv shell) \n# the virtual environment for this project, and make sure you have created an ipykernel for this environment (ipython kernel install --name \"hbn\" --user)\nfrom hbn.constants import Defaults\nfrom hbn.scripts import preprocess_phenotype, make_phenotype_specs\nfrom hbn.data import make_dataset\nfrom hbn.features import build_features\nfrom hbn.features.feature_selection import phenotype_features\n\n%load_ext autoreload\n%autoreload 2\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!"
  },
  {
    "objectID": "notebooks/Parent_Measures_ADHD.html#questionnaire-measures-of-family-structure-stress-and-trauma",
    "href": "notebooks/Parent_Measures_ADHD.html#questionnaire-measures-of-family-structure-stress-and-trauma",
    "title": "MIT Projects",
    "section": "Questionnaire Measures of Family structure Stress and Trauma",
    "text": "Questionnaire Measures of Family structure Stress and Trauma\n\ndf = get_data(domain='Questionnaire_Measures_of_Family_structure_Stress_and_Trauma')\n\n#for name, group in df.groupby(['Question']):\n    \n #   measure = group['measure'].unique()[0]\n    \n  #  fig = sns.barplot(data=group, x='Question', y='Scores', hue='DX_01')\n  #  plt.legend(loc='center left', bbox_to_anchor=(1, 0.5))\n   # plt.xticks([]);\n   # plt.xlabel('')\n   # plt.title(f'{measure}-{name}')\n   # plt.show()\n\nfor name, group in df.groupby(['Question']):\n    \n    measure = group['measure'].unique()[0]\n\n    tmp = group.groupby(['DX_01', 'Sex']).mean().reset_index()\n\n    fig = px.line_polar(tmp, r=\"Scores\", \n                        theta=\"DX_01\", \n                        color=\"Sex\", \n                        line_close=True, \n                        title=f'{measure}-{name}',\n                        range_r=[tmp['Scores'].min(), tmp['Scores'].max()]\n                       ) \n    fig.show()\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Parent_Measures-Questionnaire_Measures_of_Family_structure_Stress_and_Trauma-PhenX_Neighborhood_Safety-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Parent_Measures-Questionnaire_Measures_of_Family_structure_Stress_and_Trauma-Parenting_Stress_Index_Fourth_Edition-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Parent_Measures-Questionnaire_Measures_of_Family_structure_Stress_and_Trauma-Distress_Tolerance_Scale-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Parent_Measures-Questionnaire_Measures_of_Family_structure_Stress_and_Trauma-Parent-Child_Internet_Addiction_Test-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Parent_Measures-Questionnaire_Measures_of_Family_structure_Stress_and_Trauma-Alabama_Parenting_Questionnaire_–_Parent_Report-spec.json"
  },
  {
    "objectID": "notebooks/item-analysis.html",
    "href": "notebooks/item-analysis.html",
    "title": "MIT Projects",
    "section": "",
    "text": "import os\n\nimport glob\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nfrom functools import reduce\nfrom pathlib import Path\nimport dcor \n\nimport plotly.io as pio\npio.renderers.default='notebook'\n\n%load_ext autoreload\n%autoreload 2"
  },
  {
    "objectID": "notebooks/item-analysis.html#functions",
    "href": "notebooks/item-analysis.html#functions",
    "title": "MIT Projects",
    "section": "Functions",
    "text": "Functions\n\n# RUN THIS CELL\n# FUNCTIONS\nfrom hbn import io\nfrom hbn.data import make_dataset\nfrom hbn.features import feature_selection\nfrom hbn.constants import Defaults\n\ndef get_answers(feature_specs, participants=None, diagnoses=None, split='all'):\n    \"\"\"get answers from `feature_specs` returned as a list of dataframes\n    \n    Args:\n        feature_specs (list of str): fullpaths to feature specs\n        diagnoses (list of str): (optional) list of diagnoses from `model_specs`. for example `diagnoses = ['ADHD-Combined Type']`\n    Returns:\n        df_list (list of pd dataframes): list of dataframes\n    \"\"\"\n    \n    if diagnoses is None:\n        diagnoses = ['No_Diagnosis_Given']\n        \n    participants = make_dataset.get_participants(\n                                split=split, \n                                disorders=diagnoses\n                                            )\n    # loop over feature specs \n    df_list = []; same_part = []\n    for feature_spec in feature_specs:\n\n        # load feature spec\n        spec_info = io.read_json(os.path.join(Defaults.FEATURE_DIR, feature_spec))\n        spec_info['preprocessing'] = None # not doing preprocessing as defined in the feature spec file\n\n        # get data\n        df = feature_selection.phenotype_features(target_spec=None,\n                                feature_spec=spec_info,\n                                participants=participants,\n                                preprocess=True,\n                                drop_identifiers=False,\n                                oversample=False\n                                ).reset_index(drop=True)\n        df = df.drop_duplicates(subset=['Identifiers'])\n        df_list.append(df)\n        same_part.append(df['Identifiers'])\n\n    part_intersect = list(reduce(set.intersection, map(set, same_part)))\n\n    # index dataframes for `part_intersect`\n    df_out = []\n    for df in df_list:\n        df_part = df[df['Identifiers'].isin(part_intersect)]\n        df_part = df_part.drop(columns=['Identifiers'])\n        df_out.append(df_part)\n    \n    return df_out\n\ndef get_questions(feature_specs):\n    \n    # loop over features\n    df_list = []\n    for feature_spec in feature_specs:\n        spec_info = io.read_json(os.path.join(Defaults.FEATURE_DIR, feature_spec))\n        \n        # get abbreviations\n        abbrev = spec_info['datadic']\n        \n        # load in excel file of data dictionary\n        df_Q = pd.read_excel(os.path.join(Defaults.PHENO_DIR, 'Release9_DataDic',  f'{abbrev}.xlsx'), header=1)\n        df_Q.columns = [col.strip(' ') for col in df_Q]\n        df_list.append(df_Q)\n            \n    return df_list\n            \n\ndef sentence_similarity(sentences):\n    \"\"\"calculate sentence similarity across all sentence combinations\n    \n    Args:\n        sentences (list): list of sentences\n    \"\"\"\n    from sentence_transformers import SentenceTransformer, util\n    \n    # get model\n    model = SentenceTransformer('distilbert-base-nli-mean-tokens')\n\n    # calculate sentence embeddings\n    sentence_embeddings = model.encode(sentences)\n    \n    #Compute cosine-similarities for each sentence with each other sentence\n    cosine_scores = util.cos_sim(sentence_embeddings, sentence_embeddings)\n    \n    #Find the pairs with the highest cosine similarity scores\n    pairs = []\n    for i in range(len(cosine_scores)-1):\n        for j in range(i+1, len(cosine_scores)):\n            pairs.append({'index': [i, j], 'score': cosine_scores[i][j]})\n\n    #Sort scores in decreasing order\n    pairs = sorted(pairs, key=lambda x: x['score'], reverse=True)\n    \n    return cosine_scores, pairs\n\ndef answer_similarity(dataframe, pairs):\n    \"\"\"calculate correlations across answers for all `pairs` of sentences\n    \n    Args:\n        dataframe (pd dataframe):\n        pairs (list of dict): output from `sentence_similarity`\n    \"\"\"\n    \n    # calculate correlations across answers\n    df_corr = dataframe.corr()\n    \n    pairs_A = []\n    for idx in range(len(pairs)):\n        r = pairs[idx]['index'][0]\n        c = pairs[idx]['index'][1]\n        rcorr = df_corr.iloc[r,c]\n        pairs_A.append(rcorr)\n    \n    return pairs_A\n\ndef distance_correlation_permutation(x, y, n_tests=100, n_samples=1000, dim=30, significance=0.1, n_obs_list=[25, 30, 35, 50, 70, 100]):\n    import scipy\n    import dcor\n    \n    table = pd.DataFrame()\n    table[\"n_obs\"] = n_obs_list\n\n    dist_results = []\n    for n_obs in n_obs_list:\n        n_errors = 0\n        statistics = []\n        for _ in range(n_tests):\n            x = np.random.normal(0, 1, size=(n_samples, dim))\n            y = np.random.normal(0, 1, size=(n_samples, dim))\n\n            test_result = dcor.independence.distance_correlation_t_test(x, y)\n            statistics.append(test_result.statistic)\n            if test_result.pvalue < significance:\n                n_errors += 1\n\n        error_prob = n_errors / n_tests\n        dist_results.append(error_prob)\n\n    table[\"Type I error\"] = dist_results\n\n    # Plot the last distribution of the statistic\n    df = len(x) * (len(x) - 3) / 2\n\n    plt.hist(statistics, bins=12, density=True)\n\n    distribution = scipy.stats.t(df=df)\n    u = np.linspace(distribution.ppf(0.01), distribution.ppf(0.99), 100)\n    plt.plot(u, distribution.pdf(u))\n    plt.show()\n\n    table\n    \ndef distance_covariance_permutation(x,y):\n    import time\n    import dcor\n    \n    random_state = 42\n    num_resamples_list = [10, 50, 100, 200, 500]\n\n    pvalues = []\n    times = []\n\n    for num_resamples in num_resamples_list:\n\n        start_time = time.monotonic()\n        test_result = dcor.independence.distance_covariance_test(\n            x,\n            y,\n            num_resamples=num_resamples,\n            random_state=random_state,\n        )\n        end_time = time.monotonic()\n\n        pvalues.append(test_result.pvalue)\n        times.append(end_time - start_time)\n\n    fig, axes = plt.subplots(2, 1, sharex=True)\n    axes[0].plot(num_resamples_list, pvalues)\n    axes[1].plot(num_resamples_list, times, color=\"C1\")\n    axes[1].set_xticks(num_resamples_list)\n    axes[1].set_xlabel(\"number of permutations\")\n    axes[0].set_ylabel(\"p-value\")\n    axes[1].set_ylabel(\"time (in seconds)\")\n    plt.show()\n\ndef plot_heatmap(array, labels=None):\n    \"\"\"plot heatmap of array with labels (optional)\n    \n    Args:\n        array (np array):\n        labels (list of str or None): optional\n    \"\"\"\n    ax = sns.heatmap(array)\n    \n    if labels is not None:\n        ax.set_xticklabels(\n            labels,\n            rotation=45,\n            horizontalalignment='right'\n            )\n        ax.set_yticklabels(\n            labels,\n            rotation=360,\n            horizontalalignment='right'\n        )\n\n    plt.show()\n    \ndef dendrogram_plot(dataframe, method='ward', metric='euclidean', labels=None, reorder=False, orientation='top', color_leaves=True, ax=None):\n    \"\"\" Plots dendrogram plot.\n        \n        Args:\n            dataframe: dataframe is output from ana.return_grouped_data or ana.return_thresholded_data\n            method (str): 'ward' # there are other options given by linkage\n            metric (str): 'euclidean' # there are other options given by linkage\n            ax (bool): figure axes. Default is None\n            color_leaves (bool): whether or not leaf nodes should be colored\n            orientation (str): how the dendrogram should be oriented. Default is 'top'. Other options are 'right', 'left'\n            reorder (bool): reorders the expression matrix before being input to clustering algo\n    \"\"\"\n    from scipy.cluster.hierarchy import dendrogram, linkage, fcluster, set_link_color_palette\n    \n    if ax is None:\n        plt.figure(num=1, figsize=[25,8])\n\n    if reorder:\n        dataframe = _reorder_dendrogram_leaves(dataframe)\n\n    if color_leaves:\n        set_link_color_palette(['b', 'r', 'y', 'm'])\n    else:\n        set_link_color_palette(['k', 'k', 'k', 'k'])\n        \n    if labels is not None:\n        labels = dataframe.index.to_list()\n\n    R = dendrogram(\n        Z=linkage(dataframe, method, metric),\n        orientation=orientation,\n        get_leaves=True,\n        color_threshold=35.0,\n        labels=labels,\n        distance_sort='ascending',\n        above_threshold_color='black', \n        ax=ax, \n        )\n\n    # plt.title(\"Hierarchical Clustering Dendrogram\", fontsize=20)\n    plt.xlabel('')\n    plt.ylabel(f\"{metric.capitalize()} Distance\")\n\n    return R\n    \ndef plot_top_sentences(pairs, sentences, A_similarity=None, percent=10, title=None):\n    \"\"\"plot most similar sentences in a tabular format\n    \n    Args:\n        pairs (list of dict): output from `sentence similarity`\n        sentences (list of str): list of sentences\n        A_similarity (list of str or None): (optional) output from `answer_similarity`\n        percent (int): percentage of top sentences to print\n    \"\"\"\n    from tabulate import tabulate\n    \n    pairs_all = pairs\n    header = [\"Sentence 1\", \"Sentence 2\", \"Question\"]\n    \n    if A_similarity is not None:\n        # add answer similarity score to `pairs` dictionary\n        pairs_all = []\n        header = [\"Sentence 1\", \"Sentence 2\", \"Question\", \"Answer\"]\n        for r, score in zip(pairs, A_similarity):\n            r.update({'score_A': score})\n            pairs_all.append(r)\n\n    #Output the pairs with their score\n    top_sentences = []\n    num_sentences = int(len(sentences)*percent/100)\n    for pair in pairs_all[0:num_sentences]:\n        i, j = pair['index']\n        if A_similarity is not None:\n            row = [sentences[i], sentences[j], round(pair['score'].tolist(),2), round(pair['score_A'],2)]\n        else:\n            row = [sentences[i], sentences[j], round(pair['score'].tolist(),2)]\n        top_sentences.append(row)\n         \n    top_sentences.insert(0, header)\n    head='firstrow'\n    if title is not None:\n        head = [title, '','','']\n    print(tabulate(top_sentences, headers=head, tablefmt=\"grid\"))\n\n    \ndef num_resamples_from_obs(n_obs, n_obs_list):\n    return 200 + 5000 // n_obs\n\n\ndef multivariate_normal(n_obs):\n    return np.random.normal(size=(n_obs, dim),)\n\n\ndef t_dist_generator(df):\n    def t_dist(n_obs):\n        return np.random.standard_t(\n            df=df,\n            size=(n_obs, dim),\n        )\n\n    return t_dist\n\ndef monte_carlo_test(x,y, n_tests=100, dim=5, n_obs_list=[25, 30, 35, 50, 70, 100], significance=0.1):\n    import dcor\n    \n    num_resamples_list = [10, 50, 100, 200, 500]\n    \n    distributions = {\n        \"Multivariate normal\": multivariate_normal,\n        \"t(1)\": t_dist_generator(1),\n        \"t(2)\": t_dist_generator(2),\n        \"t(3)\": t_dist_generator(3),\n    }\n    table = pd.DataFrame()\n    table[\"n_obs\"] = n_obs_list\n    table[\"num_resamples\"] = num_resamples_list\n\n    for dist_name, dist in distributions.items():\n        dist_results = []\n        for n_obs, num_resamples in zip(n_obs_list, num_resamples_list):\n            n_errors = 0\n            for _ in range(n_tests):\n                x = dist(n_obs)\n                y = dist(n_obs)\n\n                test_result = dcor.independence.distance_covariance_test(\n                    x,\n                    y,\n                    num_resamples=num_resamples,\n                    random_state=42,\n                )\n\n                if test_result.pvalue < significance:\n                    n_errors += 1\n\n            error_prob = n_errors / n_tests\n            dist_results.append(error_prob)\n\n        table[dist_name] = dist_results\n\n    table\n\ndef compare_answers(domain='Language_Tasks', measure=None, diagnoses=None, split='all'):\n    import itertools\n    import dcor\n    \n    if measure is not None:\n        feature_specs = glob.glob(os.path.join(Defaults.FEATURE_DIR, f'*{measure}*'))\n    else:\n        feature_specs = glob.glob(os.path.join(Defaults.FEATURE_DIR, f'*{domain}*'))\n    \n    corr_all = []; measures_all = []\n    for combo in itertools.combinations(feature_specs, 2):\n\n        # get answers\n        df_A = get_answers(feature_specs=list(combo), diagnoses=diagnoses, split=split)\n\n        x = df_A[0]; y = df_A[1]\n\n        # get measure\n        measures = []\n        for comb in combo:\n            measure = Path(comb).stem.split(\"-\")[-2]\n            measures.append(measure)\n        measures = '/'.join(measures)\n\n        corr_A = dcor.distance_correlation(x, y)\n        corr_all.append(corr_A)\n        measures_all.append(measures)\n\n    df_corr = pd.DataFrame(corr_all, columns=['distance'])\n    df_name = pd.DataFrame(measures_all, columns=['measures'])\n    df = pd.concat([df_corr, df_name], axis=1)\n    \n    return df"
  },
  {
    "objectID": "notebooks/item-analysis.html#example---cbcl",
    "href": "notebooks/item-analysis.html#example---cbcl",
    "title": "MIT Projects",
    "section": "Example - CBCL",
    "text": "Example - CBCL\n\nfeature_specs = ['features-Parent_Measures-Demographic_Questionnaire_Measures-Child_Behavior_Checklist-CBCL-spec.json']\n\n# get answers\ndf_A = get_answers(feature_specs)[0]\n\n# get questions\ndf_Q = get_questions(feature_specs)[0]\n\n# sentences\nsentences = df_Q['Question'].tolist()\n\n# calculate sentence similarity\ncosine_scores, pairs = sentence_similarity(sentences)\n\n# plot heatmap\nplot_heatmap(array=cosine_scores, labels=None)\n\n# plot dendrogram\ndendrogram_plot(dataframe=cosine_scores)\n\n# plot distribution of scores\nscores = [r['score'].tolist() for r in pairs]\nsns.histplot(scores)\nplt.show()\n\n# plot table\nplot_top_sentences(pairs, sentences, A_similarity=None, percent=10, title='CBCL')\n\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!\n\n\n\n\n\n\n\n\n+-----------------------------------+-------------------------------------+----------+\n| CBCL                              |                                     |          |\n+===================================+=====================================+==========+\n| Sentence 1                        | Sentence 2                          | Question |\n+-----------------------------------+-------------------------------------+----------+\n| 113A. Has other problem           | 113B. Has other problem             | 0.99     |\n+-----------------------------------+-------------------------------------+----------+\n| 113A. Has other problem           | 113C. Has other problem             | 0.99     |\n+-----------------------------------+-------------------------------------+----------+\n| 113B. Has other problem           | 113C. Has other problem             | 0.99     |\n+-----------------------------------+-------------------------------------+----------+\n| Internalizing T Score             | Externalizing T Score               | 0.96     |\n+-----------------------------------+-------------------------------------+----------+\n| Thought Problems T Score          | Attention Problems T Score          | 0.95     |\n+-----------------------------------+-------------------------------------+----------+\n| Thought Problems Raw Score        | Attention Problems Raw Score        | 0.94     |\n+-----------------------------------+-------------------------------------+----------+\n| Internalizing Raw Score           | Externalizing Raw Score             | 0.94     |\n+-----------------------------------+-------------------------------------+----------+\n| Withdrawn/Depressed Raw Score     | Withdrawn/Depressed T Score         | 0.93     |\n+-----------------------------------+-------------------------------------+----------+\n| Anxious/Depressed Raw Score       | Anxious/Depressed T Score           | 0.93     |\n+-----------------------------------+-------------------------------------+----------+\n| 63. Prefers being with older kids | 64. Prefers being with younger kids | 0.91     |\n+-----------------------------------+-------------------------------------+----------+\n| Anxious/Depressed T Score         | Withdrawn/Depressed T Score         | 0.9      |\n+-----------------------------------+-------------------------------------+----------+\n| 56B. Headaches                    | 56C. Nausea, feels sick             | 0.9      |\n+-----------------------------------+-------------------------------------+----------+\n| 84. Strange behavior              | 85. Strange ideas                   | 0.9      |\n+-----------------------------------+-------------------------------------+----------+\n| Anxious/Depressed Raw Score       | Withdrawn/Depressed Raw Score       | 0.89     |\n+-----------------------------------+-------------------------------------+----------+"
  },
  {
    "objectID": "notebooks/item-analysis.html#to-do-1",
    "href": "notebooks/item-analysis.html#to-do-1",
    "title": "MIT Projects",
    "section": "TO DO 1",
    "text": "TO DO 1\n\nRepronimschema for HBN (similar to ABCD), this should be a project for an RA (this will make it so much easier to do sentence transformation work)\nadd preamble for more context\ntdif similarity - check this comparison with sentenceBert (do the results always form a bellcurve?)\nwhat kinds of constructs are being evaluated?\nCompare responses across two questionnaires (get correlation distance between two matrices dcorr) - number of rows must be the same, but the number of columns can be different\nhierarchical clustering on the cosine similarity matrix (of sentences) to determine whether there are clusters that fall out (look both at sentences and responses, are these clusters in alignment?)\ncompare certain “clusters” across questionnaires - anxiety items on CBCL and GAD7 (or anxiety questionnaire). To what extent are they measuring the same construct?\ncan we get a correlation across items per participant? rather than focus on the group level zoom in on the individual\nfigure: compare parent vs. teacher vs. child predictions"
  },
  {
    "objectID": "notebooks/item-analysis.html#to-do-2",
    "href": "notebooks/item-analysis.html#to-do-2",
    "title": "MIT Projects",
    "section": "TO DO 2",
    "text": "TO DO 2\n\nindividual level: sign of response between parent + teacher - how do they differ more on subsets of item. do they map onto different clusters of ADHD. is there an item-level breakdown\npart x quesstions: reordr hte rows based on hierarchical clutering (and vice vera), value of matrix - difference between parent and teacher\ncompare clinical diagnoses across"
  },
  {
    "objectID": "notebooks/item-analysis.html#compare-answer-similarities-across-questionnaires",
    "href": "notebooks/item-analysis.html#compare-answer-similarities-across-questionnaires",
    "title": "MIT Projects",
    "section": "Compare answer similarities across questionnaires",
    "text": "Compare answer similarities across questionnaires\n\nfeature_specs = ['features-Parent_Measures-Demographic_Questionnaire_Measures-Child_Behavior_Checklist-CBCL-spec.json',\n                'features-Teacher_Measures-domains-Child_Behavior_Checklist_–_Teacher_Report_Form-TRF-spec.json']\n\n# get answers\ndf_A = get_answers(feature_specs)\n\nx = df_A[0]; y = df_A[1]"
  },
  {
    "objectID": "notebooks/item-analysis.html#calculate-distance-correlation-between-two-questionnaires-cbcl-parent-and-cbcl-teacher",
    "href": "notebooks/item-analysis.html#calculate-distance-correlation-between-two-questionnaires-cbcl-parent-and-cbcl-teacher",
    "title": "MIT Projects",
    "section": "Calculate distance correlation between two questionnaires (CBCL-Parent and CBCL-Teacher)",
    "text": "Calculate distance correlation between two questionnaires (CBCL-Parent and CBCL-Teacher)\n\ndcor.distance_correlation(x, y)\n\n0.31449558403499905"
  },
  {
    "objectID": "notebooks/item-analysis.html#the-distance-correlation-t-test-of-independence",
    "href": "notebooks/item-analysis.html#the-distance-correlation-t-test-of-independence",
    "title": "MIT Projects",
    "section": "The distance correlation t-test of independence",
    "text": "The distance correlation t-test of independence\n\n\ndcor.independence.distance_correlation_t_test(x, y)\n\nHypothesisTest(pvalue=0.0, statistic=15.804851212251073)\n\n\nAs we can observe, this test correctly rejects the null hypothesis in the second case and not in the first case.\nThe test illustrated here is an asymptotic test, that relies in the approximation of the statistic distribution to the Student’s t-distribution under the null hypothesis, when the dimension of the data goes to infinity. This test is thus faster than permutation tests, as it does not require the use of permutations of the data, and it is also deterministic for a given dataset. However, the test should be applied only for high-dimensional data, at least in theory.\nWe will now plot for the case of normal distributions the histogram of the statistic, and compute the Type I error, as seen in Székely and Rizzo1. Users are encouraged to download this example and increase that number to obtain better estimates of the Type I error. In order to replicate the original results, one should set the value of n_tests to 1000."
  },
  {
    "objectID": "notebooks/item-analysis.html#permutation-test-of-distance-correlation",
    "href": "notebooks/item-analysis.html#permutation-test-of-distance-correlation",
    "title": "MIT Projects",
    "section": "Permutation test of distance correlation",
    "text": "Permutation test of distance correlation\n\ndistance_correlation_permutation(x,y)"
  },
  {
    "objectID": "notebooks/item-analysis.html#the-distance-covariance-test-of-independence",
    "href": "notebooks/item-analysis.html#the-distance-covariance-test-of-independence",
    "title": "MIT Projects",
    "section": "The distance covariance test of independence",
    "text": "The distance covariance test of independence\n\nrandom_state = np.random.default_rng(83110)\ndcor.independence.distance_covariance_test(\n    x,\n    y,\n    num_resamples=200,\n    random_state=random_state,\n)\n\nHypothesisTest(pvalue=0.004975124378109453, statistic=213.46578868208118)\n\n\nWe can see that the p-value obtained is indeed very small, and thus we can safely reject the null hypothesis, and consider that there is indeed dependence between the random vectors.\nThe next test illustrated here is a permutation test, which compares the distance covariance of the original dataset with the one obtained after random permutations of one of the input arrays. Thus, increasing the number of permutations makes the p-value more accurate, but increases the computational cost."
  },
  {
    "objectID": "notebooks/item-analysis.html#permutation-test-of-distance-covariance",
    "href": "notebooks/item-analysis.html#permutation-test-of-distance-covariance",
    "title": "MIT Projects",
    "section": "Permutation test of distance covariance",
    "text": "Permutation test of distance covariance\n\ndistance_covariance_permutation(x,y)"
  },
  {
    "objectID": "notebooks/item-analysis.html#monte-carlo-test---get-estimates-of-type-i-error",
    "href": "notebooks/item-analysis.html#monte-carlo-test---get-estimates-of-type-i-error",
    "title": "MIT Projects",
    "section": "Monte Carlo Test - get estimates of Type I error",
    "text": "Monte Carlo Test - get estimates of Type I error\nWe generate independent data following a multivariate Gaussian distribution as well as different t(v) distributions. In all cases we consider random vectors with dimension 5. We perform the tests for different number of observations, computing the number of permutations used as [200 + 5000/n]. We fix the significance level to 0.1.\n\n# monte carlo test\n#monte_carlo_test(x,y)"
  },
  {
    "objectID": "notebooks/item-analysis.html#compare-questionnaires---answers",
    "href": "notebooks/item-analysis.html#compare-questionnaires---answers",
    "title": "MIT Projects",
    "section": "Compare Questionnaires - Answers",
    "text": "Compare Questionnaires - Answers\n\n# plot figure \n\ndomain = 'Language_Tasks'\n\ndf = compare_answers(domain)\n\nplt.figure(figsize=(20,7))\nsns.barplot(x='measures', y='distance', data=df)\nplt.xticks(rotation=45, ha='right');\nplt.tick_params(axis='both', which='major', labelsize=18);\nplt.xlabel('Measures', fontsize=25)\nplt.ylabel('Similarity', fontsize=25);\nplt.title(domain)\n\nText(0.5, 1.0, 'Language_Tasks')\n\n\n\n\n\n\n# plot figure \n\ndomain = 'Physical_Fitness'\n\ndf = compare_answers(domain)\n\nplt.figure(figsize=(20,7))\nsns.barplot(x='measures', y='distance', data=df)\nplt.xticks(rotation=45, ha='right');\nplt.tick_params(axis='both', which='major', labelsize=18);\nplt.xlabel('Measures', fontsize=25)\nplt.ylabel('Similarity', fontsize=25);\nplt.title(domain, fontsize=25)\n\nText(0.5, 1.0, 'Physical_Fitness')\n\n\n\n\n\n\n# plot figure \n\ndomain = 'Child_Behavior_Checklist'\n\ndf = compare_answers(domain)\n\nplt.figure(figsize=(20,7))\nsns.barplot(x='measures', y='distance', data=df)\nplt.xticks(rotation=45, ha='right');\nplt.tick_params(axis='both', which='major', labelsize=18);\nplt.xlabel('Measures', fontsize=25)\nplt.ylabel('Similarity', fontsize=25);\nplt.title(domain, fontsize=25)\n\nText(0.5, 1.0, 'Child_Behavior_Checklist')"
  },
  {
    "objectID": "notebooks/item-analysis.html#compare-across-age-brackets",
    "href": "notebooks/item-analysis.html#compare-across-age-brackets",
    "title": "MIT Projects",
    "section": "compare across age brackets",
    "text": "compare across age brackets\n\ndomain = None\nmeasure = 'Intake_Interview'\n\ndf = compare_answers(domain=measure, measure=measure)\n\nplt.figure(figsize=(20,7))\nsns.barplot(x='measures', y='distance', data=df)\nplt.xticks(rotation=45, ha='right');\nplt.tick_params(axis='both', which='major', labelsize=18);\nplt.xlabel('Measures', fontsize=25)\nplt.ylabel('Similarity', fontsize=25);\nplt.title(measure, fontsize=25);\n\n\n\n\n\ndomain = None\nmeasure = 'Adaptive_Cognitive_Evaluation'\n\ndf = compare_answers(domain=measure, measure=measure)\n\nplt.figure(figsize=(20,7))\nsns.barplot(x='measures', y='distance', data=df)\nplt.xticks(rotation=45, ha='right');\nplt.tick_params(axis='both', which='major', labelsize=18);\nplt.xlabel('Measures', fontsize=25)\nplt.ylabel('Similarity', fontsize=25);\nplt.title(measure, fontsize=25);"
  },
  {
    "objectID": "notebooks/item-analysis.html#compare-answers-across-diagnoses-for-cbcl-parent-teacher",
    "href": "notebooks/item-analysis.html#compare-answers-across-diagnoses-for-cbcl-parent-teacher",
    "title": "MIT Projects",
    "section": "Compare answers across diagnoses for CBCL (Parent + Teacher)",
    "text": "Compare answers across diagnoses for CBCL (Parent + Teacher)\n\n\ndiagnoses = ['ADHD', 'Anxiety_Disorders', 'Autism_Spectrum_Disorder', 'Specific_Learning_Disorder_with_Impairment_in_Reading']\n\ndf_all = pd.DataFrame()\nfor diagnosis in diagnoses:\n    for (domain, measure) in zip(['Child_Behavior_Checklist', None], [None, 'Youth_Self_Report']):\n        df = compare_answers(domain=domain, measure=measure, diagnoses=[diagnosis], split='all')\n        df['diagnosis'] = diagnosis\n        df_all = pd.concat([df_all, df])\n        print(f\"adding {diagnosis} to dataframe\")\n\nadding ADHD to dataframe\nadding ADHD to dataframe\n\n\nadding Anxiety_Disorders to dataframe\nadding Anxiety_Disorders to dataframe\n\n\nadding Autism_Spectrum_Disorder to dataframe\nadding Autism_Spectrum_Disorder to dataframe\n\n\nadding Specific_Learning_Disorder_with_Impairment_in_Reading to dataframe\nadding Specific_Learning_Disorder_with_Impairment_in_Reading to dataframe\n\n\n\nimport plotly.express as px\n\ndf = df_all[df_all['measures'].isin(['TRF/CBCL', 'TRF_Pre/CBCL_Pre'])]\ndf = df.replace({'TRF/CBCL': 'Teacher vs. Parent', 'TRF_Pre/CBCL_Pre': 'Teacher (Preschool) vs. Parent (Preschool)'})\ndf = df.replace({'Anxiety_Disorders': 'Anxiety', \n            'Autism_Spectrum_Disorder': 'ASD', \n            'Specific_Learning_Disorder_with_Impairment_in_Reading': 'Reading Impairment',\n            }\n          )\n\n\nfig = px.line_polar(df, r=\"distance\", \n                    theta=\"diagnosis\", \n                    color=\"measures\", \n                    line_close=True, \n                    range_r=[df_all['distance'].min(), df_all['distance'].max()]\n                   ) \nfig.show()"
  },
  {
    "objectID": "notebooks/item-analysis.html#compare-diagnoses-across-age-for-cbcl-parent-teacher",
    "href": "notebooks/item-analysis.html#compare-diagnoses-across-age-for-cbcl-parent-teacher",
    "title": "MIT Projects",
    "section": "Compare diagnoses across age for CBCL (Parent + Teacher)",
    "text": "Compare diagnoses across age for CBCL (Parent + Teacher)\n\nTO DO"
  },
  {
    "objectID": "notebooks/phenotype_models_compare.html",
    "href": "notebooks/phenotype_models_compare.html",
    "title": "MIT Projects",
    "section": "",
    "text": "import os\nimport pandas as pd\nimport seaborn as sns\n\nfrom hbn.constants import Defaults\nfrom hbn.visualization import visualize\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n%load_ext autoreload\n%autoreload 2\n\n%matplotlib inline\n\n#pio.renderers.default = 'iframe'\nimport plotly.io as pio\npio.renderers.default='notebook'\n\n#import ipywidgets as widgets       # interactive display\n#%config InlineBackend.figure_format = 'svg' # other available formats are: 'retina', 'png', 'jpeg', 'pdf'"
  },
  {
    "objectID": "notebooks/phenotype_models_compare.html#classifier-models-across-multiple-measures",
    "href": "notebooks/phenotype_models_compare.html#classifier-models-across-multiple-measures",
    "title": "MIT Projects",
    "section": "Classifier Models across Multiple Measures",
    "text": "Classifier Models across Multiple Measures\n\nEach figure describes a model (Decision Tree Classifier) trained on one measure (e.g., CELF) from a particular domain (e.g., Language Tasks)\nModels (x axis) show ROC AUC results for diagnoses (e.g., Anxiety, ADHD) vs. no diagnosis"
  },
  {
    "objectID": "notebooks/phenotype_models_compare.html#child-measures---language-tasks",
    "href": "notebooks/phenotype_models_compare.html#child-measures---language-tasks",
    "title": "MIT Projects",
    "section": "Child Measures - Language Tasks",
    "text": "Child Measures - Language Tasks\n\ndomain = 'Language_Tasks'\n\nabbrevs = df_all[(df_all['domains']==domain) & (df_all['assessment']=='Child Measures')]['abbrevs'].unique()\n\nfor abbrev in abbrevs:\n    \n    df1 = df_all[(df_all['target']=='DX_01_Cat_new_binarize') & \n                      (df_all['assessment']=='Child Measures') & \n                      (df_all['domains']==domain) &\n                      (df_all['abbrevs']==abbrev)]\n\n\n    visualize.predictive_modeling_group(df=df1, x='participant_group', y='roc_auc_score', title=abbrev)"
  },
  {
    "objectID": "notebooks/phenotype_models_compare.html#child-measures---cognitive-testing",
    "href": "notebooks/phenotype_models_compare.html#child-measures---cognitive-testing",
    "title": "MIT Projects",
    "section": "Child Measures - Cognitive Testing",
    "text": "Child Measures - Cognitive Testing\n\ndomain = 'Cognitive_Testing'\n\nabbrevs = df_all[df_all['domains']==domain]['abbrevs'].unique()\n\nfor abbrev in abbrevs:\n    \n    df1 = df_all[(df_all['target']=='DX_01_Cat_new_binarize') & \n                      (df_all['assessment']=='Child Measures') & \n                      (df_all['domains']==domain) &\n                      (df_all['abbrevs']==abbrev)]\n\n\n    visualize.predictive_modeling_group(df=df1, x='participant_group', y='roc_auc_score', title=abbrev)"
  },
  {
    "objectID": "notebooks/phenotype_models_compare.html#child-measures---interview_of_emotional_and_psychological_function",
    "href": "notebooks/phenotype_models_compare.html#child-measures---interview_of_emotional_and_psychological_function",
    "title": "MIT Projects",
    "section": "Child Measures - Interview_of_Emotional_and_Psychological_Function",
    "text": "Child Measures - Interview_of_Emotional_and_Psychological_Function\n\ndomain = 'Interview_of_Emotional_and_Psychological_Function'\nassessment = 'Child Measures'\n\nabbrevs = df_all[(df_all['domains']==domain) & (df_all['assessment']==assessment)]['abbrevs'].unique()\n\nfor abbrev in abbrevs:\n    \n    df1 = df_all[(df_all['target']=='DX_01_Cat_new_binarize') & \n                      (df_all['assessment']==assessment) & \n                      (df_all['domains']==domain) &\n                      (df_all['abbrevs']==abbrev)]\n\n\n    visualize.predictive_modeling_group(df=df1, x='participant_group', y='roc_auc_score', title=abbrev)"
  },
  {
    "objectID": "notebooks/phenotype_models_compare.html#child-measures---interview_of_emotional_and_psychological_function-1",
    "href": "notebooks/phenotype_models_compare.html#child-measures---interview_of_emotional_and_psychological_function-1",
    "title": "MIT Projects",
    "section": "Child Measures - Interview_of_Emotional_and_Psychological_Function",
    "text": "Child Measures - Interview_of_Emotional_and_Psychological_Function\n\ndomain = 'Interview_of_Emotional_and_Psychological_Function'\nassessment = 'Child Measures'\n\nabbrevs = df_all[(df_all['domains']==domain) & (df_all['assessment']==assessment)]['abbrevs'].unique()\n\nfor abbrev in abbrevs:\n    \n    df1 = df_all[(df_all['target']=='DX_01_Cat_new_binarize') & \n                      (df_all['assessment']==assessment) & \n                      (df_all['domains']==domain) &\n                      (df_all['abbrevs']==abbrev)]\n\n\n    visualize.predictive_modeling_group(df=df1, x='participant_group', y='roc_auc_score', title=abbrev)"
  },
  {
    "objectID": "notebooks/phenotype_models_compare.html#child-measures---medical_status_measures",
    "href": "notebooks/phenotype_models_compare.html#child-measures---medical_status_measures",
    "title": "MIT Projects",
    "section": "Child Measures - Medical_Status_Measures",
    "text": "Child Measures - Medical_Status_Measures\n\ndomain = 'Medical_Status_Measures'\nassessment = 'Child Measures'\n\nabbrevs = df_all[(df_all['domains']==domain) & (df_all['assessment']==assessment)]['abbrevs'].unique()\n\nfor abbrev in abbrevs:\n    \n    df1 = df_all[(df_all['target']=='DX_01_Cat_new_binarize') & \n                      (df_all['assessment']==assessment) & \n                      (df_all['domains']==domain) &\n                      (df_all['abbrevs']==abbrev)]\n\n\n    visualize.predictive_modeling_group(df=df1, x='participant_group', y='roc_auc_score', title=abbrev)"
  },
  {
    "objectID": "notebooks/phenotype_models_compare.html#child-measures---physical_fitness_and_status",
    "href": "notebooks/phenotype_models_compare.html#child-measures---physical_fitness_and_status",
    "title": "MIT Projects",
    "section": "Child Measures - Physical_Fitness_and_Status",
    "text": "Child Measures - Physical_Fitness_and_Status\n\ndomain = 'Physical_Fitness_and_Status'\nassessment = 'Child Measures'\n\nabbrevs = df_all[(df_all['domains']==domain) & (df_all['assessment']==assessment)]['abbrevs'].unique()\n\nfor abbrev in abbrevs:\n    \n    df1 = df_all[(df_all['target']=='DX_01_Cat_new_binarize') & \n                      (df_all['assessment']==assessment) & \n                      (df_all['domains']==domain) &\n                      (df_all['abbrevs']==abbrev)]\n\n\n    visualize.predictive_modeling_group(df=df1, x='participant_group', y='roc_auc_score', title=abbrev)"
  },
  {
    "objectID": "notebooks/phenotype_models_compare.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status",
    "href": "notebooks/phenotype_models_compare.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status",
    "title": "MIT Projects",
    "section": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status",
    "text": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status\n\ndomain = 'Questionnaire_Measures_of_Emotional_and_Cognitive_Status'\nassessment = 'Child Measures'\n\nabbrevs = df_all[(df_all['domains']==domain) & (df_all['assessment']==assessment)]['abbrevs'].unique()\n\nfor abbrev in abbrevs:\n    \n    df1 = df_all[(df_all['target']=='DX_01_Cat_new_binarize') & \n                      (df_all['assessment']==assessment) & \n                      (df_all['domains']==domain) &\n                      (df_all['abbrevs']==abbrev)]\n\n\n    visualize.predictive_modeling_group(df=df1, x='participant_group', y='roc_auc_score', title=abbrev)"
  },
  {
    "objectID": "notebooks/phenotype_models_compare.html#child-measures---questionnaire_measures_of_family_structure_stress_and_trauma",
    "href": "notebooks/phenotype_models_compare.html#child-measures---questionnaire_measures_of_family_structure_stress_and_trauma",
    "title": "MIT Projects",
    "section": "Child Measures - Questionnaire_Measures_of_Family_Structure_Stress_and_Trauma",
    "text": "Child Measures - Questionnaire_Measures_of_Family_Structure_Stress_and_Trauma\n\ndomain = 'Questionnaire_Measures_of_Family_Structure_Stress_and_Trauma'\nassessment = 'Child Measures'\n\nabbrevs = df_all[(df_all['domains']==domain) & (df_all['assessment']==assessment)]['abbrevs'].unique()\n\nfor abbrev in abbrevs:\n    \n    df1 = df_all[(df_all['target']=='DX_01_Cat_new_binarize') & \n                      (df_all['assessment']==assessment) & \n                      (df_all['domains']==domain) &\n                      (df_all['abbrevs']==abbrev)]\n\n\n    visualize.predictive_modeling_group(df=df1, x='participant_group', y='roc_auc_score', title=abbrev)"
  },
  {
    "objectID": "notebooks/phenotype_models_compare.html#child-measures---physiologymotorneurology",
    "href": "notebooks/phenotype_models_compare.html#child-measures---physiologymotorneurology",
    "title": "MIT Projects",
    "section": "Child Measures - Physiology/Motor/Neurology",
    "text": "Child Measures - Physiology/Motor/Neurology\n\nassessment = 'Child Measures'\n\ncols = ['Neurologic_Function', 'Physiologic_Function', 'Vision', 'Motor_Skills']\n\nabbrevs = df_all[(df_all['domains'].isin(cols)) & (df_all['assessment']==assessment)]['abbrevs'].unique()\n\nfor abbrev in abbrevs:\n    \n    df1 = df_all[(df_all['target']=='DX_01_Cat_new_binarize') & \n                      (df_all['assessment']==assessment) & \n                      (df_all['abbrevs']==abbrev)]\n\n\n    visualize.predictive_modeling_group(df=df1, x='participant_group', y='roc_auc_score', title=abbrev)"
  },
  {
    "objectID": "notebooks/phenotype_models_compare.html#child-measures---questionnaire_measures_of_substance_use__addiction",
    "href": "notebooks/phenotype_models_compare.html#child-measures---questionnaire_measures_of_substance_use__addiction",
    "title": "MIT Projects",
    "section": "Child Measures - Questionnaire_Measures_of_Substance_Use_&_Addiction",
    "text": "Child Measures - Questionnaire_Measures_of_Substance_Use_&_Addiction\n\ndomain = 'Questionnaire_Measures_of_Substance_Use_&_Addiction'\nassessment = 'Child Measures'\n\nabbrevs = df_all[(df_all['domains']==domain) & (df_all['assessment']==assessment)]['abbrevs'].unique()\n\nfor abbrev in abbrevs:\n    \n    df1 = df_all[(df_all['target']=='DX_01_Cat_new_binarize') & \n                      (df_all['assessment']==assessment) & \n                      (df_all['domains']==domain) &\n                      (df_all['abbrevs']==abbrev)]\n\n\n    visualize.predictive_modeling_group(df=df1, x='participant_group', y='roc_auc_score', title=abbrev)"
  },
  {
    "objectID": "notebooks/phenotype_models_compare.html#parent-measures---demographic_questionnaire_measures",
    "href": "notebooks/phenotype_models_compare.html#parent-measures---demographic_questionnaire_measures",
    "title": "MIT Projects",
    "section": "Parent Measures - Demographic_Questionnaire_Measures",
    "text": "Parent Measures - Demographic_Questionnaire_Measures\n\ndomain = 'Demographic_Questionnaire_Measures'\nassessment = 'Parent Measures'\n\nabbrevs = df_all[(df_all['domains']==domain) & (df_all['assessment']==assessment)]['abbrevs'].unique()\n\nfor abbrev in abbrevs:\n    \n    df1 = df_all[(df_all['target']=='DX_01_Cat_new_binarize') & \n                      (df_all['assessment']==assessment) & \n                      (df_all['domains']==domain) &\n                      (df_all['abbrevs']==abbrev)]\n\n\n    visualize.predictive_modeling_group(df=df1, x='participant_group', y='roc_auc_score', title=abbrev)"
  },
  {
    "objectID": "notebooks/phenotype_models_compare.html#parent-measures---interview_of_emotional_and_psychological_function",
    "href": "notebooks/phenotype_models_compare.html#parent-measures---interview_of_emotional_and_psychological_function",
    "title": "MIT Projects",
    "section": "Parent Measures - Interview_of_Emotional_and_Psychological_Function",
    "text": "Parent Measures - Interview_of_Emotional_and_Psychological_Function\n\ndomain = 'Interview_of_Emotional_and_Psychological_Function'\nassessment = 'Parent Measures'\n\nabbrevs = df_all[(df_all['domains']==domain) & (df_all['assessment']==assessment)]['abbrevs'].unique()\n\nfor abbrev in abbrevs:\n    \n    df1 = df_all[(df_all['target']=='DX_01_Cat_new_binarize') & \n                      (df_all['assessment']==assessment) & \n                      (df_all['domains']==domain) &\n                      (df_all['abbrevs']==abbrev)]\n\n\n    visualize.predictive_modeling_group(df=df1, x='participant_group', y='roc_auc_score', title=abbrev)"
  },
  {
    "objectID": "notebooks/phenotype_models_compare.html#parent-measures---questionnaire_measures_of_family_structure_stress_and_trauma",
    "href": "notebooks/phenotype_models_compare.html#parent-measures---questionnaire_measures_of_family_structure_stress_and_trauma",
    "title": "MIT Projects",
    "section": "Parent Measures - Questionnaire_Measures_of_Family_structure_Stress_and_Trauma",
    "text": "Parent Measures - Questionnaire_Measures_of_Family_structure_Stress_and_Trauma\n\ndomain = 'Questionnaire_Measures_of_Family_structure_Stress_and_Trauma'\nassessment = 'Parent Measures'\n\nabbrevs = df_all[(df_all['domains']==domain) & (df_all['assessment']==assessment)]['abbrevs'].unique()\n\nfor abbrev in abbrevs:\n    \n    df1 = df_all[(df_all['target']=='DX_01_Cat_new_binarize') & \n                      (df_all['assessment']==assessment) & \n                      (df_all['domains']==domain) &\n                      (df_all['abbrevs']==abbrev)]\n\n\n    visualize.predictive_modeling_group(df=df1, x='participant_group', y='roc_auc_score', title=abbrev)\n\n\n                                                \n\n\n\n                                                \n\n\n\n                                                \n\n\n\n                                                \n\n\n\n                                                \n\n\n\nassessment = 'Teacher Measures'\n\nabbrevs = df_all[(df_all['assessment']==assessment)]['abbrevs'].unique()\n\nfor abbrev in abbrevs:\n    \n    df1 = df_all[(df_all['target']=='DX_01_Cat_new_binarize') & \n                      (df_all['assessment']==assessment) & \n                      (df_all['abbrevs']==abbrev)]\n\n\n    visualize.predictive_modeling_group(df=df1, x='participant_group', y='roc_auc_score', title=abbrev)"
  },
  {
    "objectID": "notebooks/Untitled.html",
    "href": "notebooks/Untitled.html",
    "title": "MIT Projects",
    "section": "",
    "text": "## PREPROCESS DATA\n#from hbn.scripts import preprocess_phenotype, make_phenotype_specs\n\n## RUN THIS CELL ##\n\n# Preprocess data\n#preprocess_phenotype.run()\n\n# get specs\n#make_phenotype_specs.run()"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD.html",
    "href": "notebooks/phenotype_models_ADHD.html",
    "title": "MIT Projects",
    "section": "",
    "text": "import os\nimport pandas as pd\nimport seaborn as sns\n\nfrom hbn.constants import Defaults\nfrom hbn.visualization import visualize\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n%load_ext autoreload\n%autoreload 2\n\n%matplotlib inline\n\n# pio.renderers.default = 'iframe'\n\nimport ipywidgets as widgets       # interactive display\n%config InlineBackend.figure_format = 'svg' # other available formats are: 'retina', 'png', 'jpeg', 'pdf'"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD.html#child-measures---language-tasks",
    "href": "notebooks/phenotype_models_ADHD.html#child-measures---language-tasks",
    "title": "MIT Projects",
    "section": "Child Measures - Language Tasks",
    "text": "Child Measures - Language Tasks\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Language Tasks')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD.html#parent-measures---demographics",
    "href": "notebooks/phenotype_models_ADHD.html#parent-measures---demographics",
    "title": "MIT Projects",
    "section": "Parent Measures - Demographics",
    "text": "Parent Measures - Demographics\n\n\nmeasures = ['Affective Reactivity Index-Parent',\n       'Autism Spectrum Screening Questionnaire',\n       'Barratt Simplified Measure of Social Status',\n       'Child Behavior Checklist', 'Child Mind Institute Symptom Checker',\n       'Demographics',\n       'Extended Strengths and Weaknesses Assessment of Normal Behavior-Parent Report',\n       'Financial Support Questionnaire',\n       'Inventory of Callous-Unemotional Traits – Parent Report']\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Demographic Questionnaire Measures')]\n\ndf1 = df1[df1['measures'].isin(measures)]\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD.html#parent-measures---demographics-1",
    "href": "notebooks/phenotype_models_ADHD.html#parent-measures---demographics-1",
    "title": "MIT Projects",
    "section": "Parent Measures - Demographics",
    "text": "Parent Measures - Demographics\n\nmeasures = ['Mood and Feelings Questionnaire', 'Repetitive Behavior Scale',\n       'Screen for Child Anxiety Related Disorders - Parent report',\n       'Social Aptitudes Scale', 'Social Communication Questionnaire',\n       'Social Responsiveness Scale-2',\n       'Strengths and Difficulties Questionnaire (with impact supplement)',\n       'Strengths and Weaknesses Assessment of ADHD and Normal Behavior',\n       'The Columbia Impairment Scale-Parent Report Version',\n       'WHO Disability Assessment Schedule – Parent Report']\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Demographic Questionnaire Measures')]\n\n\ndf1 = df1[df1['measures'].isin(measures)]\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD.html#parent-measures---interview-of-emotional-and-psychological-function",
    "href": "notebooks/phenotype_models_ADHD.html#parent-measures---interview-of-emotional-and-psychological-function",
    "title": "MIT Projects",
    "section": "Parent Measures - Interview of Emotional and Psychological Function",
    "text": "Parent Measures - Interview of Emotional and Psychological Function\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Interview of Emotional and Psychological Function')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD.html#child-measures---cognitive-testing",
    "href": "notebooks/phenotype_models_ADHD.html#child-measures---cognitive-testing",
    "title": "MIT Projects",
    "section": "Child Measures - Cognitive Testing",
    "text": "Child Measures - Cognitive Testing\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Cognitive Testing')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status",
    "href": "notebooks/phenotype_models_ADHD.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status",
    "title": "MIT Projects",
    "section": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status",
    "text": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Questionnaire Measures of Emotional and Cognitive Status')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status-1",
    "href": "notebooks/phenotype_models_ADHD.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status-1",
    "title": "MIT Projects",
    "section": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status",
    "text": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Child Measures')]\n\ncols = ['Physical Fitness and Status', 'Neurologic Function', 'Physiologic Function', 'Vision', 'Motor Skills']\n\ndf1 = df1[df1['domains'].isin(cols)]\n\nvisualize.predictive_modeling(df=df1)\n\n\n                                                \n\n\n\n#import plotly.express as px\n\n# interactive visualization of features\n#@widgets.interact(\n #               feature=df_feature['features'].unique(),\n #               )\n\n#def visualize_features(feature):\n#    df = df_feature[df_feature['features']==feature]\n#    fig = px.line(df, x='feature_names_sum', y='feature_sum', markers=True, title=feature)\n#    fig.update_xaxes(showticklabels=False)\n#    fig.update_xaxes(type='category')\n    \n#    fig.show()"
  },
  {
    "objectID": "notebooks/phenotype_models_Learning_Disorder_with_Impairment_in_Reading.html",
    "href": "notebooks/phenotype_models_Learning_Disorder_with_Impairment_in_Reading.html",
    "title": "MIT Projects",
    "section": "",
    "text": "import os\nimport pandas as pd\nimport seaborn as sns\n\nfrom hbn.constants import Defaults\nfrom hbn.visualization import visualize\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n%load_ext autoreload\n%autoreload 2\n\n%matplotlib inline\n\n# pio.renderers.default = 'iframe'\n\nimport ipywidgets as widgets       # interactive display\n%config InlineBackend.figure_format = 'svg' # other available formats are: 'retina', 'png', 'jpeg', 'pdf'\n\nThe autoreload extension is already loaded. To reload it, use:\n  %reload_ext autoreload"
  },
  {
    "objectID": "notebooks/phenotype_models_Learning_Disorder_with_Impairment_in_Reading.html#child-measures---language-tasks",
    "href": "notebooks/phenotype_models_Learning_Disorder_with_Impairment_in_Reading.html#child-measures---language-tasks",
    "title": "MIT Projects",
    "section": "Child Measures - Language Tasks",
    "text": "Child Measures - Language Tasks\n\n# Child Measures - Language Tasks\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Language Tasks')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_Learning_Disorder_with_Impairment_in_Reading.html#parent-measures---demographics",
    "href": "notebooks/phenotype_models_Learning_Disorder_with_Impairment_in_Reading.html#parent-measures---demographics",
    "title": "MIT Projects",
    "section": "Parent Measures - Demographics",
    "text": "Parent Measures - Demographics\n\nmeasures = ['Affective Reactivity Index-Parent',\n       'Autism Spectrum Screening Questionnaire',\n       'Barratt Simplified Measure of Social Status',\n       'Child Behavior Checklist', 'Child Mind Institute Symptom Checker',\n       'Demographics',\n       'Extended Strengths and Weaknesses Assessment of Normal Behavior-Parent Report',\n       'Financial Support Questionnaire',\n       'Inventory of Callous-Unemotional Traits – Parent Report']\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Demographic Questionnaire Measures')]\n\ndf1 = df1[df1['measures'].isin(measures)]\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_Learning_Disorder_with_Impairment_in_Reading.html#parent-measures---demographics-1",
    "href": "notebooks/phenotype_models_Learning_Disorder_with_Impairment_in_Reading.html#parent-measures---demographics-1",
    "title": "MIT Projects",
    "section": "Parent Measures - Demographics",
    "text": "Parent Measures - Demographics\n\nmeasures = ['Mood and Feelings Questionnaire', 'Repetitive Behavior Scale',\n       'Screen for Child Anxiety Related Disorders - Parent report',\n       'Social Aptitudes Scale', 'Social Communication Questionnaire',\n       'Social Responsiveness Scale-2',\n       'Strengths and Difficulties Questionnaire (with impact supplement)',\n       'Strengths and Weaknesses Assessment of ADHD and Normal Behavior',\n       'The Columbia Impairment Scale-Parent Report Version',\n       'WHO Disability Assessment Schedule – Parent Report']\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Demographic Questionnaire Measures')]\n\n\ndf1 = df1[df1['measures'].isin(measures)]\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_Learning_Disorder_with_Impairment_in_Reading.html#parent-measures---interview-of-emotional-and-psychological-function",
    "href": "notebooks/phenotype_models_Learning_Disorder_with_Impairment_in_Reading.html#parent-measures---interview-of-emotional-and-psychological-function",
    "title": "MIT Projects",
    "section": "Parent Measures - Interview of Emotional and Psychological Function",
    "text": "Parent Measures - Interview of Emotional and Psychological Function\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Interview of Emotional and Psychological Function')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_Learning_Disorder_with_Impairment_in_Reading.html#child-measures---cognitive-testing",
    "href": "notebooks/phenotype_models_Learning_Disorder_with_Impairment_in_Reading.html#child-measures---cognitive-testing",
    "title": "MIT Projects",
    "section": "Child Measures - Cognitive Testing",
    "text": "Child Measures - Cognitive Testing\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Cognitive Testing')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_Learning_Disorder_with_Impairment_in_Reading.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status",
    "href": "notebooks/phenotype_models_Learning_Disorder_with_Impairment_in_Reading.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status",
    "title": "MIT Projects",
    "section": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status",
    "text": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Questionnaire Measures of Emotional and Cognitive Status')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_Learning_Disorder_with_Impairment_in_Reading.html#child-measures-all-other-domains",
    "href": "notebooks/phenotype_models_Learning_Disorder_with_Impairment_in_Reading.html#child-measures-all-other-domains",
    "title": "MIT Projects",
    "section": "Child Measures : all other domains",
    "text": "Child Measures : all other domains\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Child Measures')]\n\ncols = ['Physical Fitness and Status', 'Neurologic Function', 'Physiologic Function', 'Vision', 'Motor Skills']\n\ndf1 = df1[df1['domains'].isin(cols)]\n\nvisualize.predictive_modeling(df=df1)\n\n\n                                                \n\n\n\n#import plotly.express as px\n\n# interactive visualization of features\n#@widgets.interact(\n#                feature=df_feature['features'].unique(),\n#                )\n\n#def visualize_features(feature):\n#    df = df_feature[df_feature['features']==feature]\n#    fig = px.line(df, x='feature_names_sum', y='feature_sum', markers=True, title=feature)\n#    fig.update_xaxes(showticklabels=False)\n#    fig.update_xaxes(type='category')\n    \n #   fig.show()"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD-subtypes.html",
    "href": "notebooks/phenotype_models_ADHD-subtypes.html",
    "title": "MIT Projects",
    "section": "",
    "text": "import os\nimport pandas as pd\nimport seaborn as sns\n\nfrom hbn.constants import Defaults\nfrom hbn.visualization import visualize\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n%load_ext autoreload\n%autoreload 2\n\n%matplotlib inline\n\n# pio.renderers.default = 'iframe'\n\nimport ipywidgets as widgets       # interactive display\n%config InlineBackend.figure_format = 'svg' # other available formats are: 'retina', 'png', 'jpeg', 'pdf'"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD-subtypes.html#child-measures---language-tasks",
    "href": "notebooks/phenotype_models_ADHD-subtypes.html#child-measures---language-tasks",
    "title": "MIT Projects",
    "section": "Child Measures - Language Tasks",
    "text": "Child Measures - Language Tasks\n\ndf1 = df_classify[(df_classify['target']==target) & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Language Tasks')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD-subtypes.html#parent-measures---demographics",
    "href": "notebooks/phenotype_models_ADHD-subtypes.html#parent-measures---demographics",
    "title": "MIT Projects",
    "section": "Parent Measures - Demographics",
    "text": "Parent Measures - Demographics\n\n\nmeasures = ['Affective Reactivity Index-Parent',\n       'Autism Spectrum Screening Questionnaire',\n       'Barratt Simplified Measure of Social Status',\n       'Child Behavior Checklist', 'Child Mind Institute Symptom Checker',\n       'Demographics',\n       'Extended Strengths and Weaknesses Assessment of Normal Behavior-Parent Report',\n       'Financial Support Questionnaire',\n       'Inventory of Callous-Unemotional Traits – Parent Report']\n\n\ndf1 = df_classify[(df_classify['target']==target) & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Demographic Questionnaire Measures')]\n\ndf1 = df1[df1['measures'].isin(measures)]\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD-subtypes.html#parent-measures---demographics-1",
    "href": "notebooks/phenotype_models_ADHD-subtypes.html#parent-measures---demographics-1",
    "title": "MIT Projects",
    "section": "Parent Measures - Demographics",
    "text": "Parent Measures - Demographics\n\nmeasures = ['Mood and Feelings Questionnaire', 'Repetitive Behavior Scale',\n       'Screen for Child Anxiety Related Disorders - Parent report',\n       'Social Aptitudes Scale', 'Social Communication Questionnaire',\n       'Social Responsiveness Scale-2',\n       'Strengths and Difficulties Questionnaire (with impact supplement)',\n       'Strengths and Weaknesses Assessment of ADHD and Normal Behavior',\n       'The Columbia Impairment Scale-Parent Report Version',\n       'WHO Disability Assessment Schedule – Parent Report']\n\ndf1 = df_classify[(df_classify['target']==target) & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Demographic Questionnaire Measures')]\n\n\ndf1 = df1[df1['measures'].isin(measures)]\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD-subtypes.html#parent-measures---interview-of-emotional-and-psychological-function",
    "href": "notebooks/phenotype_models_ADHD-subtypes.html#parent-measures---interview-of-emotional-and-psychological-function",
    "title": "MIT Projects",
    "section": "Parent Measures - Interview of Emotional and Psychological Function",
    "text": "Parent Measures - Interview of Emotional and Psychological Function\n\n\ndf1 = df_classify[(df_classify['target']==target) & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Interview of Emotional and Psychological Function')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD-subtypes.html#child-measures---cognitive-testing",
    "href": "notebooks/phenotype_models_ADHD-subtypes.html#child-measures---cognitive-testing",
    "title": "MIT Projects",
    "section": "Child Measures - Cognitive Testing",
    "text": "Child Measures - Cognitive Testing\n\n\ndf1 = df_classify[(df_classify['target']==target) & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Cognitive Testing')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD-subtypes.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status",
    "href": "notebooks/phenotype_models_ADHD-subtypes.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status",
    "title": "MIT Projects",
    "section": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status",
    "text": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status\n\n\ndf1 = df_classify[(df_classify['target']==target) & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Questionnaire Measures of Emotional and Cognitive Status')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD-subtypes.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status-1",
    "href": "notebooks/phenotype_models_ADHD-subtypes.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status-1",
    "title": "MIT Projects",
    "section": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status",
    "text": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status\n\n\ndf1 = df_classify[(df_classify['target']==target) & \n                  (df_classify['assessment']=='Child Measures')]\n\ncols = ['Physical Fitness and Status', 'Neurologic Function', 'Physiologic Function', 'Vision', 'Motor Skills']\n\ndf1 = df1[df1['domains'].isin(cols)]\n\nvisualize.predictive_modeling(df=df1)\n\n\n                                                \n\n\n\n#import plotly.express as px\n\n# interactive visualization of features\n#@widgets.interact(\n #               feature=df_feature['features'].unique(),\n #               )\n\n#def visualize_features(feature):\n#    df = df_feature[df_feature['features']==feature]\n#    fig = px.line(df, x='feature_names_sum', y='feature_sum', markers=True, title=feature)\n#    fig.update_xaxes(showticklabels=False)\n#    fig.update_xaxes(type='category')\n    \n#    fig.show()\n\n\ndf_classify['measures'].unique()\n\narray(['Affective Reactivity Index-Parent',\n       'Affective Reactivity Index – Self Report',\n       'Autism Spectrum Screening Questionnaire',\n       'Barratt Simplified Measure of Social Status',\n       'Child Behavior Checklist', 'Child Mind Institute Symptom Checker',\n       'Clinical Evaluation of Language Fundamentals  Screening Test',\n       'Conners ADHD Rating Scales - Self Report  Short Form',\n       'Demographics', 'Edinburgh Handedness', 'Electro-encephalography',\n       'Extended Strengths and Weaknesses Assessment of Normal Behavior-Parent Report',\n       'Family History- Research Diagnostic Criteria',\n       'Financial Support Questionnaire', 'FitnessGram',\n       'Goldman-Fristoe Test of Articulation - III', 'Grooved Pegboard',\n       'Intake Interview', 'Intake Interview PreInt Demos Fam',\n       'Intake Interview PreInt DevHx', 'Intake Interview PreInt EduHx',\n       'Intake Interview PreInt Lang', 'Intake Interview PreInt TxHx',\n       'Inventory of Callous-Unemotional Traits – Parent Report',\n       'Ishihara Color Vision Test', 'Mood and Feelings Questionnaire',\n       'Mood and Feelings Questionnaire – Long Version',\n       'Negative Life Events Scale – Parent Report',\n       'Physical Activity Questionnaire for Older Children ',\n       'Physical Measures', 'Pregnancy and Birth Questionnaire',\n       'Repetitive Behavior Scale',\n       'Screen for Child Anxiety Related Disorders - Parent report',\n       'Screen for Child Anxiety Related Disorders - Self-report',\n       'Social Aptitudes Scale', 'Social Communication Questionnaire',\n       'Social Responsiveness Scale-2',\n       'Strengths and Difficulties Questionnaire (with impact supplement)',\n       'Strengths and Weaknesses Assessment of ADHD and Normal Behavior',\n       'Test of Word Reading Efficiency - II',\n       'The Columbia Impairment Scale-Parent Report Version',\n       'The Columbia Impairment Scale-Self Report Version',\n       'WHO Disability Assessment Schedule – Parent Report',\n       'WHO Disability Assessment Schedule – Self Report',\n       'Wechsler Individual Achievement Test - III',\n       'Wechsler Intelligence Scale for Children - V'], dtype=object)"
  },
  {
    "objectID": "notebooks/intake-interview-adhd.html",
    "href": "notebooks/intake-interview-adhd.html",
    "title": "MIT Projects",
    "section": "",
    "text": "## RUN THIS CELL ## \nfrom hbn.constants import Defaults\nfrom hbn.scripts import preprocess_phenotype, make_phenotype_specs\nfrom hbn.data import make_dataset\nfrom hbn.features.feature_selection import phenotype_features\n\n# Preprocess data\npreprocess_phenotype.run()\n\n# get specs\nmake_phenotype_specs.run()\n\n# HARDCODE PARTICIPANTS + FEATURE_SPEC\nparticipants = make_dataset.get_participants(\n                            split='all', \n                            disorders=['ADHD-Combined Type', \n                                        'ADHD-Inattentive Type', \n                                        'ADHD-Hyperactive_Impulsive_Type', \n                                        'No_Diagnosis_Given']\n                                        )\n\nfeature_spec = 'features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Intake_Interview-spec.json'\n\n# get data\ndf = phenotype_features(\n                        target_spec=None,\n                        feature_spec=os.path.join(Defaults.FEATURE_DIR, feature_spec),\n                        participants=participants,\n                        preprocess=False,\n                        drop_identifiers=False\n                        )\n\n# get summary of clinical diagnosis + other demographics\ndx = make_dataset.make_summary(save=False)\ndx = make_dataset._add_race_ethnicity(dataframe=dx)\n\n# get data from intake interview and merge with clinical summary\ndf = df.merge(dx, on='Identifiers')\n\nphenotypic data have already been parsed...\nphenotypic data have already been parsed...\nphenotypic data have already been parsed...\nphenotypic data have already been parsed...\n\n\ncreated new clinical diagnosis file\n\n\nwriting train and test participants to file for ADHD\nwriting train and test participants to file for Anxiety_Disorders\nwriting train and test participants to file for Autism_Spectrum_Disorder\nwriting train and test participants to file for Bipolar_and_Related_Disorders\nwriting train and test participants to file for Depressive_Disorders\nwriting train and test participants to file for Disruptive__Impulse_Control_and_Conduct_Disorders\nwriting train and test participants to file for Elimination_Disorders\nwriting train and test participants to file for Feeding_and_Eating_Disorders\ncould not write out train and test participants for Gender_Dysphoria -- likely too few samples\ncould not write out train and test participants for Neurocognitive_Disorders -- likely too few samples\nwriting train and test participants to file for Neurodevelopmental_Disorders\nwriting train and test participants to file for No_Diagnosis_Given\nwriting train and test participants to file for No_Diagnosis_Given:_Incomplete_Eval\nwriting train and test participants to file for Obsessive_Compulsive_and_Related_Disorders\nwriting train and test participants to file for Other_Conditions_That_May_Be_a_Focus_of_Clinical_Attention\ncould not write out train and test participants for Schizophrenia_Spectrum_and_other_Psychotic_Disorders -- likely too few samples\nwriting train and test participants to file for Specific_Learning_Disorder_with_Impairment_in_Reading\n\n\nwriting train and test participants to file for Substance_Related_and_Addictive_Disorders\nwriting train and test participants to file for Trauma_and_Stressor_Related_Disorders\nwriting train and test participants to file for ADHD-Combined_Type\nwriting train and test participants to file for ADHD-Hyperactive_Impulsive_Type\nwriting train and test participants to file for ADHD-Inattentive_Type\nwriting train and test participants to file for Acute_Stress_Disorder\nwriting train and test participants to file for Adjustment_Disorders\nwriting train and test participants to file for Agoraphobia\ncould not write out train and test participants for Alcohol_Use_Disorder -- likely too few samples\nwriting train and test participants to file for Autism_Spectrum_Disorder\ncould not write out train and test participants for Avoidant_Restrictive_Food_Intake_Disorder -- likely too few samples\nwriting train and test participants to file for Bipolar_I_Disorder\ncould not write out train and test participants for Bipolar_II_Disorder -- likely too few samples\nwriting train and test participants to file for Borderline_Intellectual_Functioning\ncould not write out train and test participants for Bulimia_Nervosa -- likely too few samples\nwriting train and test participants to file for Cannabis_Use_Disorder\nwriting train and test participants to file for Conduct_Disorder-Childhood-onset_type\ncould not write out train and test participants for Cyclothymic_Disorder -- likely too few samples\ncould not write out train and test participants for Delirium_due_to_another_medical_condition -- likely too few samples\ncould not write out train and test participants for Delirium_due_to_multiple_etiologies -- likely too few samples\ncould not write out train and test participants for Depressive_Disorder_Due_to_Another_Medical_Condition -- likely too few samples\nwriting train and test participants to file for Disruptive_Mood_Dysregulation_Disorder\n\n\nwriting train and test participants to file for Encopresis\nwriting train and test participants to file for Enuresis\ncould not write out train and test participants for Excoriation_(Skin-Picking)_Disorder -- likely too few samples\ncould not write out train and test participants for Gender_Dysphoria_in_Adolescents_and_Adults -- likely too few samples\ncould not write out train and test participants for Gender_Dysphoria_in_Children -- likely too few samples\nwriting train and test participants to file for Generalized_Anxiety_Disorder\nwriting train and test participants to file for Intellectual_Disability-Mild\nwriting train and test participants to file for Intellectual_Disability-Moderate\ncould not write out train and test participants for Intellectual_Disability-Severe -- likely too few samples\nwriting train and test participants to file for Intermittent_Explosive_Disorder\nwriting train and test participants to file for Language_Disorder\nwriting train and test participants to file for Major_Depressive_Disorder\ncould not write out train and test participants for Major_Neurocognitive_Disorder_Due_to_Epilepsy -- likely too few samples\nwriting train and test participants to file for No_Diagnosis_Given\nwriting train and test participants to file for No_Diagnosis_Given:_Incomplete_Eval\nwriting train and test participants to file for Obsessive-Compulsive_Disorder\nwriting train and test participants to file for Oppositional_Defiant_Disorder\nwriting train and test participants to file for Other_Specified_Anxiety_Disorder\nwriting train and test participants to file for Other_Specified_Attention-Deficit_Hyperactivity_Disorder\ncould not write out train and test participants for Other_Specified_Depressive_Disorder -- likely too few samples\ncould not write out train and test participants for Other_Specified_Disruptive__Impulse-Control__and_Conduct_Disorder -- likely too few samples\ncould not write out train and test participants for Other_Specified_Feeding_or_Eating_Disorder -- likely too few samples\ncould not write out train and test participants for Other_Specified_Neurodevelopmental_Disorder -- likely too few samples\ncould not write out train and test participants for Other_Specified_Obsessive-Compulsive_and_Related_Disorder -- likely too few samples\ncould not write out train and test participants for Other_Specified_Schizophrenia_Spectrum_and_Other_Psychotic_Disorder -- likely too few samples\nwriting train and test participants to file for Other_Specified_Tic_Disorder\n\n\nwriting train and test participants to file for Other_Specified_Trauma-_and_Stressor-Related_Disorder\nwriting train and test participants to file for Panic_Disorder\ncould not write out train and test participants for Parent-Child_Relational_Problem -- likely too few samples\nwriting train and test participants to file for Persistent_(Chronic)_Motor_or_Vocal_Tic_Disorder\nwriting train and test participants to file for Persistent_Depressive_Disorder_(Dysthymia)\nwriting train and test participants to file for Posttraumatic_Stress_Disorder\nwriting train and test participants to file for Provisional_Tic_Disorder\ncould not write out train and test participants for Reactive_Attachment_Disorder -- likely too few samples\ncould not write out train and test participants for Schizophrenia -- likely too few samples\ncould not write out train and test participants for Selective_Mutism -- likely too few samples\nwriting train and test participants to file for Separation_Anxiety\nwriting train and test participants to file for Social_(Pragmatic)_Communication_Disorder\nwriting train and test participants to file for Social_Anxiety_(Social_Phobia)\nwriting train and test participants to file for Specific_Learning_Disorder_with_Impairment_in_Mathematics\nwriting train and test participants to file for Specific_Learning_Disorder_with_Impairment_in_Reading\ncould not write out train and test participants for Specific_Learning_Disorder_with_Impairment_in_Reading_ -- likely too few samples\nwriting train and test participants to file for Specific_Learning_Disorder_with_Impairment_in_Written_Expression\nwriting train and test participants to file for Specific_Phobia\nwriting train and test participants to file for Speech_Sound_Disorder\ncould not write out train and test participants for Substance_Medication-Induced_Bipolar_and_Related_Disorder -- likely too few samples\ncould not write out train and test participants for Tourettes_Disorder -- likely too few samples\ncould not write out train and test participants for Unspecified_Anxiety_Disorder -- likely too few samples\ncould not write out train and test participants for Unspecified_Attention-Deficit_Hyperactivity_Disorder -- likely too few samples\ncould not write out train and test participants for Unspecified_Neurodevelopmental_Disorder -- likely too few samples\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!\n\n\nspec file and features saved to disk for features-Child_Measures-Cognitive_Testing-NIH_Toolbox\nspec file and features saved to disk for features-Child_Measures-Cognitive_Testing-Adaptive_Cognitive_Evaluation\nspec file and features saved to disk for features-Child_Measures-Cognitive_Testing-Temporal_Discounting_Task\nspec file and features saved to disk for features-Child_Measures-Cognitive_Testing-Wechsler_Intelligence_Scale_for_Children_-_V\nspec file and features saved to disk for features-Child_Measures-Cognitive_Testing-Wechsler_Adult_Intelligence_Scale-IV\nspec file and features saved to disk for features-Child_Measures-Cognitive_Testing-Kaufman_Brief_Intelligence_Test-II\nspec file and features saved to disk for features-Child_Measures-Cognitive_Testing-Wechsler_Individual_Achievement_Test_-_III\nspec file and features saved to disk for features-Child_Measures-Language_Tasks-Clinical_Evaluation_of_Language_Fundamentals\nspec file and features saved to disk for features-Child_Measures-Language_Tasks-Clinical_Evaluation_of_Language_Fundamentals\nspec file and features saved to disk for features-Child_Measures-Language_Tasks-Clinical_Evaluation_of_Language_Fundamentals_-_Metalinguistics\nspec file and features saved to disk for features-Child_Measures-Language_Tasks-Expressive_Vocabulary_Test\nspec file and features saved to disk for features-Child_Measures-Language_Tasks-Peabody_Picture_Vocabulary_Test\nspec file and features saved to disk for features-Child_Measures-Language_Tasks-Goldman-Fristoe_Test_of_Articulation_-_III\nspec file and features saved to disk for features-Child_Measures-Language_Tasks-Comprehensive_Test_of_Phonological_Processing_–_II\nspec file and features saved to disk for features-Child_Measures-Language_Tasks-Test_of_Word_Reading_Efficiency_-_II\nspec file and features saved to disk for features-Child_Measures-Language_Tasks-Clinical_Evaluation_of_Language_Fundamentals__Screening_Test\nspec file and features saved to disk for features-Child_Measures-Interview_of_Emotional_and_Psychological_Function-Kiddie_Schedule_for_Affective_Disorders_and_Schizophrenia\nspec file and features saved to disk for features-Child_Measures-Interview_of_Emotional_and_Psychological_Function-Negative_Life_Events_Scale_\nspec file and features saved to disk for features-Child_Measures-Neurologic_Function-Electro-encephalography\nspec file and features saved to disk for features-Child_Measures-Physiologic_Function-Physical_Measures\nspec file and features saved to disk for features-Child_Measures-Physical_Fitness_and_Status-Treadmill_Test\nspec file and features saved to disk for features-Child_Measures-Physical_Fitness_and_Status-FitnessGram\nspec file and features saved to disk for features-Child_Measures-Physical_Fitness_and_Status-Body_Composition\nspec file and features saved to disk for features-Child_Measures-Physical_Fitness_and_Status-Physical_Activity_Questionnaire_for_Older_Children_\nspec file and features saved to disk for features-Child_Measures-Physical_Fitness_and_Status-Physical_Activity_Questionnaire_for_Adolescents_\nspec file and features saved to disk for features-Child_Measures-Physical_Fitness_and_Status-Food_Frequency_Questionnaire-Screening_Form\nspec file and features saved to disk for features-Child_Measures-Physical_Fitness_and_Status-Edinburgh_Handedness\nspec file and features saved to disk for features-Child_Measures-Motor_Skills-Grooved_Pegboard\nspec file and features saved to disk for features-Child_Measures-Vision-Ishihara_Color_Vision_Test\nspec file and features saved to disk for features-Child_Measures-Medical_Status__Measures-Peterson_Puberty_Scale\nspec file and features saved to disk for features-Child_Measures-Medical_Status__Measures-Drug_Screen\nspec file and features saved to disk for features-Child_Measures-Medical_Status__Measures-Pregnancy_Test\nspec file and features saved to disk for features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-Adult_Self_Report_\nspec file and features saved to disk for features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-Youth_Self_Report\nspec file and features saved to disk for features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-Mood_and_Feelings_Questionnaire_–_Long_Version\nspec file and features saved to disk for features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-Screen_for_Child_Anxiety_Related_Disorders_-_Self-report\nspec file and features saved to disk for features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-Conners_ADHD_Rating_Scales_-_Self_Report__Short_Form\nspec file and features saved to disk for features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-Affective_Reactivity_Index_–_Self_Report\nspec file and features saved to disk for features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-Columbia_Suicide_Severity_Rating_Scale\nspec file and features saved to disk for features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-The_Columbia_Impairment_Scale-Self_Report_Version\nspec file and features saved to disk for features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-WHO_Disability_Assessment_Schedule_–_Self_Report\nspec file and features saved to disk for features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-Inventory_of_Callous-Unemotional_Traits\nspec file and features saved to disk for features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-Positive_and_Negative_Affect_Schedule\nspec file and features saved to disk for features-Child_Measures-Questionnaire_Measures_of_Substance_Use__&_Addiction_-Fagerstrom_Test_for_Nicotine_Dependence\nspec file and features saved to disk for features-Child_Measures-Questionnaire_Measures_of_Substance_Use__&_Addiction_-Alcohol_Use_Disorders_Identification_Test_\nspec file and features saved to disk for features-Child_Measures-Questionnaire_Measures_of_Substance_Use__&_Addiction_-Modified_Fagerstrom_Tolerance_Questionnaire-Adolescents\nspec file and features saved to disk for features-Child_Measures-Questionnaire_Measures_of_Substance_Use__&_Addiction_-European_School_Survey_Project_on_Alcohol_and_Other_Drugs_\nspec file and features saved to disk for features-Child_Measures-Questionnaire_Measures_of_Substance_Use__&_Addiction_-Internet_Addiction_Test\nspec file and features saved to disk for features-Child_Measures-Questionnaire_Measures_of_Substance_Use__&_Addiction_-Yale_Food_Addiction_Scale\nspec file and features saved to disk for features-Child_Measures-Questionnaire_Measures_of_Family_Structure__Stress__and_Trauma-Children’s_Perception_of_Interparental_Conflict\nspec file and features saved to disk for features-Child_Measures-Questionnaire_Measures_of_Family_Structure__Stress__and_Trauma-Alabama_Parenting_Questionnaire_\nspec file and features saved to disk for features-Child_Measures-Questionnaire_Measures_of_Family_Structure__Stress__and_Trauma-Children’s_Coping_Strategies_Checklist-Revised_\nspec file and features saved to disk for features-Child_Measures-Questionnaire_Measures_of_Family_Structure__Stress__and_Trauma-PhenX_School_Risk\nspec file and features saved to disk for features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Kiddie_Schedule_for_Affective_Disorders_and_Schizophrenia\nspec file and features saved to disk for features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Vineland_Adaptive_Behavior_Scale_–_Parent__Caregiver_Rating_Form\nspec file and features saved to disk for features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Intake_Interview\nspec file and features saved to disk for features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Negative_Life_Events_Scale_–_Parent_Report\nspec file and features saved to disk for features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Family_History-_Research_Diagnostic_Criteria\nspec file and features saved to disk for features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Pregnancy_and_Birth_Questionnaire\nspec file and features saved to disk for features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Intake_Interview_PreInt_Demos_Fam\nspec file and features saved to disk for features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Intake_Interview_PreInt_DevHx\nspec file and features saved to disk for features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Intake_Interview_PreInt_EduHx\nspec file and features saved to disk for features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Intake_Interview_PreInt_FamHx\nspec file and features saved to disk for features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Intake_Interview_PreInt_FamHx_RDC\nspec file and features saved to disk for features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Intake_Interview_PreInt_Lang\nspec file and features saved to disk for features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Intake_Interview_PreInt_TxHx\nspec file and features saved to disk for features-Parent_Measures-Demographic_Questionnaire_Measures-Demographics\nspec file and features saved to disk for features-Parent_Measures-Demographic_Questionnaire_Measures-Financial_Support_Questionnaire\nspec file and features saved to disk for features-Parent_Measures-Demographic_Questionnaire_Measures-Barratt_Simplified_Measure_of_Social_Status\nspec file and features saved to disk for features-Parent_Measures-Demographic_Questionnaire_Measures-Daily_Medications\nspec file and features saved to disk for features-Parent_Measures-Demographic_Questionnaire_Measures-Child_Behavior_Checklist\nspec file and features saved to disk for features-Parent_Measures-Demographic_Questionnaire_Measures-Mood_and_Feelings_Questionnaire\nspec file and features saved to disk for features-Parent_Measures-Demographic_Questionnaire_Measures-Screen_for_Child_Anxiety_Related_Disorders_-_Parent_report\nspec file and features saved to disk for features-Parent_Measures-Demographic_Questionnaire_Measures-Extended_Strengths_and_Weaknesses_Assessment_of_Normal_Behavior-Parent_Report\nspec file and features saved to disk for features-Parent_Measures-Demographic_Questionnaire_Measures-Strengths_and_Weaknesses_Assessment_of_ADHD_and_Normal_Behavior\nspec file and features saved to disk for features-Parent_Measures-Demographic_Questionnaire_Measures-Autism_Spectrum_Screening_Questionnaire\nspec file and features saved to disk for features-Parent_Measures-Demographic_Questionnaire_Measures-Social_Communication_Questionnaire\nspec file and features saved to disk for features-Parent_Measures-Demographic_Questionnaire_Measures-The_Columbia_Impairment_Scale-Parent_Report_Version\nspec file and features saved to disk for features-Parent_Measures-Demographic_Questionnaire_Measures-Social_Aptitudes_Scale\nspec file and features saved to disk for features-Parent_Measures-Demographic_Questionnaire_Measures-WHO_Disability_Assessment_Schedule_–_Parent_Report\nspec file and features saved to disk for features-Parent_Measures-Demographic_Questionnaire_Measures-Strengths_and_Difficulties_Questionnaire_(with_impact_supplement)\nspec file and features saved to disk for features-Parent_Measures-Demographic_Questionnaire_Measures-Repetitive_Behavior_Scale\nspec file and features saved to disk for features-Parent_Measures-Demographic_Questionnaire_Measures-Social_Responsiveness_Scale-2\nspec file and features saved to disk for features-Parent_Measures-Demographic_Questionnaire_Measures-Affective_Reactivity_Index-Parent\nspec file and features saved to disk for features-Parent_Measures-Demographic_Questionnaire_Measures-Inventory_of_Callous-Unemotional_Traits_–_Parent_Report\nspec file and features saved to disk for features-Parent_Measures-Demographic_Questionnaire_Measures-Child_Mind_Institute_Symptom_Checker\nspec file and features saved to disk for features-Parent_Measures-Questionnaire_Measures_of_Family_structure__Stress__and_Trauma-Parent-Child_Internet_Addiction_Test\nspec file and features saved to disk for features-Parent_Measures-Questionnaire_Measures_of_Family_structure__Stress__and_Trauma-Alabama_Parenting_Questionnaire_–_Parent_Report\nspec file and features saved to disk for features-Parent_Measures-Questionnaire_Measures_of_Family_structure__Stress__and_Trauma-PhenX_Neighborhood_Safety\nspec file and features saved to disk for features-Parent_Measures-Questionnaire_Measures_of_Family_structure__Stress__and_Trauma-Distress_Tolerance_Scale\nspec file and features saved to disk for features-Parent_Measures-Questionnaire_Measures_of_Family_structure__Stress__and_Trauma-Parenting_Stress_Index_Fourth_Edition\nspec file and features saved to disk for features-Teacher_Measures-Questionnaire_Measures_of_Family_structure__Stress__and_Trauma-Questionnaire_Measures_of_Family_structure__Stress__and_Trauma\nspec file and features saved to disk for target_DX_01_Cat_binarize\nspec file and features saved to disk for target_DX_01_Cat_factorize\nspec file and features saved to disk for target_DX_01_binarize\nspec file and features saved to disk for target_DX_01_factorize\nspec file and features saved to disk for target_Sex_binarize\n\n\n\nBasic Demographics\n\n\nWhat is the race breakdown of children with adhd?\n\ndemographics = df.groupby(['DX_01', 'PreInt_Demos_Fam,Child_Race_cat']\n                          ).agg({'Identifiers': 'count',\n                                }).reset_index()\n\nfig = px.bar(demographics, x=\"DX_01\", y=\"Identifiers\", color=\"PreInt_Demos_Fam,Child_Race_cat\")\nfig.show()\n\n\n                                                \n\n\n\n\nWhat is the sex breakdown of children with adhd?\n\nlargest M/F ratios are combined and hyperactive, but not inattentive\n\ndemographics = df.groupby(['DX_01', 'Sex']\n                          ).agg({'Identifiers': 'count',\n                                }).reset_index()\n\nfig = px.bar(demographics, x=\"DX_01\", y=\"Identifiers\", color=\"Sex\")\nfig.show()\n\n\n                                                \n\n\n\n\n\nWhat is the age breakdown of children with adhd?\n\ndemographics = df.groupby(['DX_01', 'Age_bracket']\n                          ).agg({'Identifiers': 'count',\n                                }).reset_index()\n\nfig = px.bar(demographics, x=\"DX_01\", y=\"Identifiers\", color=\"Age_bracket\")\nfig.show()\n\n\n                                                \n\n\n\n\nHow many comorbidities do children with adhd have?\n\nGirls have more combordities on average than boys (except for impulsive type)\n\ndemographics = df.groupby(['DX_01', 'Sex']\n                          ).agg({'comorbidities': 'mean',\n                                }).reset_index()\n\nfig = px.bar(demographics, x=\"DX_01\", y=\"comorbidities\", color='Sex')\nfig.show()\n\n\n                                                \n\n\n\n\n\nHow many comorbidities do children with adhd have?\n\nChildrenn over10 have more combordities on average than children under10\n\ndemographics = df.groupby(['DX_01', 'Age_bracket']\n                          ).agg({'comorbidities': 'mean',\n                                }).reset_index()\n\nfig = px.bar(demographics, x=\"DX_01\", y=\"comorbidities\", color='Age_bracket')\nfig.show()\n\n\n                                                \n\n\n\n\n\nget data from parent intake interview\n\n\nWhat % of children with adhd have parents with adhd? Very few!\n\n\nPrevious diagnoses\n\nMany children with adhd have been previously diagnosed with a psych/learning disorder\n\ncolors = ['Sex', 'PreInt_Demos_Fam,Child_Race_cat']\n\nfor color in colors:\n    tmp = df.groupby(['DX_01', color]).agg({'PreInt_TxHx,Past_DX': 'sum',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp['PreInt_TxHx,Past_DX'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y='percent', color=color,orientation='v', barmode=\"group\")\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n\n\nabout 25% of children with adhd are currently taking psych medication\n\ncolors = ['Sex', 'PreInt_Demos_Fam,Child_Race_cat']\n\nfor color in colors:\n    tmp = df.groupby(['DX_01',color]).agg({'PreInt_TxHx,psych_meds_cur': 'sum',\n                                            'PreInt_TxHx,psych_meds_past': 'sum',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent_curr'] = tmp['PreInt_TxHx,psych_meds_cur'] / tmp['Identifiers']\n    tmp['percent_past'] = tmp['PreInt_TxHx,psych_meds_past'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y='percent_curr', color=color,orientation='v', barmode=\"group\")\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n\nfew children had immunication reactions\n\ncolors = ['Sex', 'PreInt_Demos_Fam,Child_Race_cat']\nvar = 'immunization_reaction'\n\nfor color in colors:\n    tmp = df.groupby(['DX_01',color]).agg({f'PreInt_TxHx,{var}': 'sum',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp[f'PreInt_TxHx,{var}'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y='percent', color=color,orientation='v', barmode=\"group\")\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n\n10-20% of children have had food allergies\n\ncolors = ['Sex', 'PreInt_Demos_Fam,Child_Race_cat']\nvar = 'food_allergy'\n\nfor color in colors:\n    tmp = df.groupby(['DX_01',color]).agg({f'PreInt_TxHx,{var}': 'sum',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp[f'PreInt_TxHx,{var}'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y='percent', color=color,orientation='v', barmode=\"group\")\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n\nMost children have attended an average of 2 schools\n\ncolors = ['Sex', 'Age_bracket']\nvar = 'number_schools'\n\nfor color in colors:\n    tmp = df.groupby(['DX_01',color]).agg({f'PreInt_EduHx,{var}': 'mean',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp[f'PreInt_EduHx,{var}'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y=f'PreInt_EduHx,{var}', color=color,orientation='v', barmode=\"group\")\n    fig.update_yaxes(range=[1,4])\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n\n50-60% of children have an individualized education plan\n\nmore children over10 with hyperactive/impulsive have an IEP but more children under10 with inattentive have an IEP\n\ncolors = ['Sex', 'Age_bracket']\nvar = 'IEP'\n\nfor color in colors:\n    tmp = df.groupby(['DX_01',color]).agg({f'PreInt_EduHx,{var}': 'sum',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp[f'PreInt_EduHx,{var}'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y='percent', color=color,orientation='v', barmode=\"group\")\n    fig.update_yaxes(range=[.1,.7])\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n\n\nlearning disability?\n\nfew children with adhd diagnosed with a learning disability\n\ncolors = ['Sex', 'PreInt_Demos_Fam,Child_Race_cat', 'Age_bracket']\nvar = 'learning_disability'\n\nfor color in colors:\n    tmp = df.groupby(['DX_01',color]).agg({f'PreInt_EduHx,{var}': 'sum',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp[f'PreInt_EduHx,{var}'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y='percent', color=color,orientation='v', barmode=\"group\")\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n                                                \n\n\n\n\n\nneuropsych testing? pretty low numbers …\n\ncolors = ['Sex', 'PreInt_Demos_Fam,Child_Race_cat', 'Age_bracket']\nvar = 'NeuroPsych'\n\nfor color in colors:\n    tmp = df.groupby(['DX_01',color]).agg({f'PreInt_EduHx,{var}': 'sum',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp[f'PreInt_EduHx,{var}'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y='percent', color=color,orientation='v', barmode=\"group\")\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n                                                \n\n\n\n\nRecent grades (1-excellent, 5-failing)\n\ncolors = ['Sex','Age_bracket']\nvar = 'recent_grades'\n\nfor color in colors:\n    tmp = df.groupby(['DX_01',color]).agg({f'PreInt_EduHx,{var}': 'mean',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp[f'PreInt_EduHx,{var}'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y=f'PreInt_EduHx,{var}', color=color,orientation='v', barmode=\"group\")\n    fig.update_yaxes(range=[1,3])\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n\nnumber of friends\n\ncolors = ['Sex', 'PreInt_Demos_Fam,Child_Race_cat', 'Age_bracket']\nvar = 'number_friends'\n\nfor color in colors:\n    tmp = df.groupby(['DX_01',color]).agg({f'PreInt_EduHx,{var}': 'mean',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp[f'PreInt_EduHx,{var}'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y=f'PreInt_EduHx,{var}', color=color,orientation='v', barmode=\"group\")\n    fig.update_yaxes(range=[1,4])\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n                                                \n\n\n\n\noutside school tutoring\n\n40% of children with inattentive type adhd have outside tutoring\n\ncolors = ['Sex', 'PreInt_Demos_Fam,Child_Race_cat', 'Age_bracket']\nvar = 'tutor'\n\nfor color in colors:\n    tmp = df.groupby(['DX_01',color]).agg({f'PreInt_EduHx,{var}': 'sum',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp[f'PreInt_EduHx,{var}'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y='percent', color=color,orientation='v', barmode=\"group\")\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n                                                \n\n\n\n\n\nstart of puberty\n\ngirls with adhd are starting puberty a lot earlier than boys - this tracks with children without a diagnosis. exception is boys with hyperactive adhd\n\n\ncolors = ['Sex', 'PreInt_Demos_Fam,Child_Race_cat']\nvar = 'puberty_age'\n\nfor color in colors:\n    tmp = df.groupby(['DX_01',color]).agg({f'PreInt_DevHx,{var}': 'mean',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp[f'PreInt_DevHx,{var}'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y=f'PreInt_DevHx,{var}', color=color,orientation='v', barmode=\"group\")\n    fig.update_yaxes(range=[8,12])\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n\n\ngirls with hyperactive/impulsive adhd are starting menstruation earlier than other subtypes\n\nvar = 'menstruation_age'\n\ntmp = df.groupby(['DX_01']).agg({f'PreInt_DevHx,{var}': 'mean',\n                               'Identifiers': 'count'}\n                                    ).reset_index()\n\nfig = px.bar(tmp, x=\"DX_01\", y=f'PreInt_DevHx,{var}',orientation='v', barmode=\"group\")\nfig.update_yaxes(range=[10,12])\nfig.show()"
  },
  {
    "objectID": "notebooks/phenotype_models.html",
    "href": "notebooks/phenotype_models.html",
    "title": "MIT Projects",
    "section": "",
    "text": "# load model output\n\ndf_classify = pd.read_csv(os.path.join(Defaults.MODEL_DIR, 'classifier-all-phenotypic-models-performance.csv'))\ndf_regress = pd.read_csv(os.path.join(Defaults.MODEL_DIR, 'regression-all-phenotypic-models-performance.csv'))\n\ndf_classify['data'] = df_classify['data'].map({'model-data': 'data', 'model-null': 'null'})\n\nfor idx,col in enumerate(['Assessment', 'Domain', 'Measure']):\n    df_classify[col] = df_classify['features'].str.split('-').str.get(idx)\n\n\ndf_feature = pd.read_csv(os.path.join(Defaults.MODEL_DIR, 'classifier-feature_importance.csv'))\n\ndf_feature = df_feature[df_feature['Measure']!='all']\n\n\n# set plotting style\nvisualize.plotting_style()\n\n\ndef interactive_plot(df, x='features', y='roc_auc_score'):\n    \n    fig = go.Figure()\n\n    fig.add_trace(go.Violin(x=df[x][df['data']=='data'],\n                            y=df[y][df['data']=='data'],\n                            legendgroup='Null', scalegroup='Null', name='Null',\n                            side='negative',\n                            line_color='blue')\n                 )\n    fig.add_trace(go.Violin(x=df[x][df['data']=='null'],\n                            y=df[y][df['data']=='null'],\n                            legendgroup='Data', scalegroup='Data', name='Data',\n                            side='positive',\n                            line_color='orange')\n                 )\n    fig.update_traces(meanline_visible=True, box_visible=False)\n    fig.update_layout(violingap=0, violinmode='overlay')\n    fig.update_xaxes(showticklabels=False)\n    fig.update_yaxes(title_text=y)\n    fig.show()\n    \ndef stable_plot(df, x='features', y='roc_auc_score', hue='data'):\n    ax = sns.violinplot(\n        x=x, \n        y=y, \n        hue=hue, \n        data=df, \n        split=True,  \n        scale='width',\n        inner='quartile'\n        )\n    ax.legend(loc='upper center', bbox_to_anchor=(0.5, 1.1),\n              ncol=2, fancybox=True, shadow=True)\n    plt.xticks(rotation=90)\n    plt.show()\n\n\n# Child Measures - Language Tasks\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['Assessment']=='Child_Measures') & \n                  (df_classify['Domain']=='Language_Tasks')]\n\n\ninteractive_plot(df=df1)\n\n\n                                                \n\n\n\n# Parent Measures - Demographics\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['Assessment']=='Parent_Measures') & \n                  (df_classify['Domain']=='Demographic_Questionnaire_Measures')]\n\n\ninteractive_plot(df=df1)\n\n\n                                                \n\n\n\n# Parent Measures - Interview of Emotional and Psychological Function\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['Assessment']=='Parent_Measures') & \n                  (df_classify['Domain']=='Interview_of_Emotional_and_Psychological_Function')]\n\n\ninteractive_plot(df=df1)\n\n\n                                                \n\n\n\n# Child Measures - Cognitive Testing\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['Assessment']=='Child_Measures') & \n                  (df_classify['Domain']=='Cognitive_Testing')]\n\n\ninteractive_plot(df=df1)\n\n\n                                                \n\n\n\n# Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['Assessment']=='Child_Measures') & \n                  (df_classify['Domain']=='Questionnaire_Measures_of_Emotional_and_Cognitive_Status')]\n\n\ninteractive_plot(df=df1)\n\n\n                                                \n\n\n\n# Child Measures : all other domains\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['Assessment']=='Child_Measures')]\n\ncols = ['Physical_Fitness_and_Status', 'Neurologic_Function', 'Physiologic_Function', 'Vision', 'Motor_Skills']\n\ndf1 = df1[df1['Domain'].isin(cols)]\n\ninteractive_plot(df=df1)\n\n\n                                                \n\n\n\n# interactive visualization of features\n@widgets.interact(\n                feature=df_feature['features'].unique(),\n                )\n\ndef visualize_features(feature):\n    df = df_feature[df_feature['features']==feature]\n    fig = px.line(df, x='feature_names_sum', y='feature_sum', markers=True, title=feature)\n    fig.update_xaxes(showticklabels=False)\n    fig.update_xaxes(type='category')\n    \n    fig.show()"
  },
  {
    "objectID": "notebooks/phenotype_models_Depression.html",
    "href": "notebooks/phenotype_models_Depression.html",
    "title": "MIT Projects",
    "section": "",
    "text": "import os\nimport pandas as pd\nimport seaborn as sns\n\nfrom hbn.constants import Defaults\nfrom hbn.visualization import visualize\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n%load_ext autoreload\n%autoreload 2\n\n%matplotlib inline\n\n# pio.renderers.default = 'iframe'\n\nimport ipywidgets as widgets       # interactive display\n%config InlineBackend.figure_format = 'svg' # other available formats are: 'retina', 'png', 'jpeg', 'pdf'"
  },
  {
    "objectID": "notebooks/phenotype_models_Depression.html#child-measures---language-tasks",
    "href": "notebooks/phenotype_models_Depression.html#child-measures---language-tasks",
    "title": "MIT Projects",
    "section": "Child Measures - Language Tasks",
    "text": "Child Measures - Language Tasks\n\n# Child Measures - Language Tasks\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Language Tasks')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_Depression.html#parent-measures---demographics",
    "href": "notebooks/phenotype_models_Depression.html#parent-measures---demographics",
    "title": "MIT Projects",
    "section": "Parent Measures - Demographics",
    "text": "Parent Measures - Demographics\n\nmeasures = ['Affective Reactivity Index-Parent',\n       'Autism Spectrum Screening Questionnaire',\n       'Barratt Simplified Measure of Social Status',\n       'Child Behavior Checklist', 'Child Mind Institute Symptom Checker',\n       'Demographics',\n       'Extended Strengths and Weaknesses Assessment of Normal Behavior-Parent Report',\n       'Financial Support Questionnaire',\n       'Inventory of Callous-Unemotional Traits – Parent Report']\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Demographic Questionnaire Measures')]\n\ndf1 = df1[df1['measures'].isin(measures)]\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_Depression.html#parent-measures---demographics-1",
    "href": "notebooks/phenotype_models_Depression.html#parent-measures---demographics-1",
    "title": "MIT Projects",
    "section": "Parent Measures - Demographics",
    "text": "Parent Measures - Demographics\n\nmeasures = ['Mood and Feelings Questionnaire', 'Repetitive Behavior Scale',\n       'Screen for Child Anxiety Related Disorders - Parent report',\n       'Social Aptitudes Scale', 'Social Communication Questionnaire',\n       'Social Responsiveness Scale-2',\n       'Strengths and Difficulties Questionnaire (with impact supplement)',\n       'Strengths and Weaknesses Assessment of ADHD and Normal Behavior',\n       'The Columbia Impairment Scale-Parent Report Version',\n       'WHO Disability Assessment Schedule – Parent Report']\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Demographic Questionnaire Measures')]\n\n\ndf1 = df1[df1['measures'].isin(measures)]\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_Depression.html#parent-measures---interview-of-emotional-and-psychological-function",
    "href": "notebooks/phenotype_models_Depression.html#parent-measures---interview-of-emotional-and-psychological-function",
    "title": "MIT Projects",
    "section": "Parent Measures - Interview of Emotional and Psychological Function",
    "text": "Parent Measures - Interview of Emotional and Psychological Function\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Interview of Emotional and Psychological Function')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_Depression.html#child-measures---cognitive-testing",
    "href": "notebooks/phenotype_models_Depression.html#child-measures---cognitive-testing",
    "title": "MIT Projects",
    "section": "Child Measures - Cognitive Testing",
    "text": "Child Measures - Cognitive Testing\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Cognitive Testing')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_Depression.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status",
    "href": "notebooks/phenotype_models_Depression.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status",
    "title": "MIT Projects",
    "section": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status",
    "text": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Questionnaire Measures of Emotional and Cognitive Status')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_Depression.html#child-measures-all-other-domains",
    "href": "notebooks/phenotype_models_Depression.html#child-measures-all-other-domains",
    "title": "MIT Projects",
    "section": "Child Measures : all other domains",
    "text": "Child Measures : all other domains\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Child Measures')]\n\ncols = ['Physical Fitness and Status', 'Neurologic Function', 'Physiologic Function', 'Vision', 'Motor Skills']\n\ndf1 = df1[df1['domains'].isin(cols)]\n\nvisualize.predictive_modeling(df=df1)\n\n\n                                                \n\n\n\n#import plotly.express as px\n\n# interactive visualization of features\n#@widgets.interact(\n#                feature=df_feature['features'].unique(),\n#                )\n\n#def visualize_features(feature):\n#    df = df_feature[df_feature['features']==feature]\n#    fig = px.line(df, x='feature_names_sum', y='feature_sum', markers=True, title=feature)\n#    fig.update_xaxes(showticklabels=False)\n#    fig.update_xaxes(type='category')\n    \n #   fig.show()"
  },
  {
    "objectID": "notebooks/phenotype_models_No-Diagnosis-Sex.html",
    "href": "notebooks/phenotype_models_No-Diagnosis-Sex.html",
    "title": "MIT Projects",
    "section": "",
    "text": "import os\nimport pandas as pd\nimport seaborn as sns\n\nfrom hbn.constants import Defaults\nfrom hbn.visualization import visualize\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n%load_ext autoreload\n%autoreload 2\n\n%matplotlib inline\n\n# pio.renderers.default = 'iframe'\n\nimport ipywidgets as widgets       # interactive display\n%config InlineBackend.figure_format = 'svg' # other available formats are: 'retina', 'png', 'jpeg', 'pdf'"
  },
  {
    "objectID": "notebooks/phenotype_models_No-Diagnosis-Sex.html#child-measures---language-tasks",
    "href": "notebooks/phenotype_models_No-Diagnosis-Sex.html#child-measures---language-tasks",
    "title": "MIT Projects",
    "section": "Child Measures - Language Tasks",
    "text": "Child Measures - Language Tasks\n\ndf1 = df_classify[(df_classify['target']==target) & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Language Tasks')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_No-Diagnosis-Sex.html#parent-measures---demographics",
    "href": "notebooks/phenotype_models_No-Diagnosis-Sex.html#parent-measures---demographics",
    "title": "MIT Projects",
    "section": "Parent Measures - Demographics",
    "text": "Parent Measures - Demographics\n\n\nmeasures = ['Affective Reactivity Index-Parent',\n       'Autism Spectrum Screening Questionnaire',\n       'Barratt Simplified Measure of Social Status',\n       'Child Behavior Checklist', 'Child Mind Institute Symptom Checker',\n       'Demographics',\n       'Extended Strengths and Weaknesses Assessment of Normal Behavior-Parent Report',\n       'Financial Support Questionnaire',\n       'Inventory of Callous-Unemotional Traits – Parent Report']\n\n\ndf1 = df_classify[(df_classify['target']==target) & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Demographic Questionnaire Measures')]\n\ndf1 = df1[df1['measures'].isin(measures)]\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_No-Diagnosis-Sex.html#parent-measures---demographics-1",
    "href": "notebooks/phenotype_models_No-Diagnosis-Sex.html#parent-measures---demographics-1",
    "title": "MIT Projects",
    "section": "Parent Measures - Demographics",
    "text": "Parent Measures - Demographics\n\nmeasures = ['Mood and Feelings Questionnaire', 'Repetitive Behavior Scale',\n       'Screen for Child Anxiety Related Disorders - Parent report',\n       'Social Aptitudes Scale', 'Social Communication Questionnaire',\n       'Social Responsiveness Scale-2',\n       'Strengths and Difficulties Questionnaire (with impact supplement)',\n       'Strengths and Weaknesses Assessment of ADHD and Normal Behavior',\n       'The Columbia Impairment Scale-Parent Report Version',\n       'WHO Disability Assessment Schedule – Parent Report']\n\ndf1 = df_classify[(df_classify['target']==target) & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Demographic Questionnaire Measures')]\n\n\ndf1 = df1[df1['measures'].isin(measures)]\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_No-Diagnosis-Sex.html#parent-measures---interview-of-emotional-and-psychological-function",
    "href": "notebooks/phenotype_models_No-Diagnosis-Sex.html#parent-measures---interview-of-emotional-and-psychological-function",
    "title": "MIT Projects",
    "section": "Parent Measures - Interview of Emotional and Psychological Function",
    "text": "Parent Measures - Interview of Emotional and Psychological Function\n\n\ndf1 = df_classify[(df_classify['target']==target) & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Interview of Emotional and Psychological Function')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_No-Diagnosis-Sex.html#child-measures---cognitive-testing",
    "href": "notebooks/phenotype_models_No-Diagnosis-Sex.html#child-measures---cognitive-testing",
    "title": "MIT Projects",
    "section": "Child Measures - Cognitive Testing",
    "text": "Child Measures - Cognitive Testing\n\n\ndf1 = df_classify[(df_classify['target']==target) & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Cognitive Testing')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_No-Diagnosis-Sex.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status",
    "href": "notebooks/phenotype_models_No-Diagnosis-Sex.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status",
    "title": "MIT Projects",
    "section": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status",
    "text": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status\n\n\ndf1 = df_classify[(df_classify['target']==target) & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Questionnaire Measures of Emotional and Cognitive Status')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_No-Diagnosis-Sex.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status-1",
    "href": "notebooks/phenotype_models_No-Diagnosis-Sex.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status-1",
    "title": "MIT Projects",
    "section": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status",
    "text": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status\n\n\ndf1 = df_classify[(df_classify['target']==target) & \n                  (df_classify['assessment']=='Child Measures')]\n\ncols = ['Physical Fitness and Status', 'Neurologic Function', 'Physiologic Function', 'Vision', 'Motor Skills']\n\ndf1 = df1[df1['domains'].isin(cols)]\n\nvisualize.predictive_modeling(df=df1)\n\n\n                                                \n\n\n\n#import plotly.express as px\n\n# interactive visualization of features\n#@widgets.interact(\n #               feature=df_feature['features'].unique(),\n #               )\n\n#def visualize_features(feature):\n#    df = df_feature[df_feature['features']==feature]\n#    fig = px.line(df, x='feature_names_sum', y='feature_sum', markers=True, title=feature)\n#    fig.update_xaxes(showticklabels=False)\n#    fig.update_xaxes(type='category')\n    \n#    fig.show()\n\n\ndf_classify['measures'].unique()\n\narray(['Affective Reactivity Index-Parent',\n       'Affective Reactivity Index – Self Report',\n       'Autism Spectrum Screening Questionnaire',\n       'Barratt Simplified Measure of Social Status',\n       'Child Behavior Checklist', 'Child Mind Institute Symptom Checker',\n       'Clinical Evaluation of Language Fundamentals  Screening Test',\n       'Conners ADHD Rating Scales - Self Report  Short Form',\n       'Demographics', 'Edinburgh Handedness', 'Electro-encephalography',\n       'Extended Strengths and Weaknesses Assessment of Normal Behavior-Parent Report',\n       'Family History- Research Diagnostic Criteria',\n       'Financial Support Questionnaire', 'FitnessGram',\n       'Goldman-Fristoe Test of Articulation - III', 'Grooved Pegboard',\n       'Intake Interview', 'Intake Interview PreInt Demos Fam',\n       'Intake Interview PreInt DevHx', 'Intake Interview PreInt EduHx',\n       'Intake Interview PreInt Lang', 'Intake Interview PreInt TxHx',\n       'Inventory of Callous-Unemotional Traits – Parent Report',\n       'Ishihara Color Vision Test', 'Mood and Feelings Questionnaire',\n       'Mood and Feelings Questionnaire – Long Version',\n       'Negative Life Events Scale – Parent Report',\n       'Physical Activity Questionnaire for Older Children ',\n       'Physical Measures', 'Pregnancy and Birth Questionnaire',\n       'Repetitive Behavior Scale',\n       'Screen for Child Anxiety Related Disorders - Parent report',\n       'Screen for Child Anxiety Related Disorders - Self-report',\n       'Social Aptitudes Scale', 'Social Communication Questionnaire',\n       'Social Responsiveness Scale-2',\n       'Strengths and Difficulties Questionnaire (with impact supplement)',\n       'Strengths and Weaknesses Assessment of ADHD and Normal Behavior',\n       'Test of Word Reading Efficiency - II',\n       'The Columbia Impairment Scale-Parent Report Version',\n       'The Columbia Impairment Scale-Self Report Version',\n       'WHO Disability Assessment Schedule – Parent Report',\n       'WHO Disability Assessment Schedule – Self Report',\n       'Wechsler Individual Achievement Test - III',\n       'Wechsler Intelligence Scale for Children - V'], dtype=object)"
  },
  {
    "objectID": "notebooks/Child_Measures_ADHD.html",
    "href": "notebooks/Child_Measures_ADHD.html",
    "title": "MIT Projects",
    "section": "",
    "text": "import os\nimport glob\nimport seaborn as sns\nimport re\nimport pandas as pd\nimport plotly.express as px\nfrom pathlib import Path\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# hbn-specific libraries - make sure you have installed (pipenv install) and activated (pipenv shell) \n# the virtual environment for this project, and make sure you have created an ipykernel for this environment (ipython kernel install --name \"hbn\" --user)\nfrom hbn.constants import Defaults\nfrom hbn.scripts import preprocess_phenotype, make_phenotype_specs\nfrom hbn.data import make_dataset\nfrom hbn.features import build_features\nfrom hbn.features.feature_selection import phenotype_features\n\n%load_ext autoreload\n%autoreload 2\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!"
  },
  {
    "objectID": "notebooks/Child_Measures_ADHD.html#physical-fitness-and-status",
    "href": "notebooks/Child_Measures_ADHD.html#physical-fitness-and-status",
    "title": "MIT Projects",
    "section": "Physical Fitness and Status",
    "text": "Physical Fitness and Status\n\ndf = get_data(domain='Physical_Fitness_and_Status')\n\n#for name, group in df.groupby(['Question']):\n    \n #   measure = group['measure'].unique()[0]\n    \n  #  fig = sns.barplot(data=group, x='Question', y='Scores', hue='DX_01')\n  #  plt.legend(loc='center left', bbox_to_anchor=(1, 0.5))\n   # plt.xticks([]);\n   # plt.xlabel('')\n   # plt.title(f'{measure}-{name}')\n   # plt.show()\n\nfor name, group in df.groupby(['Question']):\n    \n    measure = group['measure'].unique()[0]\n\n    tmp = group.groupby(['DX_01', 'Sex']).mean().reset_index()\n\n    fig = px.line_polar(tmp, r=\"Scores\", \n                        theta=\"DX_01\", \n                        color=\"Sex\", \n                        line_close=True, \n                        title=f'{measure}-{name}',\n                        range_r=[tmp['Scores'].min(), tmp['Scores'].max()]\n                       ) \n    fig.show()\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Physical_Fitness_and_Status-Edinburgh_Handedness-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Physical_Fitness_and_Status-Body_Composition-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Physical_Fitness_and_Status-Physical_Activity_Questionnaire_for_Adolescents_-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Physical_Fitness_and_Status-FitnessGram-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Physical_Fitness_and_Status-Food_Frequency_Questionnaire-Screening_Form-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Physical_Fitness_and_Status-Treadmill_Test-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Physical_Fitness_and_Status-Physical_Activity_Questionnaire_for_Older_Children_-spec.json"
  },
  {
    "objectID": "notebooks/Child_Measures_ADHD.html#cognitive-testing",
    "href": "notebooks/Child_Measures_ADHD.html#cognitive-testing",
    "title": "MIT Projects",
    "section": "Cognitive Testing",
    "text": "Cognitive Testing\n\ndf = get_data(domain='Cognitive_Testing')\n\n\nfor name, group in df.groupby(['Question']):\n    \n    measure = group['measure'].unique()[0]\n\n    tmp = group.groupby(['DX_01', 'Sex']).mean().reset_index()\n\n    fig = px.line_polar(tmp, r=\"Scores\", \n                        theta=\"DX_01\", \n                        color=\"Sex\", \n                        line_close=True, \n                        title=f'{measure}-{name}',\n                        range_r=[tmp['Scores'].min(), tmp['Scores'].max()]\n                       ) \n    fig.show()\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Cognitive_Testing-Kaufman_Brief_Intelligence_Test-II-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Cognitive_Testing-NIH_Toolbox-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Cognitive_Testing-Wechsler_Individual_Achievement_Test_-_III-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Cognitive_Testing-Wechsler_Intelligence_Scale_for_Children_-_V-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Cognitive_Testing-Temporal_Discounting_Task-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Cognitive_Testing-Wechsler_Adult_Intelligence_Scale-IV-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Cognitive_Testing-Adaptive_Cognitive_Evaluation-spec.json"
  },
  {
    "objectID": "notebooks/Child_Measures_ADHD.html#language-tasks",
    "href": "notebooks/Child_Measures_ADHD.html#language-tasks",
    "title": "MIT Projects",
    "section": "Language Tasks",
    "text": "Language Tasks\n\ndf = get_data(domain='Language_Tasks')\n\n#for name, group in df.groupby(['Question']):\n    \n   # measure = group['measure'].unique()[0]\n    \n   # group = group.dropna(how='any')\n    \n   # try:\n   #     group['Scores'] = group['Scores'].astype(int)\n   # except:\n   #     group['Scores'] = group['Scores'].factorize()[0] + 1\n    \n   # tmp = group.groupby(['DX_01', 'Sex']).mean().reset_index()\n    \n   # fig = sns.barplot(data=group, x='Question', y='Scores', hue='DX_01')\n   # plt.legend(loc='center left', bbox_to_anchor=(1, 0.5))\n   # plt.xticks([]);\n   # plt.xlabel('')\n   # plt.title(f'{measure}-{name}')\n   # plt.show()\n\n\nfor name, group in df.groupby(['Question']):\n    \n    measure = group['measure'].unique()[0]\n    \n    group = group.dropna(how='any')\n    \n    try:\n        group['Scores'] = group['Scores'].astype(int)\n    except:\n        group['Scores'] = group['Scores'].factorize()[0] + 1\n    \n    tmp = group.groupby(['DX_01', 'Sex']).mean().reset_index()\n\n    fig = px.line_polar(tmp, r=\"Scores\", \n                        theta=\"DX_01\", \n                        color=\"Sex\", \n                        line_close=True, \n                        title=f'{measure}-{name}',\n                        range_r=[tmp['Scores'].min(), tmp['Scores'].max()]\n                       ) \n    fig.show()\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Language_Tasks-Comprehensive_Test_of_Phonological_Processing_–_II-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Language_Tasks-Clinical_Evaluation_of_Language_Fundamentals__Screening_Test-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Language_Tasks-Expressive_Vocabulary_Test-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Language_Tasks-Peabody_Picture_Vocabulary_Test-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Language_Tasks-Clinical_Evaluation_of_Language_Fundamentals_-_Metalinguistics-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Language_Tasks-Goldman-Fristoe_Test_of_Articulation_-_III-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Language_Tasks-Clinical_Evaluation_of_Language_Fundamentals-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Language_Tasks-Test_of_Word_Reading_Efficiency_-_II-spec.json"
  },
  {
    "objectID": "notebooks/Child_Measures_ADHD.html#interview-of-emotional-and-psychological-function",
    "href": "notebooks/Child_Measures_ADHD.html#interview-of-emotional-and-psychological-function",
    "title": "MIT Projects",
    "section": "Interview of Emotional and Psychological Function",
    "text": "Interview of Emotional and Psychological Function\n\ndf = get_data(domain='Interview_of_Emotional_and_Psychological_Function')\n    \n\nfor name, group in df.groupby(['Question']):\n    \n    measure = group['measure'].unique()[0]\n    \n    group = group.dropna(how='any')\n    \n    try:\n        group['Scores'] = group['Scores'].astype(int)\n    except:\n        group['Scores'] = group['Scores'].factorize()[0] + 1\n    \n    tmp = group.groupby(['DX_01', 'Sex']).mean().reset_index()\n\n    fig = px.line_polar(tmp, r=\"Scores\", \n                        theta=\"DX_01\", \n                        color=\"Sex\", \n                        line_close=True, \n                        title=f'{measure}-{name}',\n                        range_r=[tmp['Scores'].min(), tmp['Scores'].max()]\n                       ) \n    fig.show()\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Interview_of_Emotional_and_Psychological_Function-Kiddie_Schedule_for_Affective_Disorders_and_Schizophrenia-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Pregnancy_and_Birth_Questionnaire-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Intake_Interview_PreInt_EduHx-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Intake_Interview_PreInt_FamHx-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Intake_Interview_PreInt_Lang-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Intake_Interview_PreInt_FamHx_RDC-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Intake_Interview_PreInt_TxHx-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Vineland_Adaptive_Behavior_Scale_–_Parent__Caregiver_Rating_Form-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Interview_of_Emotional_and_Psychological_Function-Negative_Life_Events_Scale_-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Kiddie_Schedule_for_Affective_Disorders_and_Schizophrenia-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Intake_Interview_PreInt_Demos_Fam-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Negative_Life_Events_Scale_–_Parent_Report-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Intake_Interview_PreInt_DevHx-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Intake_Interview-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Parent_Measures-Interview_of_Emotional_and_Psychological_Function-Family_History-_Research_Diagnostic_Criteria-spec.json"
  },
  {
    "objectID": "notebooks/Child_Measures_ADHD.html#vision",
    "href": "notebooks/Child_Measures_ADHD.html#vision",
    "title": "MIT Projects",
    "section": "Vision",
    "text": "Vision\n\n\ndf = get_data(domain='Vision')\n\nfor name, group in df.groupby(['Question']):\n    \n    measure = group['measure'].unique()[0]\n    \n    group = group.dropna(how='any')\n    \n    try:\n        group['Scores'] = group['Scores'].astype(int)\n    except:\n        group['Scores'] = group['Scores'].factorize()[0] + 1\n    \n    tmp = group.groupby(['DX_01', 'Sex']).mean().reset_index()\n\n    fig = px.line_polar(tmp, r=\"Scores\", \n                        theta=\"DX_01\", \n                        color=\"Sex\", \n                        line_close=True, \n                        title=f'{measure}-{name}',\n                        range_r=[tmp['Scores'].min(), tmp['Scores'].max()]\n                       ) \n    fig.show()\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Vision-Ishihara_Color_Vision_Test-spec.json"
  },
  {
    "objectID": "notebooks/Child_Measures_ADHD.html#questionnaire-measures-of-emotional-and-cognitive-status",
    "href": "notebooks/Child_Measures_ADHD.html#questionnaire-measures-of-emotional-and-cognitive-status",
    "title": "MIT Projects",
    "section": "Questionnaire Measures of Emotional and Cognitive Status",
    "text": "Questionnaire Measures of Emotional and Cognitive Status\n\n\ndf = get_data(domain='Questionnaire_Measures_of_Emotional_and_Cognitive_Status')\n\n\nfor name, group in df.groupby(['Question']):\n    \n    measure = group['measure'].unique()[0]\n    \n    group = group.dropna(how='any')\n    \n    try:\n        group['Scores'] = group['Scores'].astype(int)\n    except:\n        group['Scores'] = group['Scores'].factorize()[0] + 1\n    \n    tmp = group.groupby(['DX_01', 'Sex']).mean().reset_index()\n\n    fig = px.line_polar(tmp, r=\"Scores\", \n                        theta=\"DX_01\", \n                        color=\"Sex\", \n                        line_close=True, \n                        title=f'{measure}-{name}',\n                        range_r=[tmp['Scores'].min(), tmp['Scores'].max()]\n                       ) \n    fig.show()\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-WHO_Disability_Assessment_Schedule_–_Self_Report-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-Conners_ADHD_Rating_Scales_-_Self_Report__Short_Form-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-Columbia_Suicide_Severity_Rating_Scale-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-The_Columbia_Impairment_Scale-Self_Report_Version-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-Adult_Self_Report_-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-Mood_and_Feelings_Questionnaire_–_Long_Version-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-Screen_for_Child_Anxiety_Related_Disorders_-_Self-report-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-Affective_Reactivity_Index_–_Self_Report-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-Positive_and_Negative_Affect_Schedule-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-Youth_Self_Report-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Questionnaire_Measures_of_Emotional_and_Cognitive_Status-Inventory_of_Callous-Unemotional_Traits-spec.json"
  },
  {
    "objectID": "notebooks/Child_Measures_ADHD.html#questionnaire-measures-of-family-structure-stress-and-trauma",
    "href": "notebooks/Child_Measures_ADHD.html#questionnaire-measures-of-family-structure-stress-and-trauma",
    "title": "MIT Projects",
    "section": "Questionnaire Measures of Family Structure Stress and Trauma",
    "text": "Questionnaire Measures of Family Structure Stress and Trauma\n\n\ndf = get_data(domain='Questionnaire_Measures_of_Family_Structure_Stress_and_Trauma')\n\nfor name, group in df.groupby(['Question']):\n    \n    measure = group['measure'].unique()[0]\n    \n    group = group.dropna(how='any')\n    \n    try:\n        group['Scores'] = group['Scores'].astype(int)\n    except:\n        group['Scores'] = group['Scores'].factorize()[0] + 1\n    \n    tmp = group.groupby(['DX_01', 'Sex']).mean().reset_index()\n\n    fig = px.line_polar(tmp, r=\"Scores\", \n                        theta=\"DX_01\", \n                        color=\"Sex\", \n                        line_close=True, \n                        title=f'{measure}-{name}',\n                        range_r=[tmp['Scores'].min(), tmp['Scores'].max()]\n                       ) \n    fig.show()\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Questionnaire_Measures_of_Family_Structure_Stress_and_Trauma-Alabama_Parenting_Questionnaire_-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Questionnaire_Measures_of_Family_Structure_Stress_and_Trauma-Children’s_Perception_of_Interparental_Conflict-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Questionnaire_Measures_of_Family_Structure_Stress_and_Trauma-Children’s_Coping_Strategies_Checklist-Revised_-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Questionnaire_Measures_of_Family_Structure_Stress_and_Trauma-PhenX_School_Risk-spec.json"
  },
  {
    "objectID": "notebooks/Child_Measures_ADHD.html#questionnaire-measures-of-substance-use",
    "href": "notebooks/Child_Measures_ADHD.html#questionnaire-measures-of-substance-use",
    "title": "MIT Projects",
    "section": "Questionnaire Measures of Substance Use",
    "text": "Questionnaire Measures of Substance Use\n\n\ndf = get_data(domain='Questionnaire_Measures_of_Substance_Use_&_Addiction')\n\nfor name, group in df.groupby(['Question']):\n    \n    measure = group['measure'].unique()[0]\n    \n    group = group.dropna(how='any')\n    \n    try:\n        group['Scores'] = group['Scores'].astype(int)\n    except:\n        group['Scores'] = group['Scores'].factorize()[0] + 1\n    \n    tmp = group.groupby(['DX_01', 'Sex']).mean().reset_index()\n\n    fig = px.line_polar(tmp, r=\"Scores\", \n                        theta=\"DX_01\", \n                        color=\"Sex\", \n                        line_close=True, \n                        title=f'{measure}-{name}',\n                        range_r=[tmp['Scores'].min(), tmp['Scores'].max()]\n                       ) \n    fig.show()\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Questionnaire_Measures_of_Substance_Use_&_Addiction-Fagerstrom_Test_for_Nicotine_Dependence-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Questionnaire_Measures_of_Substance_Use_&_Addiction-Alcohol_Use_Disorders_Identification_Test_-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Questionnaire_Measures_of_Substance_Use_&_Addiction-Modified_Fagerstrom_Tolerance_Questionnaire-Adolescents-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Questionnaire_Measures_of_Substance_Use_&_Addiction-Internet_Addiction_Test-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Questionnaire_Measures_of_Substance_Use_&_Addiction-Yale_Food_Addiction_Scale-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Questionnaire_Measures_of_Substance_Use_&_Addiction-European_School_Survey_Project_on_Alcohol_and_Other_Drugs_-spec.json"
  },
  {
    "objectID": "notebooks/Child_Measures_ADHD.html#medical-status-measures",
    "href": "notebooks/Child_Measures_ADHD.html#medical-status-measures",
    "title": "MIT Projects",
    "section": "Medical Status Measures",
    "text": "Medical Status Measures\n\n\ndf = get_data(domain='Medical_Status_Measures')\n\nfor name, group in df.groupby(['Question']):\n    \n    measure = group['measure'].unique()[0]\n    \n    group = group.dropna(how='any')\n    \n    try:\n        group['Scores'] = group['Scores'].astype(int)\n    except:\n        group['Scores'] = group['Scores'].factorize()[0] + 1\n    \n    tmp = group.groupby(['DX_01', 'Sex']).mean().reset_index()\n\n    fig = px.line_polar(tmp, r=\"Scores\", \n                        theta=\"DX_01\", \n                        color=\"Sex\", \n                        line_close=True, \n                        title=f'{measure}-{name}',\n                        range_r=[tmp['Scores'].min(), tmp['Scores'].max()]\n                       ) \n    fig.show()\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Medical_Status_Measures-Peterson_Puberty_Scale-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Medical_Status_Measures-Pregnancy_Test-spec.json\n\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Medical_Status_Measures-Drug_Screen-spec.json"
  },
  {
    "objectID": "notebooks/phenotype_models_ASD.html",
    "href": "notebooks/phenotype_models_ASD.html",
    "title": "MIT Projects",
    "section": "",
    "text": "import os\nimport pandas as pd\nimport seaborn as sns\n\nfrom hbn.constants import Defaults\nfrom hbn.visualization import visualize\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n%load_ext autoreload\n%autoreload 2\n\n%matplotlib inline\n\n# pio.renderers.default = 'iframe'\n\nimport ipywidgets as widgets       # interactive display\n%config InlineBackend.figure_format = 'svg' # other available formats are: 'retina', 'png', 'jpeg', 'pdf'"
  },
  {
    "objectID": "notebooks/phenotype_models_ASD.html#child-measures---language-tasks",
    "href": "notebooks/phenotype_models_ASD.html#child-measures---language-tasks",
    "title": "MIT Projects",
    "section": "Child Measures - Language Tasks",
    "text": "Child Measures - Language Tasks\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Language Tasks')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ASD.html#parent-measures---demographics",
    "href": "notebooks/phenotype_models_ASD.html#parent-measures---demographics",
    "title": "MIT Projects",
    "section": "Parent Measures - Demographics",
    "text": "Parent Measures - Demographics\n\n\nmeasures = ['Affective Reactivity Index-Parent',\n       'Autism Spectrum Screening Questionnaire',\n       'Barratt Simplified Measure of Social Status',\n       'Child Behavior Checklist', 'Child Mind Institute Symptom Checker',\n       'Demographics',\n       'Extended Strengths and Weaknesses Assessment of Normal Behavior-Parent Report',\n       'Financial Support Questionnaire',\n       'Inventory of Callous-Unemotional Traits – Parent Report']\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Demographic Questionnaire Measures')]\n\ndf1 = df1[df1['measures'].isin(measures)]\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ASD.html#parent-measures---demographics-1",
    "href": "notebooks/phenotype_models_ASD.html#parent-measures---demographics-1",
    "title": "MIT Projects",
    "section": "Parent Measures - Demographics",
    "text": "Parent Measures - Demographics\n\nmeasures = ['Mood and Feelings Questionnaire', 'Repetitive Behavior Scale',\n       'Screen for Child Anxiety Related Disorders - Parent report',\n       'Social Aptitudes Scale', 'Social Communication Questionnaire',\n       'Social Responsiveness Scale-2',\n       'Strengths and Difficulties Questionnaire (with impact supplement)',\n       'Strengths and Weaknesses Assessment of ADHD and Normal Behavior',\n       'The Columbia Impairment Scale-Parent Report Version',\n       'WHO Disability Assessment Schedule – Parent Report']\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Demographic Questionnaire Measures')]\n\n\ndf1 = df1[df1['measures'].isin(measures)]\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ASD.html#parent-measures---interview-of-emotional-and-psychological-function",
    "href": "notebooks/phenotype_models_ASD.html#parent-measures---interview-of-emotional-and-psychological-function",
    "title": "MIT Projects",
    "section": "Parent Measures - Interview of Emotional and Psychological Function",
    "text": "Parent Measures - Interview of Emotional and Psychological Function\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Interview of Emotional and Psychological Function')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ASD.html#child-measures---cognitive-testing",
    "href": "notebooks/phenotype_models_ASD.html#child-measures---cognitive-testing",
    "title": "MIT Projects",
    "section": "Child Measures - Cognitive Testing",
    "text": "Child Measures - Cognitive Testing\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Cognitive Testing')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ASD.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status",
    "href": "notebooks/phenotype_models_ASD.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status",
    "title": "MIT Projects",
    "section": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status",
    "text": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Questionnaire Measures of Emotional and Cognitive Status')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ASD.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status-1",
    "href": "notebooks/phenotype_models_ASD.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status-1",
    "title": "MIT Projects",
    "section": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status",
    "text": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Child Measures')]\n\ncols = ['Physical Fitness and Status', 'Neurologic Function', 'Physiologic Function', 'Vision', 'Motor Skills']\n\ndf1 = df1[df1['domains'].isin(cols)]\n\nvisualize.predictive_modeling(df=df1)\n\n\n                                                \n\n\n\n#import plotly.express as px\n\n# interactive visualization of features\n#@widgets.interact(\n #               feature=df_feature['features'].unique(),\n #               )\n\n#def visualize_features(feature):\n#    df = df_feature[df_feature['features']==feature]\n#    fig = px.line(df, x='feature_names_sum', y='feature_sum', markers=True, title=feature)\n#    fig.update_xaxes(showticklabels=False)\n#    fig.update_xaxes(type='category')\n    \n#    fig.show()"
  },
  {
    "objectID": "notebooks/fig2-ADHD+gender.html",
    "href": "notebooks/fig2-ADHD+gender.html",
    "title": "MIT Projects",
    "section": "",
    "text": "## PREPROCESS DATA - RUN THIS CELL ##\n#from hbn.scripts import preprocess_phenotype, make_phenotype_specs\n\n# Preprocess data\n#preprocess_phenotype.run()\n\n# get specs\n#make_phenotype_specs.run()\n\n\n# RUN THIS CELL\n# FUNCTIONS\n\ndef load_data(\n    participants, \n    feature_spec, \n    cols_to_keep=['DX_01', 'DX_01_Cat', 'Age', 'Sex', 'Identifiers']\n    ):\n    # get data from `feature_spec`\n    df = phenotype_features(feature_spec=os.path.join(Defaults.FEATURE_DIR, feature_spec),\n                            participants=participants,\n                            target_spec=None,\n                            preprocess=False,\n                            drop_identifiers=False,\n                            oversample=False\n                            )\n    \n    # get summary of clinical diagnosis + other demographics\n    dx = make_dataset.make_summary(save=False)\n\n    # get data from `feature_spec` and merge with clinical summary\n    df = df.merge(dx[cols_to_keep], on='Identifiers')\n    \n    return df\n\ndef make_dataframe(\n    features,\n    filter_scores=True,\n    ):\n    \"\"\"make dataframe out of scores from features dataframe\n        features (pd dataframe): output from `load_data`\n        filter_scores (bool): default is True. filter scores to only return overall/standard/scaled scores\n    \"\"\"\n    \n    df_all = pd.DataFrame()\n    if len(features.columns) > len(list_of_cols): \n        \n        # get abbrev from dataframe based on default columns\n        dict_present = False\n        abbrev = features.filter(regex='Site|EID|START_DATE|Data_entry|Year').columns[0].split(',')[0]\n        fpath = os.path.join(Defaults.PHENO_DIR, 'Release9_DataDic', abbrev + '.xlsx')\n        if os.path.isfile(fpath):\n            dict_df = pd.read_excel(fpath, header=1)\n            dict_present = True\n        \n        # only process data that have accompanying dictionaires\n        if dict_present:\n\n            # remove prefix from variable values - always second column in data dic\n            dict_df.rename(columns={dict_df.columns[0]: \"Question\", dict_df.columns[1]: \"Variable\"}, inplace=True)\n\n            # filter dataframe on certain columns and regex patterns\n            df_filter = features.filter(regex=f'{abbrev}|{cols_to_keep}')\n\n            # loop over diagnosis groups and melt `T_scores` column into one\n            # concat each group to one dataframe\n            for name, group in df_filter.groupby('DX_01'):\n                if filter_scores:\n                    scores_to_filter = '_T|_Stnd|_Sum|_Score|_Scale|_Standard|_IN|_HY'\n                    group = group.filter(regex=f'{scores_to_filter}|{cols_to_keep}')\n                tmp = group.melt(id_vars=list(cols_to_keep.split('|'))).rename({'variable':'Name', 'value': 'Scores'}, axis=1)\n                tmp['Name'] = tmp['Name'].str.replace(f'{abbrev},','')\n                tmp = tmp.merge(dict_df[['Question', 'Variable']], left_on=['Name'], right_on=['Variable'])\n                tmp['Assessment'], tmp['domain'], tmp['measure'], tmp['abbrev'] = assessment, domain, measure, mabbrev\n                df_all = pd.concat([tmp, df_all])\n\n            # do some clean up on existing columns\n            df_all['Age_rounded'] = df_all['Age'].round()\n            df_all['Question'] = df_all['Question'].str.replace(\"T Score\", \"T-Score\")\n        \n    \n    return df_all.reset_index(drop=True)\n\n\ndef get_data(domain):\n    \"\"\"get data corresponding to `domain`\n    \n    Returns:\n        df_all (pd dataframe):\n    \"\"\"\n    from hbn import io\n    \n    participants = make_dataset.get_participants(\n                                split='all', \n                                disorders=['ADHD-Combined_Type', \n                                            'ADHD-Inattentive_Type', \n                                            'ADHD-Hyperactive_Impulsive_Type', \n                                            'Other_Specified_Attention-Deficit_Hyperactivity_Disorder',\n                                            'No_Diagnosis_Given']\n                                            )\n    # loop over domains\n    feature_specs = glob.glob(os.path.join(Defaults.FEATURE_DIR, f'*{domain}*'))\n    \n    # loop over feature specs \n    df_all = pd.DataFrame()\n    for feature_spec in feature_specs:\n        \n        # get data for `feature_spec`\n        features = load_data(\n                         participants, \n                         feature_spec=feature_spec,\n                         cols_to_keep=['Identifiers', 'DX_01', 'Age', 'Sex', 'DX_01_Cat']\n                         )\n        # get assessment, domain, measure names\n        spec_info = io.read_json(feature_spec)\n        features['assessment'], features['domain'], features['measure'], features['mabbrev'], features['datadic'] = spec_info['assessment'], spec_info['domains'], spec_info['measures'], spec_info['abbrevs'], spec_info['datadic']\n\n        # make dataframe out of features\n        df = make_dataframe(\n                            features=features,\n                            filter_scores=True,\n                            )\n        df_all = pd.concat([df_all, df])\n        print(feature_spec)\n    \n    return df_all\n\n\n# cols to delete\nstr_to_delete = 'Administration|Data_entry|Days_Baseline|EID|Incomplete_Reason|Complete|START_DATE|Season|Site|Study|Year'\ncols_to_delete = group.filter(regex=f'{str_to_delete}').columns\n\n# cols to keep\ncols_to_keep = 'Identifiers|DX_01|Age|Sex|DX_01_Cat|_T|_Stnd|_Sum|_Score|_Scale|_Standard|_IN|_HY'\n\ndf_filter = df.filter(regex=f'{cols_to_keep}').drop(cols_to_delete, axis=1)\n\n#for name, group in df_filter.groupby('DX_01'):\n\n\ndf_filter\n\n\n\n\n\n  \n    \n      \n      Identifiers\n      NIH_Scores,NIH7_Card\n      NIH_Scores,NIH7_Card_P\n      NIH_Scores,NIH7_Comp\n      NIH_Scores,NIH7_Comp_P\n      NIH_Scores,NIH7_Flanker\n      NIH_Scores,NIH7_Flanker_P\n      NIH_Scores,NIH7_List\n      NIH_Scores,NIH7_List_P\n      NIH_Scores,NIH7_Pattern\n      NIH_Scores,NIH7_Pattern_P\n      NIH_Scores,NIH7_Picture\n      NIH_Scores,NIH7_Picture_P\n      DX_01\n      Age\n      Sex\n      DX_01_Cat\n    \n  \n  \n    \n      0\n      NDARAA075AMK\n      132.25\n      98.4\n      NaN\n      NaN\n      126.7\n      96.3\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      No Diagnosis Given\n      6.728040\n      female\n      No Diagnosis Given\n    \n    \n      1\n      NDARAA112DMH\n      146.00\n      100.0\n      NaN\n      NaN\n      135.0\n      99.0\n      109.0\n      73.0\n      123.0\n      94.0\n      NaN\n      NaN\n      ADHD-Combined Type\n      5.545744\n      male\n      Neurodevelopmental Disorders\n    \n    \n      2\n      NDARAA117NEJ\n      93.00\n      32.0\n      NaN\n      NaN\n      90.0\n      25.0\n      91.0\n      27.0\n      73.0\n      4.0\n      NaN\n      NaN\n      ADHD-Combined Type\n      7.475929\n      male\n      Neurodevelopmental Disorders\n    \n    \n      3\n      NDARAA504CRN\n      100.00\n      50.0\n      NaN\n      NaN\n      78.0\n      7.0\n      82.0\n      12.0\n      65.0\n      1.0\n      NaN\n      NaN\n      ADHD-Inattentive Type\n      9.165297\n      female\n      Neurodevelopmental Disorders\n    \n    \n      4\n      NDARAA536PTU\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      ADHD-Inattentive Type\n      11.998402\n      male\n      Neurodevelopmental Disorders\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      2273\n      NDARZY668NMV\n      73.00\n      4.0\n      NaN\n      NaN\n      71.0\n      3.0\n      77.0\n      6.0\n      44.0\n      0.0\n      NaN\n      NaN\n      ADHD-Combined Type\n      11.623431\n      female\n      Neurodevelopmental Disorders\n    \n    \n      2274\n      NDARZZ046HJA\n      109.00\n      73.0\n      NaN\n      NaN\n      88.0\n      21.0\n      89.0\n      23.0\n      117.0\n      87.0\n      NaN\n      NaN\n      ADHD-Inattentive Type\n      9.372689\n      male\n      Neurodevelopmental Disorders\n    \n    \n      2275\n      NDARZZ598MH8\n      87.00\n      19.0\n      NaN\n      NaN\n      73.0\n      4.0\n      122.0\n      93.0\n      54.0\n      1.0\n      NaN\n      NaN\n      ADHD-Inattentive Type\n      8.578713\n      male\n      Neurodevelopmental Disorders\n    \n    \n      2276\n      NDARZZ740MLM\n      90.00\n      25.0\n      NaN\n      NaN\n      100.0\n      50.0\n      68.0\n      2.0\n      98.0\n      45.0\n      NaN\n      NaN\n      ADHD-Inattentive Type\n      6.638261\n      male\n      Neurodevelopmental Disorders\n    \n    \n      2277\n      NDARZZ741VJE\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      ADHD-Inattentive Type\n      6.142596\n      male\n      Neurodevelopmental Disorders\n    \n  \n\n2278 rows × 17 columns\n\n\n\n\n# get data\nfrom hbn import io\n\nlist_of_cols = ['Identifiers', 'DX_01', 'Age', 'Sex', 'DX_01_Cat']\n\nparticipants = make_dataset.get_participants(\n                            split='all', \n                            disorders=['ADHD-Combined_Type', \n                                        'ADHD-Inattentive_Type', \n                                        'ADHD-Hyperactive_Impulsive_Type', \n                                        'Other_Specified_Attention-Deficit_Hyperactivity_Disorder',\n                                        'No_Diagnosis_Given']\n                                        )\n# loop over domains\ndomain='Cognitive_Testing'\nfeature_specs = glob.glob(os.path.join(Defaults.FEATURE_DIR, f'*{domain}*'))\n\n# loop over feature specs \ndf_all = pd.DataFrame()\nfor feature_spec in feature_specs:\n\n    # get data for `feature_spec`\n    df = load_data(participants, \n                 feature_spec=feature_spec,\n                 cols_to_keep=list_of_cols\n                 )\n\n# get assessment, domain, measure names\nspec_info = io.read_json(feature_spec)\ndf['assessment'], df['domain'], df['measure'], df['mabbrev'], df['datadic'] = spec_info['assessment'], spec_info['domains'], spec_info['measures'], spec_info['abbrevs'], spec_info['datadic']\n\n\n\ndf = get_data(domain='Cognitive_Testing')\n\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Cognitive_Testing-Adaptive_Cognitive_Evaluation-ACE_Spatial_Span_B-spec.json\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Cognitive_Testing-Wechsler_Adult_Intelligence_Scale-IV-WAIS_Abb-spec.json\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Cognitive_Testing-Temporal_Discounting_Task-temp_disc_final-spec.json\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Cognitive_Testing-Kaufman_Brief_Intelligence_Test-II-KBIT-spec.json\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Cognitive_Testing-Wechsler_Individual_Achievement_Test_-_III-WIAT-spec.json\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Cognitive_Testing-NIH_Toolbox-NIH_final-spec.json\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Cognitive_Testing-Adaptive_Cognitive_Evaluation-ACE_BRT-spec.json\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Cognitive_Testing-Adaptive_Cognitive_Evaluation-ACE_Spatial_Span_F-spec.json\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Cognitive_Testing-Wechsler_Intelligence_Scale_for_Children_-_V-WISC-spec.json\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Cognitive_Testing-Adaptive_Cognitive_Evaluation-ACE_Flanker-spec.json\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Cognitive_Testing-Adaptive_Cognitive_Evaluation-ACE_Boxed-spec.json\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Cognitive_Testing-Adaptive_Cognitive_Evaluation-ACE_SAAT-spec.json\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Cognitive_Testing-Wechsler_Adult_Intelligence_Scale-IV-WAIS-spec.json\n/Users/maedbhking/Documents/healthy_brain_network/features/features-Child_Measures-Cognitive_Testing-NIH_Toolbox-NIH_Scores-spec.json"
  },
  {
    "objectID": "notebooks/index.html",
    "href": "notebooks/index.html",
    "title": "Overview",
    "section": "",
    "text": "Phenotype models: all diagnoses\nPhenotype models: Anxiety\nPhenotype models: Depression\nPhenotype models: ASD\nPhenotype models: Learning Disorder - Reading Impairment\nPhenotype models: Compare Diagnoses"
  },
  {
    "objectID": "notebooks/index.html#predictive-modeling-results---adhd",
    "href": "notebooks/index.html#predictive-modeling-results---adhd",
    "title": "Overview",
    "section": "Predictive Modeling Results - ADHD",
    "text": "Predictive Modeling Results - ADHD\n\nPhenotype models: ADHD\nPhenotype models: ADHD & Sex\nPhenotype models: Control & Sex\nPhenotype models: ADHD & Subtypes\nPhenotype models: ADHD"
  },
  {
    "objectID": "notebooks/index.html#item-analysis",
    "href": "notebooks/index.html#item-analysis",
    "title": "Overview",
    "section": "Item Analysis",
    "text": "Item Analysis\n\nItem analysis of HBN questionnaires"
  },
  {
    "objectID": "notebooks/index.html#summary-results---adhd",
    "href": "notebooks/index.html#summary-results---adhd",
    "title": "Overview",
    "section": "Summary Results - ADHD",
    "text": "Summary Results - ADHD\n\nSummary of Clinical Diagnosis\nIntake Interview\nChild Behavior Checklist - Parent vs Teacher\nChild Measures - Total Scores\nParent Measures - Total Scores\nADHD + Gender"
  },
  {
    "objectID": "notebooks/exploratory-features-adhd.html",
    "href": "notebooks/exploratory-features-adhd.html",
    "title": "MIT Projects",
    "section": "",
    "text": "## FUNCTIONS\n\n## GET DATA from parent intake interview\n\ndef get_data(preprocess=False, target_col='DX_01'):\n\n    import pandas as pd\n    from hbn.features import build_features\n    from hbn.data import make_dataset\n\n    # get features\n    features = build_features.get_features(\n                assessment='Parent Measures',\n                domains=['Interview of Emotional and Psychological Function'],\n                measures=['Intake Interview'],\n                min_num_participants=2000,\n                incl_data_type=None\n                );\n\n    if preprocess:\n        # preprocess features \n        clf_info={\"numeric\": [[\n                        \"sklearn.impute\",\n                        \"SimpleImputer\",\n                        {\"strategy\": \"mean\"}]\n                ]\n                }\n        features = build_features.preprocess(\n                                            dataframe=features,\n                                            clf_info=clf_info,\n                                            cols_to_ignore=['Identifiers']\n                                            )\n\n    # get targets\n    targets = build_features.get_targets(target_info = {\n                                        \"assessment\": \"Clinical Measures\",\n                                        \"domain\": None,\n                                        \"measure\": \"Clinical Diagnosis Demographics\",\n                                        \"target_column\": target_col,\n                                        \"transform\": None,\n                                        \"outname\":target_col\n                                        })\n    # get participant ids\n    participants = make_dataset.get_participants(\n                                split='all', \n                                disorders=['ADHD-Combined Type', \n                                            'ADHD-Inattentive Type', \n                                            'ADHD-Hyperactive_Impulsive_Type', \n                                            'No_Diagnosis_Given']\n                                )\n\n    features_target = features.merge(\n                                targets, on='Identifiers').merge(\n                                participants, on='Identifiers')\n    # get feature names\n    feature_names = [col for col in features_target.columns if target_col not in col]\n    \n    df_concat = pd.concat([features_target[[target_col]], features_target[feature_names]], axis=1)\n\n    return df_concat\n\n\n## RUN THIS CELL ## \nfrom hbn.constants import Defaults\nfrom hbn.data import make_dataset\n\n# make_dataset.make_train_test_splits(out_dir=Defaults.MODEL_SPEC_DIR)\n\n# get summary of clinical diagnosis + other demographics\ndx = make_dataset.make_summary(save=False)\ndx = make_dataset._add_race_ethnicity(dataframe=dx)\n\n# filter for adhd\nadhd_only = ['ADHD-Combined Type', 'ADHD-Hyperactive/Impulsive Type', 'ADHD-Inattentive Type', 'No Diagnosis Given']\ndx = dx[dx['DX_01'].isin(adhd_only)]\n\n# get data from intake interview and merge with clinical summary\ndf_intake = get_data()\ndf_intake = df_intake.merge(dx[['Sex', 'Age_bracket', 'PreInt_Demos_Fam,Child_Race_cat','Identifiers']], on='Identifiers')\n\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!\n\n\nreading /Users/maedbhking/Documents/healthy_brain_network/data/raw/phenotype/Parent_Measures/Interview_of_Emotional_and_Psychological_Function/Intake_Interview.csv into dataframe\n\n\nreading /Users/maedbhking/Documents/healthy_brain_network/data/raw/phenotype/Clinical_Measures/Clinical_Diagnosis_Demographics.csv into dataframe\n\n\n\nBasic Demographics\n\n\nWhat is the race breakdown of children with adhd?\n\ndemographics = dx.groupby(['DX_01', 'PreInt_Demos_Fam,Child_Race_cat']\n                          ).agg({'Identifiers': 'count',\n                                }).reset_index()\n\nfig = px.bar(demographics, x=\"DX_01\", y=\"Identifiers\", color=\"PreInt_Demos_Fam,Child_Race_cat\")\nfig.show()\n\n\n                                                \n\n\n\n\nWhat is the sex breakdown of children with adhd?\n\nlargest M/F ratios are combined and hyperactive, but not inattentive\n\ndemographics = dx.groupby(['DX_01', 'Sex']\n                          ).agg({'Identifiers': 'count',\n                                }).reset_index()\n\nfig = px.bar(demographics, x=\"DX_01\", y=\"Identifiers\", color=\"Sex\")\nfig.show()\n\n\n                                                \n\n\n\n\n\nWhat is the age breakdown of children with adhd?\n\ndemographics = dx.groupby(['DX_01', 'Age_bracket']\n                          ).agg({'Identifiers': 'count',\n                                }).reset_index()\n\nfig = px.bar(demographics, x=\"DX_01\", y=\"Identifiers\", color=\"Age_bracket\")\nfig.show()\n\n\n                                                \n\n\n\n\nHow many comorbidities do children with adhd have?\n\nGirls have more combordities on average than boys (except for impulsive type)\n\ndemographics = dx.groupby(['DX_01', 'Sex']\n                          ).agg({'comorbidities': 'mean',\n                                }).reset_index()\n\nfig = px.bar(demographics, x=\"DX_01\", y=\"comorbidities\", color='Sex')\nfig.show()\n\n\n                                                \n\n\n\n\n\nHow many comorbidities do children with adhd have?\n\nChildrenn over10 have more combordities on average than children under10\n\ndemographics = dx.groupby(['DX_01', 'Age_bracket']\n                          ).agg({'comorbidities': 'mean',\n                                }).reset_index()\n\nfig = px.bar(demographics, x=\"DX_01\", y=\"comorbidities\", color='Age_bracket')\nfig.show()\n\n\n                                                \n\n\n\n\n\nget data from parent intake interview\n\n\nWhat % of children with adhd have parents with adhd?\n\nfrom hbn.data import make_dataset\n\n### INTAKE INTERVIEW ###\n\ntmp = df_intake.groupby('DX_01').agg({'PreInt_FamHx,m_adhd': 'sum', \n                               'PreInt_FamHx,f_adhd': 'sum', \n                               'PreInt_FamHx,s_adhd': 'sum',\n                               'PreInt_FamHx,f_autism':'sum',\n                               'PreInt_FamHx,m_autism':'sum',\n                               'PreInt_FamHx,s_autism':'sum',\n                               'Identifiers': 'count'})\ntmp\n\n\n\n\n\n  \n    \n      \n      PreInt_FamHx,m_adhd\n      PreInt_FamHx,f_adhd\n      PreInt_FamHx,s_adhd\n      PreInt_FamHx,f_autism\n      PreInt_FamHx,m_autism\n      PreInt_FamHx,s_autism\n      Identifiers\n    \n    \n      DX_01\n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      ADHD-Combined Type\n      3.0\n      6.0\n      4.0\n      0.0\n      0.0\n      3.0\n      753\n    \n    \n      ADHD-Hyperactive/Impulsive Type\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      1.0\n      106\n    \n    \n      ADHD-Inattentive Type\n      0.0\n      1.0\n      2.0\n      0.0\n      0.0\n      2.0\n      680\n    \n    \n      No Diagnosis Given\n      1.0\n      4.0\n      4.0\n      0.0\n      0.0\n      1.0\n      332\n    \n  \n\n\n\n\n\ndf_intake.columns.str.split(',').str.get(0).unique()\n\nIndex(['DX_01', 'Identifiers', 'PreInt_Demos_Fam', 'PreInt_Demos_Home',\n       'PreInt_DevHx', 'PreInt_EduHx', 'PreInt_FamHx', 'PreInt_FamHx_RDC',\n       'PreInt_Lang', 'PreInt_TxHx', 'Sex', 'Age_bracket'],\n      dtype='object')\n\n\n\n\nPrevious diagnoses\n\nMany children with adhd have been previously diagnosed with a psych/learning disorder\n\ncolors = ['Sex', 'PreInt_Demos_Fam,Child_Race_cat']\n\nfor color in colors:\n    tmp = df_intake.groupby(['DX_01', color]).agg({'PreInt_TxHx,Past_DX': 'sum',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp['PreInt_TxHx,Past_DX'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y='percent', color=color,orientation='v', barmode=\"group\")\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n\n\nabout 25% of children with adhd are currently taking psych medication\n\ncolors = ['Sex', 'PreInt_Demos_Fam,Child_Race_cat']\n\nfor color in colors:\n    tmp = df_intake.groupby(['DX_01',color]).agg({'PreInt_TxHx,psych_meds_cur': 'sum',\n                                            'PreInt_TxHx,psych_meds_past': 'sum',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent_curr'] = tmp['PreInt_TxHx,psych_meds_cur'] / tmp['Identifiers']\n    tmp['percent_past'] = tmp['PreInt_TxHx,psych_meds_past'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y='percent_curr', color=color,orientation='v', barmode=\"group\")\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n\nfew children had immunication reactions\n\ncolors = ['Sex', 'PreInt_Demos_Fam,Child_Race_cat']\nvar = 'immunization_reaction'\n\nfor color in colors:\n    tmp = df_intake.groupby(['DX_01',color]).agg({f'PreInt_TxHx,{var}': 'sum',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp[f'PreInt_TxHx,{var}'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y='percent', color=color,orientation='v', barmode=\"group\")\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n\n10-20% of children have had food allergies\n\ncolors = ['Sex', 'PreInt_Demos_Fam,Child_Race_cat']\nvar = 'food_allergy'\n\nfor color in colors:\n    tmp = df_intake.groupby(['DX_01',color]).agg({f'PreInt_TxHx,{var}': 'sum',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp[f'PreInt_TxHx,{var}'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y='percent', color=color,orientation='v', barmode=\"group\")\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n\nMost children have attended an average of 2 schools\n\ncolors = ['Sex', 'Age_bracket']\nvar = 'number_schools'\n\nfor color in colors:\n    tmp = df_intake.groupby(['DX_01',color]).agg({f'PreInt_EduHx,{var}': 'mean',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp[f'PreInt_EduHx,{var}'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y=f'PreInt_EduHx,{var}', color=color,orientation='v', barmode=\"group\")\n    fig.update_yaxes(range=[1,4])\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n\n50-60% of children have an individualized education plan\n\nmore children over10 with hyperactive/impulsive have an IEP but more children under10 with inattentive have an IEP\n\ncolors = ['Sex', 'Age_bracket']\nvar = 'IEP'\n\nfor color in colors:\n    tmp = df_intake.groupby(['DX_01',color]).agg({f'PreInt_EduHx,{var}': 'sum',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp[f'PreInt_EduHx,{var}'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y='percent', color=color,orientation='v', barmode=\"group\")\n    fig.update_yaxes(range=[.1,.7])\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n\n\nlearning disability?\n\nfew children with adhd diagnosed with a learning disability\n\ncolors = ['Sex', 'PreInt_Demos_Fam,Child_Race_cat', 'Age_bracket']\nvar = 'learning_disability'\n\nfor color in colors:\n    tmp = df_intake.groupby(['DX_01',color]).agg({f'PreInt_EduHx,{var}': 'sum',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp[f'PreInt_EduHx,{var}'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y='percent', color=color,orientation='v', barmode=\"group\")\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n                                                \n\n\n\n\n\nneuropsych testing? pretty low numbers …\n\ncolors = ['Sex', 'PreInt_Demos_Fam,Child_Race_cat', 'Age_bracket']\nvar = 'NeuroPsych'\n\nfor color in colors:\n    tmp = df_intake.groupby(['DX_01',color]).agg({f'PreInt_EduHx,{var}': 'sum',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp[f'PreInt_EduHx,{var}'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y='percent', color=color,orientation='v', barmode=\"group\")\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n                                                \n\n\n\n\nRecent grades (1-excellent, 5-failing)\n\ncolors = ['Sex','Age_bracket']\nvar = 'recent_grades'\n\nfor color in colors:\n    tmp = df_intake.groupby(['DX_01',color]).agg({f'PreInt_EduHx,{var}': 'mean',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp[f'PreInt_EduHx,{var}'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y=f'PreInt_EduHx,{var}', color=color,orientation='v', barmode=\"group\")\n    fig.update_yaxes(range=[1,3])\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n\nnumber of friends\n\ncolors = ['Sex', 'PreInt_Demos_Fam,Child_Race_cat', 'Age_bracket']\nvar = 'number_friends'\n\nfor color in colors:\n    tmp = df_intake.groupby(['DX_01',color]).agg({f'PreInt_EduHx,{var}': 'mean',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp[f'PreInt_EduHx,{var}'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y=f'PreInt_EduHx,{var}', color=color,orientation='v', barmode=\"group\")\n    fig.update_yaxes(range=[1,4])\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n                                                \n\n\n\n\noutside school tutoring\n\n40% of children with inattentive type adhd have outside tutoring\n\ncolors = ['Sex', 'PreInt_Demos_Fam,Child_Race_cat', 'Age_bracket']\nvar = 'tutor'\n\nfor color in colors:\n    tmp = df_intake.groupby(['DX_01',color]).agg({f'PreInt_EduHx,{var}': 'sum',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp[f'PreInt_EduHx,{var}'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y='percent', color=color,orientation='v', barmode=\"group\")\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n                                                \n\n\n\n\n\nstart of puberty\n\ngirls with adhd are starting puberty a lot earlier than boys - this tracks with children without a diagnosis. exception is boys with hyperactive adhd\n\n\ncolors = ['Sex', 'PreInt_Demos_Fam,Child_Race_cat']\nvar = 'puberty_age'\n\nfor color in colors:\n    tmp = df_intake.groupby(['DX_01',color]).agg({f'PreInt_DevHx,{var}': 'mean',\n                                   'Identifiers': 'count'}\n                                        ).reset_index()\n    tmp['percent'] = tmp[f'PreInt_DevHx,{var}'] / tmp['Identifiers']\n\n    fig = px.bar(tmp, x=\"DX_01\", y=f'PreInt_DevHx,{var}', color=color,orientation='v', barmode=\"group\")\n    fig.update_yaxes(range=[8,12])\n    fig.show()\n\n\n                                                \n\n\n\n                                                \n\n\n\n\n\ngirls with hyperactive/impulsive adhd are starting menstruation earlier than other subtypes\n\nvar = 'menstruation_age'\n\ntmp = df_intake.groupby(['DX_01']).agg({f'PreInt_DevHx,{var}': 'mean',\n                               'Identifiers': 'count'}\n                                    ).reset_index()\n\nfig = px.bar(tmp, x=\"DX_01\", y=f'PreInt_DevHx,{var}',orientation='v', barmode=\"group\")\nfig.update_yaxes(range=[10,12])\nfig.show()"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD-Sex.html",
    "href": "notebooks/phenotype_models_ADHD-Sex.html",
    "title": "MIT Projects",
    "section": "",
    "text": "import os\nimport pandas as pd\nimport seaborn as sns\n\nfrom hbn.constants import Defaults\nfrom hbn.visualization import visualize\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n%load_ext autoreload\n%autoreload 2\n\n%matplotlib inline\n\n# pio.renderers.default = 'iframe'\n\nimport ipywidgets as widgets       # interactive display\n%config InlineBackend.figure_format = 'svg' # other available formats are: 'retina', 'png', 'jpeg', 'pdf'"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD-Sex.html#child-measures---language-tasks",
    "href": "notebooks/phenotype_models_ADHD-Sex.html#child-measures---language-tasks",
    "title": "MIT Projects",
    "section": "Child Measures - Language Tasks",
    "text": "Child Measures - Language Tasks\n\ndf1 = df_classify[(df_classify['target']==target) & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Language Tasks')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD-Sex.html#parent-measures---demographics",
    "href": "notebooks/phenotype_models_ADHD-Sex.html#parent-measures---demographics",
    "title": "MIT Projects",
    "section": "Parent Measures - Demographics",
    "text": "Parent Measures - Demographics\n\n\nmeasures = ['Affective Reactivity Index-Parent',\n       'Autism Spectrum Screening Questionnaire',\n       'Barratt Simplified Measure of Social Status',\n       'Child Behavior Checklist', 'Child Mind Institute Symptom Checker',\n       'Demographics',\n       'Extended Strengths and Weaknesses Assessment of Normal Behavior-Parent Report',\n       'Financial Support Questionnaire',\n       'Inventory of Callous-Unemotional Traits – Parent Report']\n\n\ndf1 = df_classify[(df_classify['target']==target) & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Demographic Questionnaire Measures')]\n\ndf1 = df1[df1['measures'].isin(measures)]\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD-Sex.html#parent-measures---demographics-1",
    "href": "notebooks/phenotype_models_ADHD-Sex.html#parent-measures---demographics-1",
    "title": "MIT Projects",
    "section": "Parent Measures - Demographics",
    "text": "Parent Measures - Demographics\n\nmeasures = ['Mood and Feelings Questionnaire', 'Repetitive Behavior Scale',\n       'Screen for Child Anxiety Related Disorders - Parent report',\n       'Social Aptitudes Scale', 'Social Communication Questionnaire',\n       'Social Responsiveness Scale-2',\n       'Strengths and Difficulties Questionnaire (with impact supplement)',\n       'Strengths and Weaknesses Assessment of ADHD and Normal Behavior',\n       'The Columbia Impairment Scale-Parent Report Version',\n       'WHO Disability Assessment Schedule – Parent Report']\n\ndf1 = df_classify[(df_classify['target']==target) & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Demographic Questionnaire Measures')]\n\n\ndf1 = df1[df1['measures'].isin(measures)]\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD-Sex.html#parent-measures---interview-of-emotional-and-psychological-function",
    "href": "notebooks/phenotype_models_ADHD-Sex.html#parent-measures---interview-of-emotional-and-psychological-function",
    "title": "MIT Projects",
    "section": "Parent Measures - Interview of Emotional and Psychological Function",
    "text": "Parent Measures - Interview of Emotional and Psychological Function\n\n\ndf1 = df_classify[(df_classify['target']==target) & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Interview of Emotional and Psychological Function')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD-Sex.html#child-measures---cognitive-testing",
    "href": "notebooks/phenotype_models_ADHD-Sex.html#child-measures---cognitive-testing",
    "title": "MIT Projects",
    "section": "Child Measures - Cognitive Testing",
    "text": "Child Measures - Cognitive Testing\n\n\ndf1 = df_classify[(df_classify['target']==target) & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Cognitive Testing')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD-Sex.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status",
    "href": "notebooks/phenotype_models_ADHD-Sex.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status",
    "title": "MIT Projects",
    "section": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status",
    "text": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status\n\n\ndf1 = df_classify[(df_classify['target']==target) & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Questionnaire Measures of Emotional and Cognitive Status')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_ADHD-Sex.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status-1",
    "href": "notebooks/phenotype_models_ADHD-Sex.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status-1",
    "title": "MIT Projects",
    "section": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status",
    "text": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status\n\n\ndf1 = df_classify[(df_classify['target']==target) & \n                  (df_classify['assessment']=='Child Measures')]\n\ncols = ['Physical Fitness and Status', 'Neurologic Function', 'Physiologic Function', 'Vision', 'Motor Skills']\n\ndf1 = df1[df1['domains'].isin(cols)]\n\nvisualize.predictive_modeling(df=df1)\n\n\n                                                \n\n\n\n#import plotly.express as px\n\n# interactive visualization of features\n#@widgets.interact(\n #               feature=df_feature['features'].unique(),\n #               )\n\n#def visualize_features(feature):\n#    df = df_feature[df_feature['features']==feature]\n#    fig = px.line(df, x='feature_names_sum', y='feature_sum', markers=True, title=feature)\n#    fig.update_xaxes(showticklabels=False)\n#    fig.update_xaxes(type='category')\n    \n#    fig.show()\n\n\ndf_classify['measures'].unique()\n\narray(['Affective Reactivity Index-Parent',\n       'Affective Reactivity Index – Self Report',\n       'Autism Spectrum Screening Questionnaire',\n       'Barratt Simplified Measure of Social Status',\n       'Child Behavior Checklist', 'Child Mind Institute Symptom Checker',\n       'Clinical Evaluation of Language Fundamentals  Screening Test',\n       'Conners ADHD Rating Scales - Self Report  Short Form',\n       'Demographics', 'Edinburgh Handedness', 'Electro-encephalography',\n       'Extended Strengths and Weaknesses Assessment of Normal Behavior-Parent Report',\n       'Family History- Research Diagnostic Criteria',\n       'Financial Support Questionnaire', 'FitnessGram',\n       'Goldman-Fristoe Test of Articulation - III', 'Grooved Pegboard',\n       'Intake Interview', 'Intake Interview PreInt Demos Fam',\n       'Intake Interview PreInt DevHx', 'Intake Interview PreInt EduHx',\n       'Intake Interview PreInt Lang', 'Intake Interview PreInt TxHx',\n       'Inventory of Callous-Unemotional Traits – Parent Report',\n       'Ishihara Color Vision Test', 'Mood and Feelings Questionnaire',\n       'Mood and Feelings Questionnaire – Long Version',\n       'Negative Life Events Scale – Parent Report',\n       'Physical Activity Questionnaire for Older Children ',\n       'Physical Measures', 'Pregnancy and Birth Questionnaire',\n       'Repetitive Behavior Scale',\n       'Screen for Child Anxiety Related Disorders - Parent report',\n       'Screen for Child Anxiety Related Disorders - Self-report',\n       'Social Aptitudes Scale', 'Social Communication Questionnaire',\n       'Social Responsiveness Scale-2',\n       'Strengths and Difficulties Questionnaire (with impact supplement)',\n       'Strengths and Weaknesses Assessment of ADHD and Normal Behavior',\n       'Test of Word Reading Efficiency - II',\n       'The Columbia Impairment Scale-Parent Report Version',\n       'The Columbia Impairment Scale-Self Report Version',\n       'WHO Disability Assessment Schedule – Parent Report',\n       'WHO Disability Assessment Schedule – Self Report',\n       'Wechsler Individual Achievement Test - III',\n       'Wechsler Intelligence Scale for Children - V'], dtype=object)"
  },
  {
    "objectID": "notebooks/phenotype_models_compare_CBCL.html",
    "href": "notebooks/phenotype_models_compare_CBCL.html",
    "title": "MIT Projects",
    "section": "",
    "text": "import os\nimport pandas as pd\nimport seaborn as sns\n\nfrom hbn.constants import Defaults\nfrom hbn.visualization import visualize\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n%load_ext autoreload\n%autoreload 2\n\n%matplotlib inline\n\nimport plotly.io as pio\npio.renderers.default='notebook'\n\nimport ipywidgets as widgets       # interactive display\n%config InlineBackend.figure_format = 'svg' # other available formats are: 'retina', 'png', 'jpeg', 'pdf'"
  },
  {
    "objectID": "notebooks/phenotype_models_compare_CBCL.html#classifier-models---teacher-vs.-parent-vs.-self-report",
    "href": "notebooks/phenotype_models_compare_CBCL.html#classifier-models---teacher-vs.-parent-vs.-self-report",
    "title": "MIT Projects",
    "section": "Classifier Models - Teacher vs. Parent vs. Self-Report",
    "text": "Classifier Models - Teacher vs. Parent vs. Self-Report\n\nEach model corresponds to a teacher, parent, or self-report (child) measure (questionnaie) - all questionnaires ask approx. the same behavioral questions thus allowing for comparison\nEach model is classified as diagnosis (e.g., Anxiety, ADHD) vs. no diagnosis\n\n\nparticipants = df_all['participant_group'].unique()\nabbrevs = ['Youth Self-Report', 'Parent Report', 'Parent Report (Preschool)', 'Teacher Report', 'Teacher Report (Preschool)']\n\n\nfor participant in participants:\n    \n    df1 = df_all[(df_all['target']=='DX_01_Cat_new_binarize') & \n            (df_all['participant_group']==participant) &\n            (df_all['abbrevs'].isin(abbrevs))\n            ]\n\n    visualize.predictive_modeling_group(df=df1, x='abbrevs', y='roc_auc_score', title=participant)"
  },
  {
    "objectID": "notebooks/clinical_dx.html",
    "href": "notebooks/clinical_dx.html",
    "title": "MIT Projects",
    "section": "",
    "text": "import seaborn as sns\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport umap\nimport plotly.io as pio\n\nfrom hbn.data import make_dataset\nfrom hbn.features.build_features import get_features\nfrom hbn.visualization import visualize as vis\n\n%load_ext autoreload\n%autoreload 2\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# pio.renderers.default = 'iframe'\n\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!"
  },
  {
    "objectID": "notebooks/clinical_dx.html#majority-of-sample-n4106-is-male-n2626-and-majority-of-sample-are-in-the-age-range-6-10-n2394",
    "href": "notebooks/clinical_dx.html#majority-of-sample-n4106-is-male-n2626-and-majority-of-sample-are-in-the-age-range-6-10-n2394",
    "title": "MIT Projects",
    "section": "Majority of sample (n=4106) is male (n=2626) and majority of sample are in the age range: 6-10 (n=2394)",
    "text": "Majority of sample (n=4106) is male (n=2626) and majority of sample are in the age range: 6-10 (n=2394)\n\nfig = px.histogram(df, x=\"Age\", nbins=10, color=\"Sex\")\nfig.show()"
  },
  {
    "objectID": "notebooks/clinical_dx.html#adhd-make-up-the-majority-of-diagnoses",
    "href": "notebooks/clinical_dx.html#adhd-make-up-the-majority-of-diagnoses",
    "title": "MIT Projects",
    "section": "ADHD make up the majority of diagnoses",
    "text": "ADHD make up the majority of diagnoses\n\npiechart(dataframe=df_intake, y='DX_01', hue=None)"
  },
  {
    "objectID": "notebooks/clinical_dx.html#majority-of-samples-were-collected-in-study-site-1",
    "href": "notebooks/clinical_dx.html#majority-of-samples-were-collected-in-study-site-1",
    "title": "MIT Projects",
    "section": "Majority of samples were collected in study site 1",
    "text": "Majority of samples were collected in study site 1\n\npiechart(dataframe=df, y='Site', hue=None)"
  },
  {
    "objectID": "notebooks/clinical_dx.html#majority-of-participans-were-collected-between-2017-2019",
    "href": "notebooks/clinical_dx.html#majority-of-participans-were-collected-between-2017-2019",
    "title": "MIT Projects",
    "section": "Majority of participans were collected between 2017-2019",
    "text": "Majority of participans were collected between 2017-2019\n\npiechart(dataframe=df_intake, y='Enroll_Year', hue=None)\n\n\n                                                \n\n\n\n# vis.wordcloud(dataframe=df, column='DX_01')\n\n\npiechart(dataframe=df_intake, y='PreInt_Demos_Fam,Child_Race_cat', hue=None)"
  },
  {
    "objectID": "notebooks/clinical_dx.html#adhd-is-the-most-diagnosed-disorder-in-the-hbn-followed-by-asd.-most-disorders-are-diagnosed-from-5-21-except-for-hyperactiveimpulsive-adhd-which-isnt-diagnosed-past-13-14-years",
    "href": "notebooks/clinical_dx.html#adhd-is-the-most-diagnosed-disorder-in-the-hbn-followed-by-asd.-most-disorders-are-diagnosed-from-5-21-except-for-hyperactiveimpulsive-adhd-which-isnt-diagnosed-past-13-14-years",
    "title": "MIT Projects",
    "section": "ADHD is the most diagnosed disorder in the HBN followed by ASD. Most disorders are diagnosed from 5-21 except for hyperactive/impulsive adhd, which isn’t diagnosed past 13-14 years",
    "text": "ADHD is the most diagnosed disorder in the HBN followed by ASD. Most disorders are diagnosed from 5-21 except for hyperactive/impulsive adhd, which isn’t diagnosed past 13-14 years\n\nfig = px.scatter(df, x=\"Identifiers\", y=\"Age\", color=\"DX_01\",\n                hover_name=\"DX_01\", log_x=False, size_max=60) # size=\"Age\"\nfig.update_layout(showlegend=False)\nfig.update_xaxes(showticklabels=False, title='Participants')\nfig.show()\n\n\n                                                \n\n\n\nfig = px.scatter(df, x=\"Identifiers\", y=\"Age\", color=\"DX_01_Cat\",\n                hover_name=\"DX_01_Cat\", log_x=False, size_max=60) # size=\"Age\"\nfig.update_layout(showlegend=False)\nfig.update_xaxes(showticklabels=False, title='Participants')\nfig.show()"
  },
  {
    "objectID": "notebooks/clinical_dx.html#there-are-more-than-double-the-females-with-major-depressive-disorder-including-persistent-depressive-disorder-than-males",
    "href": "notebooks/clinical_dx.html#there-are-more-than-double-the-females-with-major-depressive-disorder-including-persistent-depressive-disorder-than-males",
    "title": "MIT Projects",
    "section": "there are more than double the females with major depressive disorder (including persistent depressive disorder) than males",
    "text": "there are more than double the females with major depressive disorder (including persistent depressive disorder) than males\n\ndiagnosis_grouped = df.groupby(['DX_01', 'DX_01_Cat', 'Sex']).agg({\n                'Age': 'mean', 'Identifiers': 'count', 'comorbidities': 'mean'\n                }).reset_index()\ndiagnosis_grouped = diagnosis_grouped.rename({'Identifiers': 'count', 'Age': 'mean_age'}, axis=1)\n\nfig = px.bar(diagnosis_grouped.sort_values(by='count', ascending=False).head(45), \n             x='count', y='DX_01', color='Sex', orientation='h')\nfig.update_yaxes(title='')\nfig.show()"
  },
  {
    "objectID": "notebooks/clinical_dx.html#mood-and-anxiety-disorders-are-only-disorders-where-females-outnumber-males",
    "href": "notebooks/clinical_dx.html#mood-and-anxiety-disorders-are-only-disorders-where-females-outnumber-males",
    "title": "MIT Projects",
    "section": "mood and anxiety disorders are only disorders where females outnumber males",
    "text": "mood and anxiety disorders are only disorders where females outnumber males\n\ndiagnosis_grouped = df.groupby(['DX_01', 'DX_01_Cat', 'Sex']).agg({\n                'Age': 'mean', 'Identifiers': 'count', 'comorbidities': 'mean'\n                }).reset_index()\ndiagnosis_grouped = diagnosis_grouped.rename({'Identifiers': 'count', 'Age': 'mean_age'}, axis=1)\n\n\nfig = px.bar(diagnosis_grouped.groupby(['DX_01_Cat', 'Sex']).sum().reset_index().sort_values(by='count', ascending=False), \n             x='count', y='DX_01_Cat', color='Sex', orientation='h', text='count')\nfig.update_yaxes(title='')\nfig.show()"
  },
  {
    "objectID": "notebooks/clinical_dx.html#disorders-with-n150-neurodevelopmental-disorders-including-autism-adhd-and-neurocognitiveintellectual-anxiety-depression-control-group-no-diagnosis-given",
    "href": "notebooks/clinical_dx.html#disorders-with-n150-neurodevelopmental-disorders-including-autism-adhd-and-neurocognitiveintellectual-anxiety-depression-control-group-no-diagnosis-given",
    "title": "MIT Projects",
    "section": "disorders with n>150: neurodevelopmental disorders (including autism, adhd, and neurocognitive/intellectual), anxiety, depression, control group (no diagnosis given)",
    "text": "disorders with n>150: neurodevelopmental disorders (including autism, adhd, and neurocognitive/intellectual), anxiety, depression, control group (no diagnosis given)\n\ndiagnosis_grouped = df.groupby(['DX_01', 'DX_01_Cat', 'Sex']).agg({\n                'Age': 'mean', 'Identifiers': 'count', 'comorbidities': 'mean'\n                }).reset_index()\ndiagnosis_grouped = diagnosis_grouped.rename({'Identifiers': 'count', 'Age': 'mean_age'}, axis=1)\n\n\nfig = px.bar(diagnosis_grouped.groupby(['DX_01_Cat']).sum().reset_index().sort_values(by='count', ascending=False), \n             x='count', y='DX_01_Cat',  orientation='h', text='count')\nfig.update_yaxes(title='')\nfig.show()"
  },
  {
    "objectID": "notebooks/clinical_dx.html#of-participants-have-a-comorbidity",
    "href": "notebooks/clinical_dx.html#of-participants-have-a-comorbidity",
    "title": "MIT Projects",
    "section": "59% of participants have a comorbidity",
    "text": "59% of participants have a comorbidity\n\nfig = px.histogram(df, x=\"comorbidities\", nbins=10, color=\"Sex\")\nfig.show()"
  },
  {
    "objectID": "notebooks/clinical_dx.html#psychosis-disorders-have-most-comorbidities-and-females-males",
    "href": "notebooks/clinical_dx.html#psychosis-disorders-have-most-comorbidities-and-females-males",
    "title": "MIT Projects",
    "section": "psychosis disorders have most comorbidities (and females > males)",
    "text": "psychosis disorders have most comorbidities (and females > males)\n\ndiagnosis_grouped = df.groupby(['DX_01', 'DX_01_Cat', 'Sex']).agg({\n                'Age': 'mean', 'Identifiers': 'count', 'comorbidities': 'mean'\n                }).reset_index()\ndiagnosis_grouped = diagnosis_grouped[diagnosis_grouped['comorbidities']>0]\ndiagnosis_grouped = diagnosis_grouped.rename({'Identifiers': 'count', 'Age': 'mean_age'}, axis=1)\n\n\nfig = px.bar(diagnosis_grouped.sort_values(by='comorbidities', ascending=False).head(20), \n             x='comorbidities', y='DX_01', color='Sex', orientation='h', barmode=\"group\")\nfig.update_xaxes(range=[2,6])\nfig.update_yaxes(title='')\nfig.show()"
  },
  {
    "objectID": "notebooks/clinical_dx.html#majority-of-sample-have-a-general-functioning-score-between-60-70",
    "href": "notebooks/clinical_dx.html#majority-of-sample-have-a-general-functioning-score-between-60-70",
    "title": "MIT Projects",
    "section": "Majority of sample have a general functioning score between 60-70%",
    "text": "Majority of sample have a general functioning score between 60-70%\n\nfig = px.histogram(df_CGAS, x=\"CGAS_Score\",  nbins=10)\nfig.show()"
  },
  {
    "objectID": "notebooks/clinical_dx.html#across-broad-categories-children-on-the-schizophrenia-spectrum-have-the-lowest-general-functioning",
    "href": "notebooks/clinical_dx.html#across-broad-categories-children-on-the-schizophrenia-spectrum-have-the-lowest-general-functioning",
    "title": "MIT Projects",
    "section": "Across broad categories, children on the schizophrenia spectrum have the lowest general functioning",
    "text": "Across broad categories, children on the schizophrenia spectrum have the lowest general functioning\n\ndiagnosis_grouped = df_CGAS.groupby(['DX_01_Cat']).agg({\n                'Age': 'mean', 'Identifiers': 'count', 'CGAS_Score': 'mean'\n                }).reset_index()\ndiagnosis_grouped = diagnosis_grouped.rename({'Identifiers': 'count', 'Age': 'mean_age'}, axis=1)\n\n\nfig = px.bar(diagnosis_grouped, \n             x='CGAS_Score', y='DX_01_Cat', orientation='h')\nfig.update_xaxes(range=[35,80])\nfig.update_yaxes(title='')\nfig.show()"
  },
  {
    "objectID": "notebooks/clinical_dx.html#most-children-are-from-the-u.s.",
    "href": "notebooks/clinical_dx.html#most-children-are-from-the-u.s.",
    "title": "MIT Projects",
    "section": "Most children are from the U.S.",
    "text": "Most children are from the U.S.\n\npiechart(dataframe=df_intake, y='PreInt_Demos_Fam,Child_CountryOrigin', hue=None)\n\n\n                                                \n\n\n\n\ndiagnosis_grouped = df_intake.groupby(['DX_01', 'Sex']).agg({\n                'Age': 'mean', 'Identifiers': 'count', 'PreInt_DevHx,preg_dur': 'mean'\n                }).reset_index()\ndiagnosis_grouped = diagnosis_grouped.rename({'Identifiers': 'count', 'Age': 'mean_age'}, axis=1)\n\n\nfig = px.bar(diagnosis_grouped.groupby(['DX_01', 'Sex']).sum().reset_index().sort_values(by='count', ascending=False).head(20), \n             x='PreInt_DevHx,preg_dur', y='DX_01', color='Sex', orientation='h', barmode=\"group\")\nfig.update_yaxes(title='')\nfig.update_xaxes(range=[30,40])\nfig.show()"
  },
  {
    "objectID": "notebooks/clinical_dx.html#most-adolescents-start-menstruation-between-11-12-years-old---girls-with-adhd-hyperactiveimpulsive-type-start-earliest-at-10-years-of-age",
    "href": "notebooks/clinical_dx.html#most-adolescents-start-menstruation-between-11-12-years-old---girls-with-adhd-hyperactiveimpulsive-type-start-earliest-at-10-years-of-age",
    "title": "MIT Projects",
    "section": "most adolescents start menstruation between 11-12 years old - girls with ADHD-hyperactive/impulsive type start earliest at 10 years of age",
    "text": "most adolescents start menstruation between 11-12 years old - girls with ADHD-hyperactive/impulsive type start earliest at 10 years of age\n\ndiagnosis_grouped = df_intake.groupby(['DX_01']).agg({\n                'Age': 'mean', 'Identifiers': 'count', 'PreInt_DevHx,menstruation_age': 'mean'\n                }).reset_index()\ndiagnosis_grouped = diagnosis_grouped.rename({'Identifiers': 'count', 'Age': 'mean_age'}, axis=1)\n\n\nfig = px.bar(diagnosis_grouped.groupby(['DX_01']).sum().reset_index().sort_values(by='count', ascending=False).head(20), \n             x='PreInt_DevHx,menstruation_age', y='DX_01',  orientation='h', barmode=\"group\")\nfig.update_yaxes(title='')\nfig.update_xaxes(range=[8,13])\nfig.show()"
  },
  {
    "objectID": "notebooks/clinical_dx.html#on-average-children-had-a-normal-birthweight",
    "href": "notebooks/clinical_dx.html#on-average-children-had-a-normal-birthweight",
    "title": "MIT Projects",
    "section": "On average, children had a normal birthweight",
    "text": "On average, children had a normal birthweight\n\ndiagnosis_grouped = df_intake.groupby(['DX_01']).agg({\n                'Age': 'mean', 'Identifiers': 'count', 'PreInt_DevHx,birthweight_ozs': 'mean'\n                }).reset_index()\ndiagnosis_grouped = diagnosis_grouped.rename({'Identifiers': 'count', 'Age': 'mean_age'}, axis=1)\n\n\nfig = px.bar(diagnosis_grouped.groupby(['DX_01']).sum().reset_index().sort_values(by='count', ascending=False).head(20), \n             x='PreInt_DevHx,birthweight_ozs', y='DX_01',  orientation='h', barmode=\"group\")\nfig.update_yaxes(title='')\nfig.update_xaxes(range=[4,8])\nfig.show()\n\n\n\n                                                \n\n\n\nfig = px.box(df_intake, x=\"DX_01\", y=\"PreInt_DevHx,puberty_age\", \n                hover_name=\"DX_01\") # size=\"Age\"\nfig.update_layout(showlegend=False)\nfig.update_xaxes(showticklabels=False, title='Disorders')\nfig.show()\n\n\n                                                \n\n\n\n\npremature = df_intake[df_intake[\"PreInt_DevHx,premature\"]==1].groupby('DX_01').agg({\"PreInt_DevHx,premature\": 'count'})\ntotal = df_intake.groupby('DX_01').agg({\"PreInt_DevHx,premature\": 'count'})\n\npercent = premature / total\n\npiechart(dataframe=percent, y=\"PreInt_DevHx,premature\", hue=\"DX_01\")"
  },
  {
    "objectID": "notebooks/phenotype_models_Anxiety.html",
    "href": "notebooks/phenotype_models_Anxiety.html",
    "title": "MIT Projects",
    "section": "",
    "text": "import os\nimport pandas as pd\nimport seaborn as sns\n\nfrom hbn.constants import Defaults\nfrom hbn.visualization import visualize\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n%load_ext autoreload\n%autoreload 2\n\n%matplotlib inline\n\n# pio.renderers.default = 'iframe'\n\nimport ipywidgets as widgets       # interactive display\n%config InlineBackend.figure_format = 'svg' # other available formats are: 'retina', 'png', 'jpeg', 'pdf'"
  },
  {
    "objectID": "notebooks/phenotype_models_Anxiety.html#child-measures---language-tasks",
    "href": "notebooks/phenotype_models_Anxiety.html#child-measures---language-tasks",
    "title": "MIT Projects",
    "section": "Child Measures - Language Tasks",
    "text": "Child Measures - Language Tasks\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Language Tasks')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_Anxiety.html#parent-measures---demographics",
    "href": "notebooks/phenotype_models_Anxiety.html#parent-measures---demographics",
    "title": "MIT Projects",
    "section": "Parent Measures - Demographics",
    "text": "Parent Measures - Demographics\n\n\nmeasures = ['Affective Reactivity Index-Parent',\n       'Autism Spectrum Screening Questionnaire',\n       'Barratt Simplified Measure of Social Status',\n       'Child Behavior Checklist', 'Child Mind Institute Symptom Checker',\n       'Demographics',\n       'Extended Strengths and Weaknesses Assessment of Normal Behavior-Parent Report',\n       'Financial Support Questionnaire',\n       'Inventory of Callous-Unemotional Traits – Parent Report']\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Demographic Questionnaire Measures')]\n\ndf1 = df1[df1['measures'].isin(measures)]\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_Anxiety.html#parent-measures---demographics-1",
    "href": "notebooks/phenotype_models_Anxiety.html#parent-measures---demographics-1",
    "title": "MIT Projects",
    "section": "Parent Measures - Demographics",
    "text": "Parent Measures - Demographics\n\nmeasures = ['Mood and Feelings Questionnaire', 'Repetitive Behavior Scale',\n       'Screen for Child Anxiety Related Disorders - Parent report',\n       'Social Aptitudes Scale', 'Social Communication Questionnaire',\n       'Social Responsiveness Scale-2',\n       'Strengths and Difficulties Questionnaire (with impact supplement)',\n       'Strengths and Weaknesses Assessment of ADHD and Normal Behavior',\n       'The Columbia Impairment Scale-Parent Report Version',\n       'WHO Disability Assessment Schedule – Parent Report']\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Demographic Questionnaire Measures')]\n\n\ndf1 = df1[df1['measures'].isin(measures)]\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_Anxiety.html#parent-measures---interview-of-emotional-and-psychological-function",
    "href": "notebooks/phenotype_models_Anxiety.html#parent-measures---interview-of-emotional-and-psychological-function",
    "title": "MIT Projects",
    "section": "Parent Measures - Interview of Emotional and Psychological Function",
    "text": "Parent Measures - Interview of Emotional and Psychological Function\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Parent Measures') & \n                  (df_classify['domains']=='Interview of Emotional and Psychological Function')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_Anxiety.html#child-measures---cognitive-testing",
    "href": "notebooks/phenotype_models_Anxiety.html#child-measures---cognitive-testing",
    "title": "MIT Projects",
    "section": "Child Measures - Cognitive Testing",
    "text": "Child Measures - Cognitive Testing\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Cognitive Testing')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_Anxiety.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status",
    "href": "notebooks/phenotype_models_Anxiety.html#child-measures---questionnaire_measures_of_emotional_and_cognitive_status",
    "title": "MIT Projects",
    "section": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status",
    "text": "Child Measures - Questionnaire_Measures_of_Emotional_and_Cognitive_Status\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Child Measures') & \n                  (df_classify['domains']=='Questionnaire Measures of Emotional and Cognitive Status')]\n\n\nvisualize.predictive_modeling(df=df1)"
  },
  {
    "objectID": "notebooks/phenotype_models_Anxiety.html#child-measures-all-other-domains",
    "href": "notebooks/phenotype_models_Anxiety.html#child-measures-all-other-domains",
    "title": "MIT Projects",
    "section": "Child Measures : all other domains",
    "text": "Child Measures : all other domains\n\n\ndf1 = df_classify[(df_classify['target']=='DX_01_Cat_binarize') & \n                  (df_classify['assessment']=='Child Measures')]\n\ncols = ['Physical Fitness and Status', 'Neurologic Function', 'Physiologic Function', 'Vision', 'Motor Skills']\n\ndf1 = df1[df1['domains'].isin(cols)]\n\nvisualize.predictive_modeling(df=df1)\n\n\n                                                \n\n\n\n#import plotly.express as px\n\n# interactive visualization of features\n#@widgets.interact(\n   #             feature=df_feature['features'].unique(),\n   #             )\n\n#def visualize_features(feature):\n  #  df = df_feature[df_feature['features']==feature]\n  #  fig = px.line(df, x='feature_names_sum', y='feature_sum', markers=True, title=feature)\n  #  fig.update_xaxes(showticklabels=False)\n  #  fig.update_xaxes(type='category')\n    \n #   fig.show()"
  },
  {
    "objectID": "notebooks/Child-Behavior-Checklist.html",
    "href": "notebooks/Child-Behavior-Checklist.html",
    "title": "MIT Projects",
    "section": "",
    "text": "import os\nimport seaborn as sns\nimport pandas as pd\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# hbn-specific libraries - make sure you have installed (pipenv install) and activated (pipenv shell) \n# the virtual environment for this project, and make sure you have created an ipykernel for this environment (ipython kernel install --name \"hbn\" --user)\nfrom hbn.constants import Defaults\nfrom hbn.scripts import preprocess_phenotype, make_phenotype_specs\nfrom hbn.data import make_dataset\nfrom hbn.features.feature_selection import phenotype_features\n\n%load_ext autoreload\n%autoreload 2\n\nimport warnings\nwarnings.filterwarnings('ignore')"
  },
  {
    "objectID": "notebooks/Child-Behavior-Checklist.html#child-behavior-checklist---parent-and-teacher-reports",
    "href": "notebooks/Child-Behavior-Checklist.html#child-behavior-checklist---parent-and-teacher-reports",
    "title": "MIT Projects",
    "section": "Child Behavior Checklist - Parent and Teacher Reports",
    "text": "Child Behavior Checklist - Parent and Teacher Reports\n\nseparated by preschool and school aged children\n\n\nRelevent dictionaries (in Release9_DataDic folder)\n\nCBCL_Pre (Preschool - Parent Report)\nCBCL (School-aged - Parent Report)\nTRF_P (Preschool - Teacher Report)\nTRF (School-aged - Teacher Report)\n\n\n# RUN THIS CELL\n# FUNCTIONS\n\ndef get_data(\n    participants, \n    feature_spec, \n    cols_to_keep=['DX_01', 'DX_01_Cat', 'Age', 'Sex', 'Identifiers']\n    ):\n    # get data\n    df = phenotype_features(\n                            target_spec=None,\n                            feature_spec=os.path.join(Defaults.FEATURE_DIR, feature_spec),\n                            participants=participants,\n                            preprocess=False,\n                            drop_identifiers=False\n                            )\n\n    # get summary of clinical diagnosis + other demographics\n    dx = make_dataset.make_summary(save=False)\n    dx = make_dataset._add_race_ethnicity(dataframe=dx)\n\n    # get data from intake interview and merge with clinical summary\n    df = df.merge(dx[cols_to_keep], on='Identifiers')\n    \n    return df\n\ndef get_full_dataframe(\n    spec_info,\n    participants,\n    cols_to_keep='Identifiers|DX_01|Age|Sex|DX_01_Cat',\n    filter_scores=True,\n    ):\n\n    df_all = pd.DataFrame()\n    for info in spec_info:\n        # get data\n        df = get_data(participants, \n                     feature_spec=info['feature_spec'],\n                     cols_to_keep=list(cols_to_keep.split('|'))\n                     )\n        abbrev = info['code'][0]\n\n        # load data dictionary\n        dict_df = pd.read_excel(os.path.join(Defaults.PHENO_DIR, 'Release9_DataDic', abbrev.replace(',','') + '.xlsx'), header=1) \n\n        # remove prefix from variable values - always second column in data dic\n        dict_df.rename(columns={dict_df.columns[0]: \"Question\", dict_df.columns[1]: \"Variable\"}, inplace=True)\n        dict_df['Variable'] = dict_df['Variable'].str.replace(abbrev.replace(',','_'), '')\n\n        # filter dataframe on certain columns and regex patterns\n        df_filter = df.filter(regex=f'{abbrev}|{cols_to_keep}')\n\n        # loop over diagnosis groups and melt `T_scores` column into one\n        # concat each group to one dataframe\n        for name, group in df_filter.groupby('DX_01'):\n            group.columns = group.columns.str.replace(info['code'][1],'')\n            if filter_scores:\n                group = group.filter(regex=f'_T|{cols_to_keep}')\n            tmp = group.melt(id_vars=list(cols_to_keep.split('|'))).rename({'variable':'T_name', 'value': 'T_scores'}, axis=1)\n            tmp = tmp.merge(dict_df[['Question', 'Variable']], left_on=['T_name'], right_on=['Variable'])\n            tmp['Assessment'] = info['Assessment']\n            tmp['Preschool'] = info['Preschool']\n            df_all = pd.concat([tmp, df_all])\n\n    # do some clean up on existing columns\n    #df_all['T_name'] = df_all['T_name'].str.rstrip('.1') # remove .1 from end of variable names\n    df_all['Age_rounded'] = df_all['Age'].round()\n    df_all['Question'] = df_all['Question'].str.replace(\"T Score\", \"T-Score\")\n    \n    return df_all.reset_index(drop=True)\n\n\n## RUN THIS CELL ##\n\n# Preprocess data\n#preprocess_phenotype.run()\n\n# get specs\n#make_phenotype_specs.run()\n\n\n# INPUTS\nparticipants = make_dataset.get_participants(\n                            split='all', \n                            disorders=['ADHD-Combined Type', \n                                        'ADHD-Inattentive Type', \n                                        'ADHD-Hyperactive_Impulsive_Type', \n                                        'Other_Specified_Attention-Deficit_Hyperactivity_Disorder',\n                                        'No_Diagnosis_Given']\n                                        )\n\n\n\nspec_info = [\n    {'Assessment': 'Parent',\n    'code': ['CBCL,', 'CBCL,CBCL_'],\n     'Preschool': False,\n     'feature_spec': 'features-Parent_Measures-Demographic_Questionnaire_Measures-Child_Behavior_Checklist-spec.json'\n    }, \n    {'Assessment': 'Parent',\n     'code': ['CBCL_Pre,','CBCL_Pre,CBCLPre_'],\n     'Preschool': True,\n     'feature_spec': 'features-Parent_Measures-Demographic_Questionnaire_Measures-Child_Behavior_Checklist-spec.json'\n    },\n    {'Assessment': 'Teacher',\n     'code': ['TRF,','TRF,TRF_'],\n     'Preschool': False,\n     'feature_spec': 'features-Teacher_Measures-Child_Behavior_Checklist_–_Teacher_Report_Form-Child_Behavior_Checklist_–_Teacher_Report_Form-spec.json'\n    },\n    {'Assessment': 'Teacher',\n    'code': ['TRF_P,', 'TRF_P,TRF_P_'],\n    'Preschool': True,\n    'feature_spec': 'features-Teacher_Measures-Child_Behavior_Checklist_–_Teacher_Report_Form-Child_Behavior_Checklist_–_Teacher_Report_Form-spec.json'\n    }\n    ]\n\ndf = get_full_dataframe(\n                    spec_info=spec_info,\n                    participants=participants,\n                    cols_to_keep='Identifiers|DX_01|Age|Sex|DX_01_Cat',\n                    filter_scores=True,\n                    )\n\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!"
  },
  {
    "objectID": "notebooks/Child-Behavior-Checklist.html#general-summary---t-scores-total-scores---scaled",
    "href": "notebooks/Child-Behavior-Checklist.html#general-summary---t-scores-total-scores---scaled",
    "title": "MIT Projects",
    "section": "General Summary - T-Scores (Total Scores - Scaled)",
    "text": "General Summary - T-Scores (Total Scores - Scaled)\n\nPresented as barplots and radar plots (note that these plots don’t display error bars)\n\nTeachers give lower T scores than parents, which means that parents rate their children as having more behavioral problems\nThe difference in T scores given by parent and teachers is most prominent in inattentive and combined ADHD types.\n\nThese differences are similar across males and females\nThese differences are only noticeable when children start attending school (i.e. no differences in parent/teacher reporting in preschoolers)\n\nThere are notable differences in T scores between children without a Diagnosis of ADHD (“No Diagnosis Given”) and children with ADHD, the former have lower T scores\nthere is a slight decrease in T scores across development, but only for ADHD group\n\n\ntmp = df[df['T_name']=='Total_T']\n\nsns.barplot(data=tmp, x='DX_01', y='T_scores', hue='Assessment')\nplt.xticks(rotation=45, ha='right');\nplt.ylim([30,65])\nplt.title('All Participants')\n\nText(0.5, 1.0, 'All Participants')\n\n\n\n\n\n\ntmp = df[df['T_name']=='Total_T']\n\ntmp = tmp.groupby(['DX_01', 'Assessment']).mean().reset_index()\n\nfig = px.line_polar(tmp, r=\"T_scores\", theta=\"DX_01\", color=\"Assessment\", line_close=True, range_r=[50,64])\nfig.show()"
  },
  {
    "objectID": "notebooks/Child-Behavior-Checklist.html#across-all-ages-participants-with-neurodevelopmental-disorders-i.e.-adhd-have-higher-t-scores-than-participants-without-a-diagnosis",
    "href": "notebooks/Child-Behavior-Checklist.html#across-all-ages-participants-with-neurodevelopmental-disorders-i.e.-adhd-have-higher-t-scores-than-participants-without-a-diagnosis",
    "title": "MIT Projects",
    "section": "Across all ages, participants with neurodevelopmental disorders (i.e. ADHD) have higher T scores than participants without a diagnosis",
    "text": "Across all ages, participants with neurodevelopmental disorders (i.e. ADHD) have higher T scores than participants without a diagnosis\n\ntmp = df[df['T_name']=='Total_T']\n\nsns.lineplot(data=tmp, x='Age_rounded', y='T_scores', hue='DX_01_Cat')\nplt.xticks(rotation=45, ha='right');\nplt.ylim([20,65])\nplt.title('All Participants')\n\nText(0.5, 1.0, 'All Participants')"
  },
  {
    "objectID": "notebooks/Child-Behavior-Checklist.html#for-female-participants-teacher-and-parent-differences-are-similar-to-group",
    "href": "notebooks/Child-Behavior-Checklist.html#for-female-participants-teacher-and-parent-differences-are-similar-to-group",
    "title": "MIT Projects",
    "section": "For female participants, teacher and parent differences are similar to group",
    "text": "For female participants, teacher and parent differences are similar to group\n\ntmp = df[(df['T_name']=='Total_T') & (df['Sex']=='female')]\n\nsns.barplot(data=tmp, x='DX_01', y='T_scores', hue='Assessment')\nplt.xticks(rotation=45, ha='right');\nplt.ylim([30,70])\nplt.title('Females');\n\n\n\n\n\ntmp = df[(df['T_name']=='Total_T') & (df['Sex']=='female')]\n\ntmp = tmp.groupby(['DX_01', 'Assessment']).mean().reset_index()\n\nfig = px.line_polar(tmp, r=\"T_scores\", theta=\"DX_01\", color=\"Assessment\", line_close=True, range_r=[50,64])\nfig.show()"
  },
  {
    "objectID": "notebooks/Child-Behavior-Checklist.html#for-male-participants-teacher-and-parent-differences-are-similar-to-group",
    "href": "notebooks/Child-Behavior-Checklist.html#for-male-participants-teacher-and-parent-differences-are-similar-to-group",
    "title": "MIT Projects",
    "section": "For male participants, teacher and parent differences are similar to group",
    "text": "For male participants, teacher and parent differences are similar to group\n\ntmp = df[(df['T_name']=='Total_T') & (df['Sex']=='male')]\n\nsns.barplot(data=tmp, x='DX_01', y='T_scores', hue='Assessment')\nplt.xticks(rotation=45, ha='right');\nplt.ylim([30,70])\nplt.title('Males');\n\n\n\n\n\ntmp = df[(df['T_name']=='Total_T') & (df['Sex']=='male')]\n\ntmp = tmp.groupby(['DX_01', 'Assessment']).mean().reset_index()\n\nfig = px.line_polar(tmp, r=\"T_scores\", theta=\"DX_01\", color=\"Assessment\", line_close=True, range_r=[50,64])\nfig.show()"
  },
  {
    "objectID": "notebooks/Child-Behavior-Checklist.html#only-notable-difference-between-teacher-and-parent-reports-for-preschoolers-is-in-other-specifiedadhd-subtype-parents-rate-their-children-as-having-more-behavioral-problems-than-teachers-adhd-inattentive-has-too-few-participants-to-make-an-inference",
    "href": "notebooks/Child-Behavior-Checklist.html#only-notable-difference-between-teacher-and-parent-reports-for-preschoolers-is-in-other-specifiedadhd-subtype-parents-rate-their-children-as-having-more-behavioral-problems-than-teachers-adhd-inattentive-has-too-few-participants-to-make-an-inference",
    "title": "MIT Projects",
    "section": "Only notable difference between teacher and parent reports for preschoolers is in “Other Specified/ADHD” subtype – parents rate their children as having more behavioral problems than teachers (ADHD inattentive has too few participants to make an inference)",
    "text": "Only notable difference between teacher and parent reports for preschoolers is in “Other Specified/ADHD” subtype – parents rate their children as having more behavioral problems than teachers (ADHD inattentive has too few participants to make an inference)\n\ntmp = df[(df['T_name']=='Total_T') & (df['Preschool']==True)]\n\nsns.barplot(data=tmp, x='DX_01', y='T_scores', hue='Assessment')\nplt.xticks(rotation=45, ha='right');\nplt.ylim([30,70])\nplt.title('Preschoolers');\n\n\n\n\n\ntmp = df[(df['T_name']=='Total_T') & (df['Preschool']==True)]\n\ntmp = tmp.groupby(['DX_01', 'Assessment']).mean().reset_index()\n\nfig = px.line_polar(tmp, r=\"T_scores\", theta=\"DX_01\", color=\"Assessment\", line_close=True, range_r=[50,64])\nfig.show()"
  },
  {
    "objectID": "notebooks/Child-Behavior-Checklist.html#preschoolers-with-hyperactiveimpulsive-subtype-are-rated-as-having-more-behavioral-problems-than-their-older-counterparts",
    "href": "notebooks/Child-Behavior-Checklist.html#preschoolers-with-hyperactiveimpulsive-subtype-are-rated-as-having-more-behavioral-problems-than-their-older-counterparts",
    "title": "MIT Projects",
    "section": "Preschoolers with hyperactive/impulsive subtype are rated as having more behavioral problems than their older counterparts",
    "text": "Preschoolers with hyperactive/impulsive subtype are rated as having more behavioral problems than their older counterparts\n\ntmp = df[(df['T_name']=='Total_T')]\ntmp['Preschool_cat'] = tmp['Preschool'].map({True: 'Preschool', False: 'Elementary/Middle School'})\n\ntmp = tmp.groupby(['DX_01', 'Preschool_cat']).mean().reset_index()\n\nfig = px.line_polar(tmp, r=\"T_scores\", theta=\"DX_01\", color=\"Preschool_cat\", line_close=True, range_r=[50,64])\nfig.show()"
  },
  {
    "objectID": "notebooks/Child-Behavior-Checklist.html#t-scores-across-all-participants",
    "href": "notebooks/Child-Behavior-Checklist.html#t-scores-across-all-participants",
    "title": "MIT Projects",
    "section": "T scores across all participants",
    "text": "T scores across all participants\n\ntmp = df[(df['T_name']=='Total_T')]\n\nfig = px.scatter(tmp, x=\"Identifiers\", y=\"T_scores\", color=\"DX_01\",\n                hover_name=\"DX_01\", log_x=False, size_max=60) # size=\"Age\"\nfig.update_layout(showlegend=False)\nfig.update_xaxes(showticklabels=False, title='Participants')\nfig.show()"
  },
  {
    "objectID": "notebooks/Child-Behavior-Checklist.html#t-scores-for-male-and-female-participants-with-adhd",
    "href": "notebooks/Child-Behavior-Checklist.html#t-scores-for-male-and-female-participants-with-adhd",
    "title": "MIT Projects",
    "section": "T scores for male and female participants with ADHD",
    "text": "T scores for male and female participants with ADHD\n\ntmp = df[(df['T_name']=='Total_T') & (df['DX_01_Cat']=='Neurodevelopmental Disorders')]\n\nfig = px.scatter(tmp, x=\"Identifiers\", y=\"T_scores\", color=\"Sex\",\n                hover_name=\"Sex\", log_x=False, size_max=60) # size=\"Age\"\nfig.update_layout(showlegend=False)\nfig.update_xaxes(showticklabels=False, title='Participants')\nfig.show()"
  },
  {
    "objectID": "notebooks/Child-Behavior-Checklist.html#general-summary---dsm-scores",
    "href": "notebooks/Child-Behavior-Checklist.html#general-summary---dsm-scores",
    "title": "MIT Projects",
    "section": "General Summary - DSM Scores",
    "text": "General Summary - DSM Scores\n\nChildren with neurodevelopmental disorders (i.e. ADHD diagnoses) have on average higher T scores on all DSM categories\n\ntmp = df[df['T_name'].str.find('DSM')==0]\n\n\nsns.barplot(data=tmp, x='Question', y='T_scores', hue='DX_01_Cat')\nplt.xticks(rotation=45, ha='right');\nplt.ylim([30,75])\nplt.legend(loc='center left', bbox_to_anchor=(1, 0.5))\nplt.title('');"
  },
  {
    "objectID": "notebooks/Child-Behavior-Checklist.html#general-sumary---syndrome-scale-scores",
    "href": "notebooks/Child-Behavior-Checklist.html#general-sumary---syndrome-scale-scores",
    "title": "MIT Projects",
    "section": "General Sumary - Syndrome Scale Scores",
    "text": "General Sumary - Syndrome Scale Scores\n\nChildren with neurodevelopmental disorders (i.e. ADHD diagnoses) have on average higher T scores on all Syndrome Scales\n\ntmp = df[df['T_name'].str.find('DSM')==-1]\n\nsns.barplot(data=tmp, x='Question', y='T_scores', hue='DX_01_Cat')\nplt.xticks(rotation=45, ha='right');\nplt.ylim([30,75])\nplt.legend(loc='center left', bbox_to_anchor=(1, 0.5))\nplt.title('');"
  },
  {
    "objectID": "notebooks/Child-Behavior-Checklist.html#radar-plots---another-way-of-visualizing-the-barplots",
    "href": "notebooks/Child-Behavior-Checklist.html#radar-plots---another-way-of-visualizing-the-barplots",
    "title": "MIT Projects",
    "section": "Radar Plots - another way of visualizing the barplots",
    "text": "Radar Plots - another way of visualizing the barplots\n\nerror bars aren’t represented here - these are average scores\n\ntmp = df[df['T_name'].str.find('DSM')==-1]\n\ntmp = tmp.groupby(['DX_01_Cat', 'Question']).mean().reset_index()\n\nfig = px.line_polar(tmp, r=\"T_scores\", theta=\"Question\", color=\"DX_01_Cat\", line_close=True, range_r=[50,68])\nfig.show()\n\n\n                                                \n\n\n\ntmp = df[df['T_name'].str.find('DSM')==0]\n\ntmp = tmp.groupby(['DX_01_Cat', 'Question']).mean().reset_index()\n\nfig = px.line_polar(tmp, r=\"T_scores\", theta=\"Question\", color=\"DX_01_Cat\", line_close=True, range_r=[50,65])\nfig.show()"
  },
  {
    "objectID": "notebooks/Child-Behavior-Checklist.html#children-with-hyperactiveimpulsive-subtype-have-highest-scores-on-5-dsm-measures-oppositional-defiant-problems-conduct-problems-developmental-problems-depressive-problems-and-anxiety",
    "href": "notebooks/Child-Behavior-Checklist.html#children-with-hyperactiveimpulsive-subtype-have-highest-scores-on-5-dsm-measures-oppositional-defiant-problems-conduct-problems-developmental-problems-depressive-problems-and-anxiety",
    "title": "MIT Projects",
    "section": "Children with Hyperactive/Impulsive subtype have highest scores on 5 DSM measures: oppositional defiant problems, conduct problems, developmental problems, depressive problems, and anxiety)",
    "text": "Children with Hyperactive/Impulsive subtype have highest scores on 5 DSM measures: oppositional defiant problems, conduct problems, developmental problems, depressive problems, and anxiety)\nMultivariate information for ADHD subtypes and T Scores is plotted here using radar plots – too much information to plot on a barplot\n\ntmp = df[(df['T_name'].str.find('DSM')==0)]\n\ntmp = tmp.groupby(['DX_01', 'Question']).mean().reset_index()\n\nfig = px.line_polar(tmp, r=\"T_scores\", theta=\"Question\", color=\"DX_01\", line_close=True, range_r=[50,70])\nfig.show()"
  },
  {
    "objectID": "notebooks/Child-Behavior-Checklist.html#syndrome-scale-scores-across-adhd-subtypes",
    "href": "notebooks/Child-Behavior-Checklist.html#syndrome-scale-scores-across-adhd-subtypes",
    "title": "MIT Projects",
    "section": "Syndrome Scale scores across ADHD subtypes",
    "text": "Syndrome Scale scores across ADHD subtypes\n\nChildren with inattentive type have highest scores on the following measures: withdrawn, emotional reaction, internalizing problems\nChildren with Combined type have highest scores on the following measures (followed closely by hyperactive/impulsive type): rule breaking, sleep problems, social problems, somatic complaints, thought problems, attention problems\n\n\ntmp = df[(df['T_name'].str.find('DSM')==-1)]\n\ntmp = tmp.groupby(['DX_01', 'Question']).mean().reset_index()\n\nfig = px.line_polar(tmp, r=\"T_scores\", theta=\"Question\", color=\"DX_01\", line_close=True, range_r=[50,70])\nfig.show()"
  },
  {
    "objectID": "notebooks/Child-Behavior-Checklist.html#dsm-scores-across-mf-for-each-adhd-subtype",
    "href": "notebooks/Child-Behavior-Checklist.html#dsm-scores-across-mf-for-each-adhd-subtype",
    "title": "MIT Projects",
    "section": "DSM scores across M/F for each ADHD subtype",
    "text": "DSM scores across M/F for each ADHD subtype\n\nGirls with adhd combined type have higher scores on 7/9 measures, particularly on affective and ADHD scores\nBoys with hyperactive/impulsive adhd have higher scores than girls on almost all measures\nBoys with inattentive adhd have higher ASD scores, and other scores are roughly similar across M and F\nChildren with no diagnoses have roughly similar scores on all measures, except that girls have higher scores on affective problems\nGirls with other specified attention-deficit/ADHD subtype have sig. higher ASD problems score\n\n\ntmp = df[(df['T_name'].str.find('DSM')==0)]\n\nfor name, group in tmp.groupby('DX_01'):\n    group = group.groupby(['Question', 'Sex']).mean().reset_index()\n    fig = px.line_polar(group, r=\"T_scores\", theta=\"Question\", color=\"Sex\", line_close=True, range_r=[50,75], title=name)\n    fig.show()"
  },
  {
    "objectID": "notebooks/Child-Behavior-Checklist.html#syndrome-scale-scores-across-mf-for-each-adhd-subtype",
    "href": "notebooks/Child-Behavior-Checklist.html#syndrome-scale-scores-across-mf-for-each-adhd-subtype",
    "title": "MIT Projects",
    "section": "Syndrome Scale Scores across M/F for each ADHD subtype",
    "text": "Syndrome Scale Scores across M/F for each ADHD subtype\n\ngirls with adhd combined type have hgiher scores on attention problems and sleep problems\nboys with hyperactive type have higher scores on externalizing and internalizing problems\nboys with inattentive type have higher scores on emotional reaction and internalizing problems\ngirls with other specified/hyperactive type have higher scores on externalizing and internalizing problems\n\n\ntmp = df[(df['T_name'].str.find('DSM')==-1)]\n\nfor name, group in tmp.groupby('DX_01'):\n    group = group.groupby(['Question', 'Sex']).mean().reset_index()\n    fig = px.line_polar(group, r=\"T_scores\", theta=\"Question\", color=\"Sex\", line_close=True, range_r=[50,75], title=name)\n    fig.show()"
  },
  {
    "objectID": "notebooks/Child-Behavior-Checklist.html#specific-questions-of-interest-from-child-behavior-checklist",
    "href": "notebooks/Child-Behavior-Checklist.html#specific-questions-of-interest-from-child-behavior-checklist",
    "title": "MIT Projects",
    "section": "Specific Questions of Interest from Child Behavior Checklist",
    "text": "Specific Questions of Interest from Child Behavior Checklist\n\nAre there specific items from the CBCL (Preschool or Older; Teacher or Parent) that we want to investigate?"
  },
  {
    "objectID": "notebooks/fig1-ADHD+gender.html",
    "href": "notebooks/fig1-ADHD+gender.html",
    "title": "MIT Projects",
    "section": "",
    "text": "import seaborn as sns\nimport plotly.express as px\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport plotly.io as pio\nfrom matplotlib.gridspec import GridSpec\nimport matplotlib.patches as mpatches\nfrom tabulate import tabulate\n\nfrom hbn.visualization import visualize as vis\n\n%load_ext autoreload\n%autoreload 2\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nThe autoreload extension is already loaded. To reload it, use:\n  %reload_ext autoreload"
  },
  {
    "objectID": "notebooks/fig1-ADHD+gender.html#descriptive-statistics",
    "href": "notebooks/fig1-ADHD+gender.html#descriptive-statistics",
    "title": "MIT Projects",
    "section": "Descriptive Statistics",
    "text": "Descriptive Statistics\n\nplt.clf()\n#vis.plotting_style()\nx_pos = -0.1\ny_pos = 1.1\nlabelsize = 40\n\nfig = plt.figure()\ngs = GridSpec(2, 2, figure=fig)\n\nax = fig.add_subplot(gs[0,0])\nax = sns.countplot(data=df, y='DX_01', hue='Sex', ax=ax)\nax.set_ylabel('')\nax.set_title('Participant count across diagnoses')\nax.text(x_pos, y_pos, 'A', transform=ax.transAxes, fontsize=labelsize, verticalalignment='top')\nax.legend_.set_title(None)\n\nax = fig.add_subplot(gs[0,1])\nax = sns.violinplot(x='DX_01', y='Age', hue='Sex', split=True, data=df, ax=ax)\nplt.xticks(rotation=45, ha='right');\nax.set_xticklabels('')\nax.set_xlabel('')\nax.set_title('Participant ages across diagnoses')\nax.text(x_pos, y_pos, 'B', transform=ax.transAxes, fontsize=labelsize, verticalalignment='top')\nax.legend_.set_title(None)\n\nax = fig.add_subplot(gs[1,0])\ntmp = df[df['PreInt_Demos_Fam,Child_Race_cat'].isin(['Unknown', 'Hispanic', 'Two or more races', 'Asian',\n       'Black/African American', 'White/Caucasian'])]\nax = sns.countplot(data=tmp, y='PreInt_Demos_Fam,Child_Race_cat', hue='Sex', ax=ax)\nax.set_ylabel('')\nax.set_title('Participant count across diagnoses')\nax.text(x_pos, y_pos, 'C', transform=ax.transAxes, fontsize=labelsize, verticalalignment='top')\nax.legend_.set_title(None)\n\n\nax = fig.add_subplot(gs[1,1])\nax = sns.violinplot(x='DX_01', y='comorbidities', hue='Sex', split=True, data=df, ax=ax)\nplt.xticks(rotation=45, ha='right');\nax.set_ylabel('Number of comorbidities')\nax.set_xlabel('')\nax.set_title('Participant comorbidities across diagnoses')\nax.text(x_pos, y_pos, 'D', transform=ax.transAxes, fontsize=labelsize, verticalalignment='top')\nax.legend_.set_title(None)\n\nplt.subplots_adjust(left=0.125, bottom=0.001, right=2.0, top=2.0, wspace=.2, hspace=.3)\n\n#save_path = os.path.join(dirs.figure, f'fig1.svg')\n#plt.savefig(save_path, bbox_inches=\"tight\", dpi=300)\n\n<Figure size 672x480 with 0 Axes>"
  },
  {
    "objectID": "notebooks/fig1-ADHD+gender.html#participant-count",
    "href": "notebooks/fig1-ADHD+gender.html#participant-count",
    "title": "MIT Projects",
    "section": "Participant Count",
    "text": "Participant Count\n\ntmp = df.groupby(\n    ['DX_01', 'Sex']).count()[['Identifiers']].reset_index().rename(\n    {'Identifiers': 'Participant Count'}, axis=1)\n\nhead = ['Diagnosis', 'Sex', '# of Participants']\nprint(tabulate(np.array(tmp), headers=head, tablefmt=\"grid\"))\n\n+----------------------------------------------------------+--------+---------------------+\n| Diagnosis                                                | Sex    |   # of Participants |\n+==========================================================+========+=====================+\n| ADHD-Combined Type                                       | female |                 195 |\n+----------------------------------------------------------+--------+---------------------+\n| ADHD-Combined Type                                       | male   |                 670 |\n+----------------------------------------------------------+--------+---------------------+\n| ADHD-Hyperactive/Impulsive Type                          | female |                  34 |\n+----------------------------------------------------------+--------+---------------------+\n| ADHD-Hyperactive/Impulsive Type                          | male   |                  93 |\n+----------------------------------------------------------+--------+---------------------+\n| ADHD-Inattentive Type                                    | female |                 263 |\n+----------------------------------------------------------+--------+---------------------+\n| ADHD-Inattentive Type                                    | male   |                 535 |\n+----------------------------------------------------------+--------+---------------------+\n| No Diagnosis Given                                       | female |                 175 |\n+----------------------------------------------------------+--------+---------------------+\n| No Diagnosis Given                                       | male   |                 198 |\n+----------------------------------------------------------+--------+---------------------+\n| Other Specified Attention-Deficit/Hyperactivity Disorder | female |                  43 |\n+----------------------------------------------------------+--------+---------------------+\n| Other Specified Attention-Deficit/Hyperactivity Disorder | male   |                  72 |\n+----------------------------------------------------------+--------+---------------------+"
  },
  {
    "objectID": "notebooks/fig1-ADHD+gender.html#age",
    "href": "notebooks/fig1-ADHD+gender.html#age",
    "title": "MIT Projects",
    "section": "Age",
    "text": "Age\n\ntmp = df.groupby(\n    ['DX_01', 'Sex'])['Age'].agg(\n    {'mean', 'std'}).reset_index().rename(\n    {'mean': 'mean (a]\n     ge)', 'std': 'std (age)'}, axis=1)\n\nhead = tmp.columns.tolist()\nprint(tabulate(np.array(tmp), headers=head, tablefmt=\"grid\"))\n\n+----------------------------------------------------------+--------+-------------+--------------+\n| DX_01                                                    | Sex    |   std (age) |   mean (age) |\n+==========================================================+========+=============+==============+\n| ADHD-Combined Type                                       | female |     2.857   |      9.22051 |\n+----------------------------------------------------------+--------+-------------+--------------+\n| ADHD-Combined Type                                       | male   |     2.88814 |      9.24627 |\n+----------------------------------------------------------+--------+-------------+--------------+\n| ADHD-Hyperactive/Impulsive Type                          | female |     2.14534 |      7.94118 |\n+----------------------------------------------------------+--------+-------------+--------------+\n| ADHD-Hyperactive/Impulsive Type                          | male   |     2.01264 |      7.33333 |\n+----------------------------------------------------------+--------+-------------+--------------+\n| ADHD-Inattentive Type                                    | female |     3.10462 |     10.4601  |\n+----------------------------------------------------------+--------+-------------+--------------+\n| ADHD-Inattentive Type                                    | male   |     3.14544 |     10.8879  |\n+----------------------------------------------------------+--------+-------------+--------------+\n| No Diagnosis Given                                       | female |     3.57301 |     10.0971  |\n+----------------------------------------------------------+--------+-------------+--------------+\n| No Diagnosis Given                                       | male   |     3.40447 |      9.76768 |\n+----------------------------------------------------------+--------+-------------+--------------+\n| Other Specified Attention-Deficit/Hyperactivity Disorder | female |     3.38471 |      9.13953 |\n+----------------------------------------------------------+--------+-------------+--------------+\n| Other Specified Attention-Deficit/Hyperactivity Disorder | male   |     3.09674 |      9.70833 |\n+----------------------------------------------------------+--------+-------------+--------------+"
  },
  {
    "objectID": "notebooks/fig1-ADHD+gender.html#raceethnicity",
    "href": "notebooks/fig1-ADHD+gender.html#raceethnicity",
    "title": "MIT Projects",
    "section": "Race/Ethnicity",
    "text": "Race/Ethnicity\n\ntmp = df[df['PreInt_Demos_Fam,Child_Race_cat'].isin(['Unknown', 'Hispanic', 'Two or more races', 'Asian',\n       'Black/African American', 'White/Caucasian'])]\n\n\ntmp = df.groupby(\n    ['PreInt_Demos_Fam,Child_Race_cat', 'Sex']).count()[['Identifiers']].reset_index().rename(\n    {'Identifiers': 'Participant Count'}, axis=1)\n\nhead = ['Race/Ethnicity', 'Sex', '# of Participants']\nprint(tabulate(np.array(tmp), headers=head, tablefmt=\"grid\"))\n\n+----------------------------------------+--------+---------------------+\n| Race/Ethnicity                         | Sex    |   # of Participants |\n+========================================+========+=====================+\n| Asian                                  | female |                  30 |\n+----------------------------------------+--------+---------------------+\n| Asian                                  | male   |                  45 |\n+----------------------------------------+--------+---------------------+\n| Black/African American                 | female |                  85 |\n+----------------------------------------+--------+---------------------+\n| Black/African American                 | male   |                 218 |\n+----------------------------------------+--------+---------------------+\n| Hispanic                               | female |                  53 |\n+----------------------------------------+--------+---------------------+\n| Hispanic                               | male   |                 143 |\n+----------------------------------------+--------+---------------------+\n| Native American                        | female |                   2 |\n+----------------------------------------+--------+---------------------+\n| Native American                        | male   |                   3 |\n+----------------------------------------+--------+---------------------+\n| Native Hawaiian/Other Pacific Islander | female |                   1 |\n+----------------------------------------+--------+---------------------+\n| Native Hawaiian/Other Pacific Islander | male   |                   1 |\n+----------------------------------------+--------+---------------------+\n| Two or more races                      | female |                 120 |\n+----------------------------------------+--------+---------------------+\n| Two or more races                      | male   |                 241 |\n+----------------------------------------+--------+---------------------+\n| Unknown                                | female |                  60 |\n+----------------------------------------+--------+---------------------+\n| Unknown                                | male   |                 103 |\n+----------------------------------------+--------+---------------------+\n| White/Caucasian                        | female |                 359 |\n+----------------------------------------+--------+---------------------+\n| White/Caucasian                        | male   |                 814 |\n+----------------------------------------+--------+---------------------+"
  },
  {
    "objectID": "notebooks/fig1-ADHD+gender.html#comorbidities",
    "href": "notebooks/fig1-ADHD+gender.html#comorbidities",
    "title": "MIT Projects",
    "section": "Comorbidities",
    "text": "Comorbidities\n\ntmp = df.groupby(\n    ['DX_01', 'Sex'])['comorbidities'].agg(\n    {'mean', 'std'}).reset_index().rename(\n    {'mean': 'mean (comorbidities)', 'std': 'std (comorbidities)'}, axis=1)\n\nhead = tmp.columns.tolist()\nprint(tabulate(np.array(tmp), headers=head, tablefmt=\"grid\"))\n\n+----------------------------------------------------------+--------+-----------------------+------------------------+\n| DX_01                                                    | Sex    |   std (comorbidities) |   mean (comorbidities) |\n+==========================================================+========+=======================+========================+\n| ADHD-Combined Type                                       | female |               1.49808 |                1.84615 |\n+----------------------------------------------------------+--------+-----------------------+------------------------+\n| ADHD-Combined Type                                       | male   |               1.54492 |                1.79104 |\n+----------------------------------------------------------+--------+-----------------------+------------------------+\n| ADHD-Hyperactive/Impulsive Type                          | female |               1.47135 |                1.32353 |\n+----------------------------------------------------------+--------+-----------------------+------------------------+\n| ADHD-Hyperactive/Impulsive Type                          | male   |               1.30978 |                1.62366 |\n+----------------------------------------------------------+--------+-----------------------+------------------------+\n| ADHD-Inattentive Type                                    | female |               1.40127 |                1.57034 |\n+----------------------------------------------------------+--------+-----------------------+------------------------+\n| ADHD-Inattentive Type                                    | male   |               1.41396 |                1.48411 |\n+----------------------------------------------------------+--------+-----------------------+------------------------+\n| No Diagnosis Given                                       | female |               0       |                0       |\n+----------------------------------------------------------+--------+-----------------------+------------------------+\n| No Diagnosis Given                                       | male   |               0       |                0       |\n+----------------------------------------------------------+--------+-----------------------+------------------------+\n| Other Specified Attention-Deficit/Hyperactivity Disorder | female |               1.48414 |                1.18605 |\n+----------------------------------------------------------+--------+-----------------------+------------------------+\n| Other Specified Attention-Deficit/Hyperactivity Disorder | male   |               1.45344 |                1.26389 |\n+----------------------------------------------------------+--------+-----------------------+------------------------+"
  },
  {
    "objectID": "notebooks/fig1-ADHD+gender.html#cgas-score-general-cognitive-functioning",
    "href": "notebooks/fig1-ADHD+gender.html#cgas-score-general-cognitive-functioning",
    "title": "MIT Projects",
    "section": "CGAS Score (General Cognitive Functioning)",
    "text": "CGAS Score (General Cognitive Functioning)\n\nplt.clf()\nvis.plotting_style()\nx_pos = -0.1\ny_pos = 1.1\nlabelsize = 40\n\nfig = plt.figure()\ngs = GridSpec(1, 2, figure=fig)\n\nax = fig.add_subplot(gs[0,0])\nax = sns.violinplot(data=df_CGAS, x='Sex', y='CGAS_Score', ax=ax)\nax.set_xlabel('')\nax.set_title('General Cognitive Functioning (Sex)')\nax.text(x_pos, y_pos, 'A', transform=ax.transAxes, fontsize=labelsize, verticalalignment='top')\n\nax = fig.add_subplot(gs[0,1])\nax = sns.violinplot(data=df_CGAS, x='DX_01', y='CGAS_Score', hue='Sex', split=True, ax=ax)\nplt.xticks(rotation=45, ha='right');\nax.set_xlabel('')\nax.set_title('General Cognitive Functioning (Diagnosis)')\nax.text(x_pos, y_pos, 'B', transform=ax.transAxes, fontsize=labelsize, verticalalignment='top')\nax.legend_.set_title(None)\n\nplt.subplots_adjust(left=0.125, bottom=0.001, right=2.0, top=2.0, wspace=.2, hspace=.3)\n\n<Figure size 672x480 with 0 Axes>\n\n\n\n\n\n\ntmp = df_CGAS.groupby(\n    ['DX_01', 'Sex'])['CGAS_Score'].agg(\n    {'mean', 'std'}).reset_index().rename(\n    {'mean': 'mean (CGAS)', 'std': 'std (CGAS)'}, axis=1)\n\nhead = tmp.columns.tolist()\nprint(tabulate(np.array(tmp), headers=head, tablefmt=\"grid\"))\n\n+----------------------------------------------------------+--------+--------------+---------------+\n| DX_01                                                    | Sex    |   std (CGAS) |   mean (CGAS) |\n+==========================================================+========+==============+===============+\n| ADHD-Combined Type                                       | female |     10.7984  |       62.3455 |\n+----------------------------------------------------------+--------+--------------+---------------+\n| ADHD-Combined Type                                       | male   |     10.7143  |       62.2609 |\n+----------------------------------------------------------+--------+--------------+---------------+\n| ADHD-Hyperactive/Impulsive Type                          | female |     13.3745  |       63.8667 |\n+----------------------------------------------------------+--------+--------------+---------------+\n| ADHD-Hyperactive/Impulsive Type                          | male   |     10.8406  |       61.8875 |\n+----------------------------------------------------------+--------+--------------+---------------+\n| ADHD-Inattentive Type                                    | female |     10.6611  |       67.4135 |\n+----------------------------------------------------------+--------+--------------+---------------+\n| ADHD-Inattentive Type                                    | male   |     10.8259  |       65.7895 |\n+----------------------------------------------------------+--------+--------------+---------------+\n| No Diagnosis Given                                       | female |     10.8279  |       77.844  |\n+----------------------------------------------------------+--------+--------------+---------------+\n| No Diagnosis Given                                       | male   |     10.162   |       74.8832 |\n+----------------------------------------------------------+--------+--------------+---------------+\n| Other Specified Attention-Deficit/Hyperactivity Disorder | female |      8.20146 |       65.0286 |\n+----------------------------------------------------------+--------+--------------+---------------+\n| Other Specified Attention-Deficit/Hyperactivity Disorder | male   |     12.2603  |       64.5833 |\n+----------------------------------------------------------+--------+--------------+---------------+"
  },
  {
    "objectID": "notebooks/fig1-ADHD+gender.html#year-of-enrollment",
    "href": "notebooks/fig1-ADHD+gender.html#year-of-enrollment",
    "title": "MIT Projects",
    "section": "Year of Enrollment",
    "text": "Year of Enrollment\n\nplt.clf()\nvis.plotting_style()\nx_pos = -0.1\ny_pos = 1.1\nlabelsize = 40\n\nfig = plt.figure()\ngs = GridSpec(1, 1, figure=fig)\n\ntmp = df.groupby(\n    ['Enroll_Year', 'DX_01', 'Sex']).count()[['Identifiers']].reset_index().rename(\n    {'Identifiers': 'Participant Count'}, axis=1)\n\nax = fig.add_subplot(gs[0,0])\nax = sns.lineplot(data=tmp, x='Enroll_Year', y='Participant Count', ax=ax)\nax.set_xlabel('')\nax.set_title('Participant Enrollment');\n\n<Figure size 1228.8x844.8 with 0 Axes>\n\n\n\n\n\n\ntmp = df.groupby(\n    ['Enroll_Year', 'DX_01', 'Sex']).count()[['Identifiers']].reset_index().rename(\n    {'Identifiers': 'Participant Count'}, axis=1)\n\nhead = ['Enrollment Year', 'Diagnosis', 'Sex', '# of Participants']\nprint(tabulate(np.array(tmp), headers=head, tablefmt=\"grid\"))\n\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|   Enrollment Year | Diagnosis                                                | Sex    |   # of Participants |\n+===================+==========================================================+========+=====================+\n|              2015 | ADHD-Combined Type                                       | female |                   4 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2015 | ADHD-Combined Type                                       | male   |                  15 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2015 | ADHD-Hyperactive/Impulsive Type                          | male   |                   1 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2015 | ADHD-Inattentive Type                                    | female |                   5 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2015 | ADHD-Inattentive Type                                    | male   |                   6 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2015 | No Diagnosis Given                                       | female |                  12 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2015 | No Diagnosis Given                                       | male   |                   9 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2015 | Other Specified Attention-Deficit/Hyperactivity Disorder | female |                   1 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2015 | Other Specified Attention-Deficit/Hyperactivity Disorder | male   |                   3 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2016 | ADHD-Combined Type                                       | female |                  25 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2016 | ADHD-Combined Type                                       | male   |                  78 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2016 | ADHD-Hyperactive/Impulsive Type                          | female |                   3 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2016 | ADHD-Hyperactive/Impulsive Type                          | male   |                  10 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2016 | ADHD-Inattentive Type                                    | female |                  16 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2016 | ADHD-Inattentive Type                                    | male   |                  38 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2016 | No Diagnosis Given                                       | female |                  49 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2016 | No Diagnosis Given                                       | male   |                  43 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2016 | Other Specified Attention-Deficit/Hyperactivity Disorder | female |                   6 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2016 | Other Specified Attention-Deficit/Hyperactivity Disorder | male   |                  11 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2017 | ADHD-Combined Type                                       | female |                  35 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2017 | ADHD-Combined Type                                       | male   |                 141 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2017 | ADHD-Hyperactive/Impulsive Type                          | female |                   7 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2017 | ADHD-Hyperactive/Impulsive Type                          | male   |                  20 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2017 | ADHD-Inattentive Type                                    | female |                  48 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2017 | ADHD-Inattentive Type                                    | male   |                  99 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2017 | No Diagnosis Given                                       | female |                  37 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2017 | No Diagnosis Given                                       | male   |                  57 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2017 | Other Specified Attention-Deficit/Hyperactivity Disorder | female |                   9 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2017 | Other Specified Attention-Deficit/Hyperactivity Disorder | male   |                  13 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2018 | ADHD-Combined Type                                       | female |                  47 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2018 | ADHD-Combined Type                                       | male   |                 153 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2018 | ADHD-Hyperactive/Impulsive Type                          | female |                   8 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2018 | ADHD-Hyperactive/Impulsive Type                          | male   |                  10 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2018 | ADHD-Inattentive Type                                    | female |                  68 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2018 | ADHD-Inattentive Type                                    | male   |                 145 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2018 | No Diagnosis Given                                       | female |                  29 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2018 | No Diagnosis Given                                       | male   |                  25 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2018 | Other Specified Attention-Deficit/Hyperactivity Disorder | female |                  10 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2018 | Other Specified Attention-Deficit/Hyperactivity Disorder | male   |                  17 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2019 | ADHD-Combined Type                                       | female |                  43 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2019 | ADHD-Combined Type                                       | male   |                 139 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2019 | ADHD-Hyperactive/Impulsive Type                          | female |                   9 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2019 | ADHD-Hyperactive/Impulsive Type                          | male   |                  26 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2019 | ADHD-Inattentive Type                                    | female |                  54 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2019 | ADHD-Inattentive Type                                    | male   |                 122 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2019 | No Diagnosis Given                                       | female |                  25 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2019 | No Diagnosis Given                                       | male   |                  30 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2019 | Other Specified Attention-Deficit/Hyperactivity Disorder | female |                  12 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2019 | Other Specified Attention-Deficit/Hyperactivity Disorder | male   |                  15 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2020 | ADHD-Combined Type                                       | female |                  23 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2020 | ADHD-Combined Type                                       | male   |                  87 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2020 | ADHD-Hyperactive/Impulsive Type                          | female |                   3 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2020 | ADHD-Hyperactive/Impulsive Type                          | male   |                  12 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2020 | ADHD-Inattentive Type                                    | female |                  41 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2020 | ADHD-Inattentive Type                                    | male   |                  73 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2020 | No Diagnosis Given                                       | female |                  15 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2020 | No Diagnosis Given                                       | male   |                  17 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2020 | Other Specified Attention-Deficit/Hyperactivity Disorder | female |                   2 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2020 | Other Specified Attention-Deficit/Hyperactivity Disorder | male   |                   7 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2021 | ADHD-Combined Type                                       | female |                  18 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2021 | ADHD-Combined Type                                       | male   |                  52 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2021 | ADHD-Hyperactive/Impulsive Type                          | female |                   3 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2021 | ADHD-Hyperactive/Impulsive Type                          | male   |                  12 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2021 | ADHD-Inattentive Type                                    | female |                  29 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2021 | ADHD-Inattentive Type                                    | male   |                  51 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2021 | No Diagnosis Given                                       | female |                   6 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2021 | No Diagnosis Given                                       | male   |                  16 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2021 | Other Specified Attention-Deficit/Hyperactivity Disorder | female |                   3 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2021 | Other Specified Attention-Deficit/Hyperactivity Disorder | male   |                   6 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2022 | ADHD-Combined Type                                       | male   |                   5 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2022 | ADHD-Hyperactive/Impulsive Type                          | female |                   1 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2022 | ADHD-Hyperactive/Impulsive Type                          | male   |                   2 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2022 | ADHD-Inattentive Type                                    | female |                   2 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2022 | ADHD-Inattentive Type                                    | male   |                   1 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2022 | No Diagnosis Given                                       | female |                   2 |\n+-------------------+----------------------------------------------------------+--------+---------------------+\n|              2022 | No Diagnosis Given                                       | male   |                   1 |\n+-------------------+----------------------------------------------------------+--------+---------------------+"
  }
]